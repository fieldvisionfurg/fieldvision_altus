<map id="FeatureTrackerControl" name="FeatureTrackerControl">
<area shape="rect" id="node2" href="$class_tracker_control.html" title="{TrackerControl\&lt; cv\l::Mat, std::vector\&lt;\l cv::Point2f \&gt; \&gt;\n||+ TrackerControl()\l+ TrackerControl()\l+ setTracker()\l+ pause()\l+ start()\l+ exportLog()\l+ resetLog()\l+ ~TrackerControl()\l# drawResults()\l# drawObject()\l}" alt="" coords="609,1095,744,1333"/>
<area shape="rect" id="node3" href="$class_process_control.html" title="Esta classe é responsável por controlar a execuçãoo de um algoritmo de visão computacional. " alt="" coords="311,786,482,1025"/>
<area shape="rect" id="node4" href="$class_process_widget.html" title="Interface gráfica para um objeto ProcessControl. Mostra funcionalidades básicas de controle (fechar..." alt="" coords="5,492,169,716"/>
<area shape="rect" id="node6" href="$class_frame_server_control_widget.html" title="Esta classe controla a execução e representação gráfica de um vídeo (FrameServer). " alt="" coords="194,521,399,687"/>
<area shape="rect" id="node8" href="$class_image_viewer_cv.html" title="Esta classe implementa um widget capaz de mostrar uma imagem do tipo cv::Mat. " alt="" coords="213,132,351,429"/>
<area shape="rect" id="node9" href="$class_vision_core_1_1_async_1_1_async_frame_server_wrap.html" title="{AsyncFrameServerWrap\l\&lt; cv::Mat \&gt;\n||+ AsyncFrameServerWrap()\l+ ~AsyncFrameServerWrap()\l+ start()\l+ stop()\l+ started()\l+ finished()\l+ getCurrentFrame()\l+ lockCurrentFrame()\l+ unlockCurrentFrame()\l+ getThreadPtr()\land 7 more...\l}" alt="" coords="376,161,567,400"/>
<area shape="rect" id="node10" href="$class_vision_core_1_1_interfaces_1_1_frame_server.html" title="{FrameServer\&lt; cv::Mat \&gt;\n||+ captureFrame()\l+ hasNext()\l+ releaseServer()\l+ ~FrameServer()\l}" alt="" coords="591,220,752,341"/>
<area shape="rect" id="node12" href="$class_vision_core_1_1_abstractions_1_1_tracker_logger.html" title="{TrackerLogger\&lt; cv::\lMat, std::vector\&lt; cv\l::Point2f \&gt; \&gt;\n||+ TrackerLogger()\l+ ~TrackerLogger()\l+ averageDuration()\l+ getData()\l+ lockData()\l+ unlockData()\l+ writeToFileAsCsv()\l+ resetLog()\l+ update()\l+ getLastTrack()\l+ lostTrack()\l}" alt="" coords="706,779,847,1032"/>
<area shape="rect" id="node13" href="$class_vision_core_1_1_interfaces_1_1_tracker.html" title="{Tracker\&lt; cv::Mat, std\l::vector\&lt; cv::Point2f \&gt; \&gt;\n|# m_lostTrack\l|+ Tracker()\l+ getLastTrack()\l+ lostTrack()\l+ update()\l+ ~Tracker()\l# lostTrack()\l}" alt="" coords="654,521,814,687"/>
<area shape="rect" id="node14" href="$class_vision_core_1_1_async_1_1_async_tracker_wrap.html" title="{AsyncTrackerWrap\&lt; cv\l::Mat, std::vector\&lt; cv\l::Point2f \&gt; \&gt;\n||+ AsyncTrackerWrap()\l+ ~AsyncTrackerWrap()\l+ setLostTrackCallback()\l+ getTracker()\l+ setTracker()\l}" alt="" coords="872,823,1039,988"/>
<area shape="rect" id="node15" href="$class_vision_core_1_1_async_1_1_async_vision_execution.html" title="{AsyncVisionExecution\l\&lt; cv::Mat, std::vector\l\&lt; cv::Point2f \&gt; \&gt;\n||+ ~AsyncVisionExecution()\l+ setCallback()\l+ start()\l+ stop()\l+ started()\l+ getThreadPtr()\l# AsyncVisionExecution()\l}" alt="" coords="865,507,1046,701"/>
</map>
