<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>CvWorks: D:/FURG/Software/CvWorksRelease1/Components/VisionImplementationCv/ColorBlobDetectorHF.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="C3.jpg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">CvWorks
   &#160;<span id="projectnumber">0.4</span>
   </div>
   <div id="projectbrief">Computer Vision Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_color_blob_detector_h_f_8cpp_source.html','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ColorBlobDetectorHF.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">Copyright (c) 2015, FURG - Universidade Federal do Rio Grande</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">Redistribution and use in source and binary forms, with or without</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">modification, are permitted provided that the following conditions are met:</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    * Redistributions of source code must retain the above copyright</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">      notice, this list of conditions and the following disclaimer.</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    * Redistributions in binary form must reproduce the above copyright</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">      notice, this list of conditions and the following disclaimer in the</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">      documentation and/or other materials provided with the distribution.</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    * Neither the name of the Universidade Federal do Rio Grande nor the</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">      names of its contributors may be used to endorse or promote products</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">      derived from this software without specific prior written permission.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">DISCLAIMED. IN NO EVENT SHALL UNIVERSIDADE FEDERAL DO RIO GRANDE BE LIABLE FOR ANY</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">// Master include file</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;VisionImplementationCv.h&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespace_viscv.html">Viscv</a> {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="class_viscv_1_1_color_blob_detector_h_f.html#a22080136627bd90459c3a7cc68db48fc">   34</a></span>&#160;<a class="code" href="class_viscv_1_1_color_blob_detector_h_f.html#a22080136627bd90459c3a7cc68db48fc">ColorBlobDetectorHF::ColorBlobDetectorHF</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    : minHsv(100,50,50)</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    , maxHsv(140,255,255)</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    , erodeSize(7)</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    , dilateSize(7)</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    , showProcessingImgs(false)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="class_viscv_1_1_color_blob_detector_h_f.html#a1a287459fc13984350ba9e1d68eac14e">   44</a></span>&#160;<a class="code" href="class_viscv_1_1_color_blob_detector_h_f.html#a1a287459fc13984350ba9e1d68eac14e">ColorBlobDetectorHF::~ColorBlobDetectorHF</a>(<span class="keywordtype">void</span>)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="class_viscv_1_1_color_blob_detector_h_f.html#a76311b08b5cb9df65524e070e9c15048">   48</a></span>&#160;std::vector&lt;std::vector&lt;cv::Point&gt;&gt; <a class="code" href="class_viscv_1_1_color_blob_detector_h_f.html#a76311b08b5cb9df65524e070e9c15048">ColorBlobDetectorHF::detect</a>(<span class="keyword">const</span> cv::Mat&amp; img)<span class="keyword"> const</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    cv::Mat hsvImg,filteredImg,dilateImg,erodeImg;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="comment">// Converte imagem para HSV</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    cvtColor(img,hsvImg,CV_BGR2HSV);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="comment">// Filtra (saida é binária)</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    inRange(hsvImg,minHsv,maxHsv,filteredImg);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="class_viscv_1_1_color_blob_detector_h_f.html#ad56f3dc42f92c3f920caed1aec8ead03">showProcessingImgs</a>) {imshow(<span class="stringliteral">&quot;Filtered&quot;</span>,filteredImg);}</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="comment">// Dilatação</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    cv::Mat kernelDil = cv::getStructuringElement(cv::MORPH_ELLIPSE,cv::Size(<a class="code" href="class_viscv_1_1_color_blob_detector_h_f.html#ad0b5e1ba575b162ef99943983c9ca931">dilateSize</a>,<a class="code" href="class_viscv_1_1_color_blob_detector_h_f.html#ad0b5e1ba575b162ef99943983c9ca931">dilateSize</a>));</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    cv::dilate(filteredImg,dilateImg,kernelDil);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="class_viscv_1_1_color_blob_detector_h_f.html#ad56f3dc42f92c3f920caed1aec8ead03">showProcessingImgs</a>) {imshow(<span class="stringliteral">&quot;First dilation&quot;</span>,dilateImg);}</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="comment">// Erosão (aplica duas vezes para eliminar pequenos blobs)</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    cv::Mat kernelEro = cv::getStructuringElement(cv::MORPH_ELLIPSE,cv::Size(<a class="code" href="class_viscv_1_1_color_blob_detector_h_f.html#ade892534cd32ce4ae635c5d79c76dbbf">erodeSize</a>,<a class="code" href="class_viscv_1_1_color_blob_detector_h_f.html#ade892534cd32ce4ae635c5d79c76dbbf">erodeSize</a>));</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    cv::erode(dilateImg,erodeImg,kernelEro,cv::Point(-1,-1),2);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="class_viscv_1_1_color_blob_detector_h_f.html#ad56f3dc42f92c3f920caed1aec8ead03">showProcessingImgs</a>) {imshow(<span class="stringliteral">&quot;Erosion&quot;</span>,erodeImg);}</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="comment">// Dilatação</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    cv::dilate(erodeImg,dilateImg,kernelDil);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="class_viscv_1_1_color_blob_detector_h_f.html#ad56f3dc42f92c3f920caed1aec8ead03">showProcessingImgs</a>) {imshow(<span class="stringliteral">&quot;Second dilation&quot;</span>,dilateImg); cvWaitKey(1);}</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="comment">// Acha contornos</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    std::vector&lt;std::vector&lt;cv::Point&gt;&gt; contours;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    cv::Mat hierarchy;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    cv::findContours(dilateImg,contours,hierarchy,CV_RETR_EXTERNAL,CV_CHAIN_APPROX_SIMPLE);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="comment">// Filtra contornos por tamanho ou forma</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="comment">// TODO</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">return</span> contours;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="class_viscv_1_1_color_blob_detector_h_f.html#ae985929bdd9605ac5ab2460f6b824a97">   84</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_viscv_1_1_color_blob_detector_h_f.html#ae985929bdd9605ac5ab2460f6b824a97">ColorBlobDetectorHF::setMinHsv</a>(<span class="keyword">const</span> cv::Scalar&amp; minHsv_)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    minHsv=minHsv_;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;}</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="class_viscv_1_1_color_blob_detector_h_f.html#a842c89f58a06bc5d08b555e0ebcce3a4">   89</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_viscv_1_1_color_blob_detector_h_f.html#a842c89f58a06bc5d08b555e0ebcce3a4">ColorBlobDetectorHF::setMaxHsv</a>(<span class="keyword">const</span> cv::Scalar&amp; maxHsv_)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    maxHsv=maxHsv_;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;}</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="class_viscv_1_1_color_blob_detector_h_f.html#a34a1242cfaf748ff5c2ebd03b2e9daf6">   94</a></span>&#160;<span class="keyword">const</span> cv::Scalar&amp; <a class="code" href="class_viscv_1_1_color_blob_detector_h_f.html#a34a1242cfaf748ff5c2ebd03b2e9daf6">ColorBlobDetectorHF::getMinHsv</a>( )<span class="keyword"> const</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">return</span> minHsv;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;}</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="class_viscv_1_1_color_blob_detector_h_f.html#a762033ea84177602ff2b152b5d144c1b">   99</a></span>&#160;<span class="keyword">const</span> cv::Scalar&amp; <a class="code" href="class_viscv_1_1_color_blob_detector_h_f.html#a762033ea84177602ff2b152b5d144c1b">ColorBlobDetectorHF::getMaxHsv</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">return</span> maxHsv;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;}</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;}</div>
<div class="ttc" id="class_viscv_1_1_color_blob_detector_h_f_html_a762033ea84177602ff2b152b5d144c1b"><div class="ttname"><a href="class_viscv_1_1_color_blob_detector_h_f.html#a762033ea84177602ff2b152b5d144c1b">Viscv::ColorBlobDetectorHF::getMaxHsv</a></div><div class="ttdeci">const cv::Scalar &amp; getMaxHsv() const </div><div class="ttdoc">Retorna a cor máxima que será filtrada. </div><div class="ttdef"><b>Definition:</b> <a href="_color_blob_detector_h_f_8cpp_source.html#l00099">ColorBlobDetectorHF.cpp:99</a></div></div>
<div class="ttc" id="class_viscv_1_1_color_blob_detector_h_f_html_a22080136627bd90459c3a7cc68db48fc"><div class="ttname"><a href="class_viscv_1_1_color_blob_detector_h_f.html#a22080136627bd90459c3a7cc68db48fc">Viscv::ColorBlobDetectorHF::ColorBlobDetectorHF</a></div><div class="ttdeci">ColorBlobDetectorHF(void)</div><div class="ttdoc">Construtor default. </div><div class="ttdef"><b>Definition:</b> <a href="_color_blob_detector_h_f_8cpp_source.html#l00034">ColorBlobDetectorHF.cpp:34</a></div></div>
<div class="ttc" id="class_viscv_1_1_color_blob_detector_h_f_html_ae985929bdd9605ac5ab2460f6b824a97"><div class="ttname"><a href="class_viscv_1_1_color_blob_detector_h_f.html#ae985929bdd9605ac5ab2460f6b824a97">Viscv::ColorBlobDetectorHF::setMinHsv</a></div><div class="ttdeci">void setMinHsv(const cv::Scalar &amp;minHsv_)</div><div class="ttdoc">Define a cor mínima que será filtrada. </div><div class="ttdef"><b>Definition:</b> <a href="_color_blob_detector_h_f_8cpp_source.html#l00084">ColorBlobDetectorHF.cpp:84</a></div></div>
<div class="ttc" id="class_viscv_1_1_color_blob_detector_h_f_html_ad0b5e1ba575b162ef99943983c9ca931"><div class="ttname"><a href="class_viscv_1_1_color_blob_detector_h_f.html#ad0b5e1ba575b162ef99943983c9ca931">Viscv::ColorBlobDetectorHF::dilateSize</a></div><div class="ttdeci">int dilateSize</div><div class="ttdoc">Diâmetro do kernel (circular) usado na dilatação. </div><div class="ttdef"><b>Definition:</b> <a href="_color_blob_detector_h_f_8h_source.html#l00074">ColorBlobDetectorHF.h:74</a></div></div>
<div class="ttc" id="class_viscv_1_1_color_blob_detector_h_f_html_ad56f3dc42f92c3f920caed1aec8ead03"><div class="ttname"><a href="class_viscv_1_1_color_blob_detector_h_f.html#ad56f3dc42f92c3f920caed1aec8ead03">Viscv::ColorBlobDetectorHF::showProcessingImgs</a></div><div class="ttdeci">bool showProcessingImgs</div><div class="ttdoc">Define se as imagens intermediárias de processamento devem ser mostradas. </div><div class="ttdef"><b>Definition:</b> <a href="_color_blob_detector_h_f_8h_source.html#l00077">ColorBlobDetectorHF.h:77</a></div></div>
<div class="ttc" id="class_viscv_1_1_color_blob_detector_h_f_html_a842c89f58a06bc5d08b555e0ebcce3a4"><div class="ttname"><a href="class_viscv_1_1_color_blob_detector_h_f.html#a842c89f58a06bc5d08b555e0ebcce3a4">Viscv::ColorBlobDetectorHF::setMaxHsv</a></div><div class="ttdeci">void setMaxHsv(const cv::Scalar &amp;maxHsv_)</div><div class="ttdoc">Define a cor máxima que será filtrada. </div><div class="ttdef"><b>Definition:</b> <a href="_color_blob_detector_h_f_8cpp_source.html#l00089">ColorBlobDetectorHF.cpp:89</a></div></div>
<div class="ttc" id="namespace_viscv_html"><div class="ttname"><a href="namespace_viscv.html">Viscv</a></div><div class="ttdoc">Provides several computer vision methods for detection an. </div><div class="ttdef"><b>Definition:</b> <a href="_a_r_tag_detector_b_l_p_8cpp_source.html#l00031">ARTagDetectorBLP.cpp:31</a></div></div>
<div class="ttc" id="class_viscv_1_1_color_blob_detector_h_f_html_a1a287459fc13984350ba9e1d68eac14e"><div class="ttname"><a href="class_viscv_1_1_color_blob_detector_h_f.html#a1a287459fc13984350ba9e1d68eac14e">Viscv::ColorBlobDetectorHF::~ColorBlobDetectorHF</a></div><div class="ttdeci">virtual ~ColorBlobDetectorHF(void)</div><div class="ttdoc">Destrutor. </div><div class="ttdef"><b>Definition:</b> <a href="_color_blob_detector_h_f_8cpp_source.html#l00044">ColorBlobDetectorHF.cpp:44</a></div></div>
<div class="ttc" id="class_viscv_1_1_color_blob_detector_h_f_html_a76311b08b5cb9df65524e070e9c15048"><div class="ttname"><a href="class_viscv_1_1_color_blob_detector_h_f.html#a76311b08b5cb9df65524e070e9c15048">Viscv::ColorBlobDetectorHF::detect</a></div><div class="ttdeci">std::vector&lt; std::vector&lt; cv::Point &gt; &gt; detect(const cv::Mat &amp;img) const </div><div class="ttdoc">Detecta blobs em uma imagem. </div><div class="ttdef"><b>Definition:</b> <a href="_color_blob_detector_h_f_8cpp_source.html#l00048">ColorBlobDetectorHF.cpp:48</a></div></div>
<div class="ttc" id="class_viscv_1_1_color_blob_detector_h_f_html_a34a1242cfaf748ff5c2ebd03b2e9daf6"><div class="ttname"><a href="class_viscv_1_1_color_blob_detector_h_f.html#a34a1242cfaf748ff5c2ebd03b2e9daf6">Viscv::ColorBlobDetectorHF::getMinHsv</a></div><div class="ttdeci">const cv::Scalar &amp; getMinHsv() const </div><div class="ttdoc">Retorna a cor mínima que será filtrada. </div><div class="ttdef"><b>Definition:</b> <a href="_color_blob_detector_h_f_8cpp_source.html#l00094">ColorBlobDetectorHF.cpp:94</a></div></div>
<div class="ttc" id="class_viscv_1_1_color_blob_detector_h_f_html_ade892534cd32ce4ae635c5d79c76dbbf"><div class="ttname"><a href="class_viscv_1_1_color_blob_detector_h_f.html#ade892534cd32ce4ae635c5d79c76dbbf">Viscv::ColorBlobDetectorHF::erodeSize</a></div><div class="ttdeci">int erodeSize</div><div class="ttdoc">Diâmetro do kernel (circular) usado na erosão. </div><div class="ttdef"><b>Definition:</b> <a href="_color_blob_detector_h_f_8h_source.html#l00071">ColorBlobDetectorHF.h:71</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_08f45fe6822aeb4ce2bc268e3b1361be.html">Components</a></li><li class="navelem"><a class="el" href="dir_2fdce97c586a401d447ba676d44751b7.html">VisionImplementationCv</a></li><li class="navelem"><b>ColorBlobDetectorHF.cpp</b></li>
    <li class="footer">Generated on Wed Nov 18 2015 11:12:06 for CvWorks by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
