<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>CvWorks: ColorBlobDetectorHF Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="C3.jpg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">CvWorks
   &#160;<span id="projectnumber">0.4</span>
   </div>
   <div id="projectbrief">Computer Vision Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="inherits.html"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('class_viscv_1_1_color_blob_detector_h_f.html','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="class_viscv_1_1_color_blob_detector_h_f-members.html">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ColorBlobDetectorHF Class Reference<div class="ingroups"><a class="el" href="group___viscv.html">Viscv</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Implementa um detector de blobs baseado em cor.  
 <a href="class_viscv_1_1_color_blob_detector_h_f.html#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_color_blob_detector_h_f_8h_source.html">ColorBlobDetectorHF.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ColorBlobDetectorHF:</div>
<div class="dyncontent">
<div class="center"><img src="class_viscv_1_1_color_blob_detector_h_f__inherit__graph.png" border="0" usemap="#_color_blob_detector_h_f_inherit__map" alt="Inheritance graph"/></div>
<map name="_color_blob_detector_h_f_inherit__map" id="_color_blob_detector_h_f_inherit__map">
<area shape="rect" id="node2" href="class_vision_core_1_1_interfaces_1_1_detector.html" title="{Detector\&lt; cv::Mat,\l std::vector\&lt; cv::Point \&gt; \&gt;\n||+ detect()\l+ detect()\l+ ~Detector()\l}" alt="" coords="5,5,177,127"/>
</map>
</div>
<div class="dynheader">
Collaboration diagram for ColorBlobDetectorHF:</div>
<div class="dyncontent">
<div class="center"><img src="class_viscv_1_1_color_blob_detector_h_f__coll__graph.png" border="0" usemap="#_color_blob_detector_h_f_coll__map" alt="Collaboration graph"/></div>
<map name="_color_blob_detector_h_f_coll__map" id="_color_blob_detector_h_f_coll__map">
<area shape="rect" id="node2" href="class_vision_core_1_1_interfaces_1_1_detector.html" title="{Detector\&lt; cv::Mat,\l std::vector\&lt; cv::Point \&gt; \&gt;\n||+ detect()\l+ detect()\l+ ~Detector()\l}" alt="" coords="5,5,177,127"/>
</map>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a22080136627bd90459c3a7cc68db48fc"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a22080136627bd90459c3a7cc68db48fc"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_viscv_1_1_color_blob_detector_h_f.html#a22080136627bd90459c3a7cc68db48fc">ColorBlobDetectorHF</a> (void)</td></tr>
<tr class="memdesc:a22080136627bd90459c3a7cc68db48fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construtor default. <br /></td></tr>
<tr class="separator:a22080136627bd90459c3a7cc68db48fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a287459fc13984350ba9e1d68eac14e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1a287459fc13984350ba9e1d68eac14e"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_viscv_1_1_color_blob_detector_h_f.html#a1a287459fc13984350ba9e1d68eac14e">~ColorBlobDetectorHF</a> (void)</td></tr>
<tr class="memdesc:a1a287459fc13984350ba9e1d68eac14e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destrutor. <br /></td></tr>
<tr class="separator:a1a287459fc13984350ba9e1d68eac14e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76311b08b5cb9df65524e070e9c15048"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a76311b08b5cb9df65524e070e9c15048"></a>
std::vector&lt; std::vector&lt; cv::Point &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_viscv_1_1_color_blob_detector_h_f.html#a76311b08b5cb9df65524e070e9c15048">detect</a> (const cv::Mat &amp;img) const </td></tr>
<tr class="memdesc:a76311b08b5cb9df65524e070e9c15048"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detecta blobs em uma imagem. <br /></td></tr>
<tr class="separator:a76311b08b5cb9df65524e070e9c15048"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae985929bdd9605ac5ab2460f6b824a97"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae985929bdd9605ac5ab2460f6b824a97"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_viscv_1_1_color_blob_detector_h_f.html#ae985929bdd9605ac5ab2460f6b824a97">setMinHsv</a> (const cv::Scalar &amp;minHsv_)</td></tr>
<tr class="memdesc:ae985929bdd9605ac5ab2460f6b824a97"><td class="mdescLeft">&#160;</td><td class="mdescRight">Define a cor mínima que será filtrada. <br /></td></tr>
<tr class="separator:ae985929bdd9605ac5ab2460f6b824a97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a842c89f58a06bc5d08b555e0ebcce3a4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a842c89f58a06bc5d08b555e0ebcce3a4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_viscv_1_1_color_blob_detector_h_f.html#a842c89f58a06bc5d08b555e0ebcce3a4">setMaxHsv</a> (const cv::Scalar &amp;maxHsv_)</td></tr>
<tr class="memdesc:a842c89f58a06bc5d08b555e0ebcce3a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Define a cor máxima que será filtrada. <br /></td></tr>
<tr class="separator:a842c89f58a06bc5d08b555e0ebcce3a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34a1242cfaf748ff5c2ebd03b2e9daf6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a34a1242cfaf748ff5c2ebd03b2e9daf6"></a>
const cv::Scalar &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_viscv_1_1_color_blob_detector_h_f.html#a34a1242cfaf748ff5c2ebd03b2e9daf6">getMinHsv</a> () const </td></tr>
<tr class="memdesc:a34a1242cfaf748ff5c2ebd03b2e9daf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retorna a cor mínima que será filtrada. <br /></td></tr>
<tr class="separator:a34a1242cfaf748ff5c2ebd03b2e9daf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a762033ea84177602ff2b152b5d144c1b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a762033ea84177602ff2b152b5d144c1b"></a>
const cv::Scalar &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_viscv_1_1_color_blob_detector_h_f.html#a762033ea84177602ff2b152b5d144c1b">getMaxHsv</a> () const </td></tr>
<tr class="memdesc:a762033ea84177602ff2b152b5d144c1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retorna a cor máxima que será filtrada. <br /></td></tr>
<tr class="separator:a762033ea84177602ff2b152b5d144c1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_vision_core_1_1_interfaces_1_1_detector"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_vision_core_1_1_interfaces_1_1_detector')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_vision_core_1_1_interfaces_1_1_detector.html">Detector&lt; cv::Mat, std::vector&lt; cv::Point &gt; &gt;</a></td></tr>
<tr class="memitem:a4e37933b023a5f4d4f28c5b5bf3f9459 inherit pub_methods_class_vision_core_1_1_interfaces_1_1_detector"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4e37933b023a5f4d4f28c5b5bf3f9459"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>detect</b> (const cv::Mat &amp;img, std::vector&lt; std::vector&lt; cv::Point &gt; &gt; &amp;obj) const</td></tr>
<tr class="separator:a4e37933b023a5f4d4f28c5b5bf3f9459 inherit pub_methods_class_vision_core_1_1_interfaces_1_1_detector"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91a737d10b7440970932af8c8d8380d2 inherit pub_methods_class_vision_core_1_1_interfaces_1_1_detector"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a91a737d10b7440970932af8c8d8380d2"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_vision_core_1_1_interfaces_1_1_detector.html#a91a737d10b7440970932af8c8d8380d2">~Detector</a> ()</td></tr>
<tr class="memdesc:a91a737d10b7440970932af8c8d8380d2 inherit pub_methods_class_vision_core_1_1_interfaces_1_1_detector"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destrutor. <br /></td></tr>
<tr class="separator:a91a737d10b7440970932af8c8d8380d2 inherit pub_methods_class_vision_core_1_1_interfaces_1_1_detector"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ade892534cd32ce4ae635c5d79c76dbbf"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ade892534cd32ce4ae635c5d79c76dbbf"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_viscv_1_1_color_blob_detector_h_f.html#ade892534cd32ce4ae635c5d79c76dbbf">erodeSize</a></td></tr>
<tr class="memdesc:ade892534cd32ce4ae635c5d79c76dbbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Diâmetro do kernel (circular) usado na erosão. <br /></td></tr>
<tr class="separator:ade892534cd32ce4ae635c5d79c76dbbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0b5e1ba575b162ef99943983c9ca931"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad0b5e1ba575b162ef99943983c9ca931"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_viscv_1_1_color_blob_detector_h_f.html#ad0b5e1ba575b162ef99943983c9ca931">dilateSize</a></td></tr>
<tr class="memdesc:ad0b5e1ba575b162ef99943983c9ca931"><td class="mdescLeft">&#160;</td><td class="mdescRight">Diâmetro do kernel (circular) usado na dilatação. <br /></td></tr>
<tr class="separator:ad0b5e1ba575b162ef99943983c9ca931"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad56f3dc42f92c3f920caed1aec8ead03"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad56f3dc42f92c3f920caed1aec8ead03"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_viscv_1_1_color_blob_detector_h_f.html#ad56f3dc42f92c3f920caed1aec8ead03">showProcessingImgs</a></td></tr>
<tr class="memdesc:ad56f3dc42f92c3f920caed1aec8ead03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Define se as imagens intermediárias de processamento devem ser mostradas. <br /></td></tr>
<tr class="separator:ad56f3dc42f92c3f920caed1aec8ead03"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_class_vision_core_1_1_interfaces_1_1_detector"><td colspan="2" onclick="javascript:toggleInherit('pub_types_class_vision_core_1_1_interfaces_1_1_detector')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="class_vision_core_1_1_interfaces_1_1_detector.html">Detector&lt; cv::Mat, std::vector&lt; cv::Point &gt; &gt;</a></td></tr>
<tr class="memitem:aaafe8051ac78bd4d8ed3027acd24a1c0 inherit pub_types_class_vision_core_1_1_interfaces_1_1_detector"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaafe8051ac78bd4d8ed3027acd24a1c0"></a>
typedef cv::Mat&#160;</td><td class="memItemRight" valign="bottom"><b>ImgType</b></td></tr>
<tr class="separator:aaafe8051ac78bd4d8ed3027acd24a1c0 inherit pub_types_class_vision_core_1_1_interfaces_1_1_detector"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34f8ad85716743523e520af46032716e inherit pub_types_class_vision_core_1_1_interfaces_1_1_detector"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a34f8ad85716743523e520af46032716e"></a>
typedef std::vector&lt; cv::Point &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>ObjType</b></td></tr>
<tr class="separator:a34f8ad85716743523e520af46032716e inherit pub_types_class_vision_core_1_1_interfaces_1_1_detector"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Implementa um detector de blobs baseado em cor. </p>
<p>O detector executa os seguintes passos: 1) Aplica um filtro de cor, baseado em um mínimo e máximo. 2) Aplica dilatação e erosão para fechar buracos e eliminar pequenos blobs. 3) Encontra blobs 4) Filtra blobs baseado em características (tamanho e forma)</p>
<p>Obs: A OpenCv possui uma implementação de detector de blobs na classe cv::SimpleBlobDetector. </p>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="_vision_tests_2main_8cpp-example.html#_a1">VisionTests/main.cpp</a>.</dd>
</dl>
<p>Definition at line <a class="el" href="_color_blob_detector_h_f_8h_source.html#l00045">45</a> of file <a class="el" href="_color_blob_detector_h_f_8h_source.html">ColorBlobDetectorHF.h</a>.</p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>D:/FURG/Software/CvWorksRelease1/Components/VisionImplementationCv/<a class="el" href="_color_blob_detector_h_f_8h_source.html">ColorBlobDetectorHF.h</a></li>
<li>D:/FURG/Software/CvWorksRelease1/Components/VisionImplementationCv/<a class="el" href="_color_blob_detector_h_f_8cpp_source.html">ColorBlobDetectorHF.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_viscv.html">Viscv</a></li><li class="navelem"><a class="el" href="class_viscv_1_1_color_blob_detector_h_f.html">ColorBlobDetectorHF</a></li>
    <li class="footer">Generated on Wed Nov 18 2015 11:12:09 for CvWorks by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
