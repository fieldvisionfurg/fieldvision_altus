<map id="FaceDetectorControl" name="FaceDetectorControl">
<area shape="rect" id="node2" href="$class_detector_control.html" title="{DetectorControl\&lt; cv\l::Mat, cv::Rect \&gt;\n||+ DetectorControl()\l+ pause()\l+ start()\l+ exportLog()\l+ addCreateTrackerOption()\l+ ~DetectorControl()\l# drawResults()\l# drawObject()\l# resetLog()\l}" alt="" coords="661,1108,844,1317"/>
<area shape="rect" id="node3" href="$class_process_control.html" title="Esta classe é responsável por controlar a execuçãoo de um algoritmo de visão computacional. " alt="" coords="358,799,529,1038"/>
<area shape="rect" id="node4" href="$class_process_widget.html" title="Interface gráfica para um objeto ProcessControl. Mostra funcionalidades básicas de controle (fechar..." alt="" coords="5,505,169,729"/>
<area shape="rect" id="node6" href="$class_frame_server_control_widget.html" title="Esta classe controla a execução e representação gráfica de um vídeo (FrameServer). " alt="" coords="194,535,399,700"/>
<area shape="rect" id="node8" href="$class_image_viewer_cv.html" title="Esta classe implementa um widget capaz de mostrar uma imagem do tipo cv::Mat. " alt="" coords="213,145,351,443"/>
<area shape="rect" id="node9" href="$class_vision_core_1_1_async_1_1_async_frame_server_wrap.html" title="{AsyncFrameServerWrap\l\&lt; cv::Mat \&gt;\n||+ AsyncFrameServerWrap()\l+ ~AsyncFrameServerWrap()\l+ start()\l+ stop()\l+ started()\l+ finished()\l+ getCurrentFrame()\l+ lockCurrentFrame()\l+ unlockCurrentFrame()\l+ getThreadPtr()\land 7 more...\l}" alt="" coords="376,175,567,413"/>
<area shape="rect" id="node10" href="$class_vision_core_1_1_interfaces_1_1_frame_server.html" title="{FrameServer\&lt; cv::Mat \&gt;\n||+ captureFrame()\l+ hasNext()\l+ releaseServer()\l+ ~FrameServer()\l}" alt="" coords="591,233,752,355"/>
<area shape="rect" id="node12" href="$class_vision_core_1_1_abstractions_1_1_detector_logger.html" title="{DetectorLogger\&lt; cv\l::Mat, cv::Rect \&gt;\n|# m_logImages\l# m_detCount\l# m_cumDuration\l# m_dataMutex\l|+ DetectorLogger()\l+ writeToFileAsCsv()\l+ ~DetectorLogger()\l+ averageDuration()\l+ getData()\l+ resetLog()\l+ lockData()\l+ unlockData()\l+ detect()\l}" alt="" coords="786,792,927,1045"/>
<area shape="rect" id="node13" href="$class_vision_core_1_1_interfaces_1_1_detector.html" title="{Detector\&lt; cv::Mat,\l cv::Rect \&gt;\n||+ detect()\l+ detect()\l+ ~Detector()\l}" alt="" coords="639,557,768,678"/>
<area shape="rect" id="node15" href="$struct_vision_core_1_1_abstractions_1_1_detection_data.html" title="{DetectionData\&lt; cv::\lRect \&gt;\n|+ detNumber\l+ time\l+ duration\l|}" alt="" coords="821,233,957,355"/>
<area shape="rect" id="node18" href="$class_vision_core_1_1_async_1_1_async_detector_wrap.html" title="{AsyncDetectorWrap\&lt;\l cv::Mat, cv::Rect \&gt;\n||+ AsyncDetectorWrap()\l+ ~AsyncDetectorWrap()\l+ getDetector()\l+ setDetector()\l}" alt="" coords="1068,851,1235,987"/>
<area shape="rect" id="node19" href="$class_vision_core_1_1_async_1_1_async_vision_execution.html" title="{AsyncVisionExecution\l\&lt; cv::Mat, std::vector\l\&lt; cv::Rect \&gt; \&gt;\n||+ ~AsyncVisionExecution()\l+ setCallback()\l+ start()\l+ stop()\l+ started()\l+ getThreadPtr()\l# AsyncVisionExecution()\l}" alt="" coords="1177,520,1358,715"/>
</map>
