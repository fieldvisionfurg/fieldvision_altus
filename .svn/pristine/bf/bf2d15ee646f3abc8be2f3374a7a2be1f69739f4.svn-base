\subsection*{Introduction }

Cv\+Works is a computer vision framework composed of a set of interfaces and high-\/level computer vision methods with focus on applications and systems. It is implemented in C++ using templates and object oriented programming.

\subsection*{Objective }

The objective is to implement a framework that facilitates the development and evaluation of high-\/level computer vision systems. The framework should provide a base implementation for common tasks shared between computer vision applications, such as\+: detection and tracking performance evaluation, threaded execution and generic computer vision algorithms. This project does not intend to implement low-\/level computer vision and image processing, such as\+: image filtering, histograms, optical flow, feature extraction, etc.

The expected result is a framework that allows\+:


\begin{DoxyItemize}
\item Code reuse.
\item \textquotesingle{}Plug-\/and-\/play\textquotesingle{} computer vision.
\item Quick and easy deployment and evaluation of systems.
\item Educational tool.
\item Team development.
\end{DoxyItemize}

\subsection*{Architecture }

Cv\+Works is organized in three levels\+:


\begin{DoxyEnumerate}
\item \hyperlink{group___core}{Core} -\/ Defines generic interfaces (using template programming) and implements abstract methods that can be reused on different computer vision applications. It also contains generic test routines (using the interfaces) for detection and tracking evaluation. Implemented in \hyperlink{namespace_vision_core}{Vision\+Core} namespace.
\item High-\/level Computer Vision Methods -\/ Contains the implementation of specific computer vision components that can be reused accross applications. In the moment, Cv\+Works provides a component with implementation of some detection and tracking methods based on Open\+Cv library (i.\+e. based on cv\+::\+Mat image type), see \hyperlink{group___viscv}{Viscv}. Soon, we plan to implement methods for Kinect cameras and point cloud images (using P\+C\+L library).
\item Application -\/ This level complies the final application (i.\+e. business-\/logic implementation). Currently, Cv\+Works contains a generic graphical interface for methods visualization (\hyperlink{group___vision_g_u_i}{Vision\+G\+U\+I}). Besides this, it is also being used in three other applications\+: a face recognition biometric system, a computer vision module for Patrol\+Bot robot navigation (C3\+Scout project) and a vision based industrial plant monitoring system (Field\+Vision project).
\end{DoxyEnumerate}

The diagram bellow illustrate Cv\+Works architecture\+:  