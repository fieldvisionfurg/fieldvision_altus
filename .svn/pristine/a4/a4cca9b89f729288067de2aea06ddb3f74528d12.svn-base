<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>CvWorks: D:/FURG/Software/CvWorksRelease1/Components/VisionImplementationCv/FeatureTrackerKLTCv.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="C3.jpg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">CvWorks
   &#160;<span id="projectnumber">0.4</span>
   </div>
   <div id="projectbrief">Computer Vision Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_feature_tracker_k_l_t_cv_8cpp_source.html','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">FeatureTrackerKLTCv.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">Copyright (c) 2015, FURG - Universidade Federal do Rio Grande</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">Redistribution and use in source and binary forms, with or without</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">modification, are permitted provided that the following conditions are met:</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    * Redistributions of source code must retain the above copyright</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">      notice, this list of conditions and the following disclaimer.</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    * Redistributions in binary form must reproduce the above copyright</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">      notice, this list of conditions and the following disclaimer in the</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">      documentation and/or other materials provided with the distribution.</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    * Neither the name of the Universidade Federal do Rio Grande nor the</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">      names of its contributors may be used to endorse or promote products</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">      derived from this software without specific prior written permission.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">DISCLAIMED. IN NO EVENT SHALL UNIVERSIDADE FEDERAL DO RIO GRANDE BE LIABLE FOR ANY</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">// Master include file</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;VisionImplementationCv.h&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespace_viscv.html">Viscv</a> {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">Constructor method.</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#afec5e8db43cff5865d01a6aefa571f75">   36</a></span>&#160;<a class="code" href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#a92b21030b56cbc6f5bd865dadb2f88ac">FeatureTrackerKLTCv::FeatureTrackerKLTCv</a>(std::vector&lt;cv::Point2f&gt; points) <span class="comment">//@INIT_1709</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    : m_previousImg()</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    , m_points(points)</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    , m_previousPoints()</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">Constructor method.</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#ad31a41e54b06155a819d91ddd00a2e8a">   47</a></span>&#160;<a class="code" href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#a92b21030b56cbc6f5bd865dadb2f88ac">FeatureTrackerKLTCv::FeatureTrackerKLTCv</a>(<span class="keyword">const</span> cv::Mat&amp; img,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                         <span class="keyword">const</span> cv::Rect&amp; roi) <span class="comment">//@INIT_1716</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    : m_previousImg()</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    , m_points()</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    , m_previousPoints()</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    addPointsFromRegion(img,roi);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">Constructor method.</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#a92b21030b56cbc6f5bd865dadb2f88ac">   60</a></span>&#160;<a class="code" href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#a92b21030b56cbc6f5bd865dadb2f88ac">FeatureTrackerKLTCv::FeatureTrackerKLTCv</a>() </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    : m_previousImg()</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    , m_points()</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    , m_previousPoints()</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">Destructor method.</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#a401364423c0eb5076abe2b69c713bdd6">   71</a></span>&#160;<a class="code" href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#a401364423c0eb5076abe2b69c713bdd6">FeatureTrackerKLTCv::~FeatureTrackerKLTCv</a>()</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keywordtype">void</span> FeatureTrackerKLTCv::addPointToTrack(<span class="keyword">const</span> cv::Point2f&amp; point)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;{</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    m_points.push_back(point);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keywordtype">void</span> FeatureTrackerKLTCv::addPointsFromRegion(<span class="keyword">const</span> cv::Mat &amp;img,<span class="keyword">const</span> cv::Rect&amp; roi)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    cv::Mat imgGray;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    cv::cvtColor(img, imgGray, CV_BGR2GRAY);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">double</span> qualityLevel = 0.05;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordtype">double</span> minDistance = 5.0;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">int</span> maxCorners = 20;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    std::vector&lt;cv::Point2f&gt; points;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    goodFeaturesToTrack(imgGray(roi),points,maxCorners,qualityLevel,minDistance);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="comment">//the points are wrt roi axis. Convert to img axis.</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">for</span>(cv::Point2f&amp; p : points){</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        p.x+=roi.x;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        p.y+=roi.y;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        this-&gt;addPointToTrack(p);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keywordtype">void</span> FeatureTrackerKLTCv::reset()</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    m_points.clear();</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    m_previousImg = cv::Mat();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    m_previousPoints.clear();</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;}</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keywordtype">void</span> FeatureTrackerKLTCv::cvMouseCallback(<span class="keywordtype">int</span> clickEvent, <span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y,</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                                          <span class="keywordtype">int</span> flags, <span class="keywordtype">void</span>* featureTrackerPtr)</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;{</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <a class="code" href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#a92b21030b56cbc6f5bd865dadb2f88ac">FeatureTrackerKLTCv</a>* ofPtr = (<a class="code" href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#a92b21030b56cbc6f5bd865dadb2f88ac">FeatureTrackerKLTCv</a>*)featureTrackerPtr;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">if</span>(ofPtr != NULL &amp;&amp; clickEvent == CV_EVENT_LBUTTONDOWN){</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        ofPtr-&gt;addPointToTrack(cv::Point2f((<span class="keywordtype">float</span>)x, (<span class="keywordtype">float</span>)y));</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;}</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#af54d7c5518cd3377ba19514359d51ca7">  119</a></span>&#160;<span class="keyword">const</span> std::vector&lt;cv::Point2f&gt;&amp; <a class="code" href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#af54d7c5518cd3377ba19514359d51ca7">FeatureTrackerKLTCv::getLastTrack</a>()</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;{</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">return</span> m_points;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">Given an image (i.e. video frame), update the tracked objects.</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#ab233da15b6c7aad7d83c67057a558bd4">  128</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#ab233da15b6c7aad7d83c67057a558bd4">FeatureTrackerKLTCv::update</a>(<span class="keyword">const</span> <a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html">VisionCore::Frame&lt;cv::Mat&gt;</a>&amp; frame)</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="comment">//the method only works for gray images, so convert if necessary</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    cv::Mat img;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">if</span>(frame.<a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html#a8531d354b20874961d98c796e3973b4d">getImg</a>().channels()&gt;1)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        cv::cvtColor(frame.<a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html#a8531d354b20874961d98c796e3973b4d">getImg</a>(), img, CV_BGR2GRAY);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        img=frame.<a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html#a8531d354b20874961d98c796e3973b4d">getImg</a>();</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="comment">//if there is no previous img, get the current</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">if</span>(m_previousImg.empty()){</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordflow">if</span>(m_previousImg.channels()&gt;1)</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            cv::cvtColor(frame.<a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html#a8531d354b20874961d98c796e3973b4d">getImg</a>(), m_previousImg, CV_BGR2GRAY);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            m_previousImg=frame.<a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html#a8531d354b20874961d98c796e3973b4d">getImg</a>();</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="comment">//computes optical flow</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordflow">if</span>(m_points.size()&gt;0){</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            std::vector&lt;cv::Point2f&gt; result;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="keywordtype">int</span> maxCorners=50;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            std::vector&lt;uchar&gt; features_found; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            features_found.reserve(maxCorners);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            std::vector&lt;float&gt; feature_errors; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            feature_errors.reserve(maxCorners);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            m_previousPoints=m_points;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            cv::calcOpticalFlowPyrLK( m_previousImg,img, m_previousPoints, m_points, features_found, feature_errors);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        m_previousImg=img;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;}</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div>
<div class="ttc" id="struct_vision_core_1_1_data_structures_1_1_frame_html_a8531d354b20874961d98c796e3973b4d"><div class="ttname"><a href="struct_vision_core_1_1_data_structures_1_1_frame.html#a8531d354b20874961d98c796e3973b4d">VisionCore::DataStructures::Frame::getImg</a></div><div class="ttdeci">const TImg &amp; getImg() const </div><div class="ttdoc">Returns a reference to the frame image. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_data_structures_8h_source.html#l00084">VisionDataStructures.h:84</a></div></div>
<div class="ttc" id="namespace_viscv_html"><div class="ttname"><a href="namespace_viscv.html">Viscv</a></div><div class="ttdoc">Provides several computer vision methods for detection an. </div><div class="ttdef"><b>Definition:</b> <a href="_a_r_tag_detector_b_l_p_8cpp_source.html#l00031">ARTagDetectorBLP.cpp:31</a></div></div>
<div class="ttc" id="class_viscv_1_1_feature_tracker_k_l_t_cv_html_af54d7c5518cd3377ba19514359d51ca7"><div class="ttname"><a href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#af54d7c5518cd3377ba19514359d51ca7">Viscv::FeatureTrackerKLTCv::getLastTrack</a></div><div class="ttdeci">virtual const std::vector&lt; cv::Point2f &gt; &amp; getLastTrack()</div><div class="ttdoc">Returns a reference to the current estimated object state. </div><div class="ttdef"><b>Definition:</b> <a href="_feature_tracker_k_l_t_cv_8cpp_source.html#l00119">FeatureTrackerKLTCv.cpp:119</a></div></div>
<div class="ttc" id="class_viscv_1_1_feature_tracker_k_l_t_cv_html_a92b21030b56cbc6f5bd865dadb2f88ac"><div class="ttname"><a href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#a92b21030b56cbc6f5bd865dadb2f88ac">Viscv::FeatureTrackerKLTCv::FeatureTrackerKLTCv</a></div><div class="ttdeci">FeatureTrackerKLTCv()</div><div class="ttdoc">Constructor method. </div><div class="ttdef"><b>Definition:</b> <a href="_feature_tracker_k_l_t_cv_8cpp_source.html#l00060">FeatureTrackerKLTCv.cpp:60</a></div></div>
<div class="ttc" id="class_viscv_1_1_feature_tracker_k_l_t_cv_html_a401364423c0eb5076abe2b69c713bdd6"><div class="ttname"><a href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#a401364423c0eb5076abe2b69c713bdd6">Viscv::FeatureTrackerKLTCv::~FeatureTrackerKLTCv</a></div><div class="ttdeci">virtual ~FeatureTrackerKLTCv()</div><div class="ttdoc">Destructor method. </div><div class="ttdef"><b>Definition:</b> <a href="_feature_tracker_k_l_t_cv_8cpp_source.html#l00071">FeatureTrackerKLTCv.cpp:71</a></div></div>
<div class="ttc" id="class_viscv_1_1_feature_tracker_k_l_t_cv_html_ab233da15b6c7aad7d83c67057a558bd4"><div class="ttname"><a href="class_viscv_1_1_feature_tracker_k_l_t_cv.html#ab233da15b6c7aad7d83c67057a558bd4">Viscv::FeatureTrackerKLTCv::update</a></div><div class="ttdeci">void update(const VisionCore::Frame&lt; cv::Mat &gt; &amp;frame)</div><div class="ttdoc">Given an image (i.e. video frame), update the tracked objects. </div><div class="ttdef"><b>Definition:</b> <a href="_feature_tracker_k_l_t_cv_8cpp_source.html#l00128">FeatureTrackerKLTCv.cpp:128</a></div></div>
<div class="ttc" id="struct_vision_core_1_1_data_structures_1_1_frame_html"><div class="ttname"><a href="struct_vision_core_1_1_data_structures_1_1_frame.html">VisionCore::DataStructures::Frame&lt; cv::Mat &gt;</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_08f45fe6822aeb4ce2bc268e3b1361be.html">Components</a></li><li class="navelem"><a class="el" href="dir_2fdce97c586a401d447ba676d44751b7.html">VisionImplementationCv</a></li><li class="navelem"><b>FeatureTrackerKLTCv.cpp</b></li>
    <li class="footer">Generated on Wed Nov 18 2015 11:12:06 for CvWorks by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
