<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>CvWorks: AsyncVisionExecution&lt; TImg, TOut &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="C3.jpg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">CvWorks
   &#160;<span id="projectnumber">0.4</span>
   </div>
   <div id="projectbrief">Computer Vision Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="inherits.html"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('class_vision_core_1_1_async_1_1_async_vision_execution.html','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="class_vision_core_1_1_async_1_1_async_vision_execution-members.html">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">AsyncVisionExecution&lt; TImg, TOut &gt; Class Template Reference<span class="mlabels"><span class="mlabel">abstract</span></span><div class="ingroups"><a class="el" href="group___core.html">Core</a> &raquo; <a class="el" href="group___async.html">Async</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Allows the execution of a vision method asynchronously in an individual thread.  
 <a href="class_vision_core_1_1_async_1_1_async_vision_execution.html#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_vision_async_8h_source.html">VisionAsync.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for AsyncVisionExecution&lt; TImg, TOut &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="class_vision_core_1_1_async_1_1_async_vision_execution__coll__graph.png" border="0" usemap="#_async_vision_execution_3_01_t_img_00_01_t_out_01_4_coll__map" alt="Collaboration graph"/></div>
<map name="_async_vision_execution_3_01_t_img_00_01_t_out_01_4_coll__map" id="_async_vision_execution_3_01_t_img_00_01_t_out_01_4_coll__map">
</map>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7c6b158b64e320c959e8bf6c5aeae822"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7c6b158b64e320c959e8bf6c5aeae822"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_vision_core_1_1_async_1_1_async_vision_execution.html#a7c6b158b64e320c959e8bf6c5aeae822">~AsyncVisionExecution</a> ()</td></tr>
<tr class="memdesc:a7c6b158b64e320c959e8bf6c5aeae822"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor method. <br /></td></tr>
<tr class="separator:a7c6b158b64e320c959e8bf6c5aeae822"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6308ff596cc79d9feae867931dc5df2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa6308ff596cc79d9feae867931dc5df2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_vision_core_1_1_async_1_1_async_vision_execution.html#aa6308ff596cc79d9feae867931dc5df2">setCallback</a> (const std::function&lt; void(TOut)&gt; &amp;callback)</td></tr>
<tr class="memdesc:aa6308ff596cc79d9feae867931dc5df2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the callback function executed after every detection. <br /></td></tr>
<tr class="separator:aa6308ff596cc79d9feae867931dc5df2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60de64d75454385b23995437f1d72669"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a60de64d75454385b23995437f1d72669"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_vision_core_1_1_async_1_1_async_vision_execution.html#a60de64d75454385b23995437f1d72669">start</a> ()</td></tr>
<tr class="memdesc:a60de64d75454385b23995437f1d72669"><td class="mdescLeft">&#160;</td><td class="mdescRight">Activates the processing (i.e. frames will be processed). <br /></td></tr>
<tr class="separator:a60de64d75454385b23995437f1d72669"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c528baf37154d347366083f0f816846"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8c528baf37154d347366083f0f816846"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_vision_core_1_1_async_1_1_async_vision_execution.html#a8c528baf37154d347366083f0f816846">stop</a> ()</td></tr>
<tr class="memdesc:a8c528baf37154d347366083f0f816846"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stops the processing. Works as a pause. <br /></td></tr>
<tr class="separator:a8c528baf37154d347366083f0f816846"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af41b8630e5466023133f31442906e682"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af41b8630e5466023133f31442906e682"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_vision_core_1_1_async_1_1_async_vision_execution.html#af41b8630e5466023133f31442906e682">started</a> ()</td></tr>
<tr class="memdesc:af41b8630e5466023133f31442906e682"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates if the processing is active (i.e. is listening and processing frames). <br /></td></tr>
<tr class="separator:af41b8630e5466023133f31442906e682"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd8ac6727051c47ac2b8d695efc63603"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abd8ac6727051c47ac2b8d695efc63603"></a>
std::thread *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_vision_core_1_1_async_1_1_async_vision_execution.html#abd8ac6727051c47ac2b8d695efc63603">getThreadPtr</a> ()</td></tr>
<tr class="memdesc:abd8ac6727051c47ac2b8d695efc63603"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the internal thread. <br /></td></tr>
<tr class="separator:abd8ac6727051c47ac2b8d695efc63603"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a4378a7425cb135692051eb5f4dc3ae58"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_vision_core_1_1_async_1_1_async_vision_execution.html#a4378a7425cb135692051eb5f4dc3ae58">AsyncVisionExecution</a> (<a class="el" href="class_vision_core_1_1_async_1_1_async_frame_server_wrap.html">AsyncFrameServerWrap</a>&lt; TImg &gt; *afsPtr)</td></tr>
<tr class="memdesc:a4378a7425cb135692051eb5f4dc3ae58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor method.  <a href="#a4378a7425cb135692051eb5f4dc3ae58">More...</a><br /></td></tr>
<tr class="separator:a4378a7425cb135692051eb5f4dc3ae58"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class TImg, class TOut&gt;<br />
class VisionCore::Async::AsyncVisionExecution&lt; TImg, TOut &gt;</h3>

<p>Allows the execution of a vision method asynchronously in an individual thread. </p>
<p>This is a abstract class for a processing a video asynchronously. It listens an <a class="el" href="class_vision_core_1_1_async_1_1_async_frame_server_wrap.html" title="Allows the execution of a frame server asynchronously in an individual thread. ">AsyncFrameServerWrap</a> object (given in the constructor) and, when a new frame becomes available, it calls the process method, passing the image.</p>
<p>After every processing, the results are passed to a user provided callback function (see setCallback).</p>
<p>The method runs in a exclusive internal thread.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">TImg</td><td>Image type. </td></tr>
    <tr><td class="paramname">TOut</td><td>Type returned by the processing method. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="_vision_async_8h_source.html#l00290">290</a> of file <a class="el" href="_vision_async_8h_source.html">VisionAsync.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a4378a7425cb135692051eb5f4dc3ae58"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_vision_core_1_1_async_1_1_async_vision_execution.html">AsyncVisionExecution</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_vision_core_1_1_async_1_1_async_frame_server_wrap.html">AsyncFrameServerWrap</a>&lt; TImg &gt; *&#160;</td>
          <td class="paramname"><em>afsPtr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor method. </p>
<p>The user should provide a pointer to an <a class="el" href="class_vision_core_1_1_async_1_1_async_frame_server_wrap.html" title="Allows the execution of a frame server asynchronously in an individual thread. ">AsyncFrameServerWrap</a>, that will be listened for new frames. </p>

<p>Definition at line <a class="el" href="_vision_async_8h_source.html#l00355">355</a> of file <a class="el" href="_vision_async_8h_source.html">VisionAsync.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>D:/FURG/Software/CvWorksRelease1/Core/Vision/<a class="el" href="_vision_async_8h_source.html">VisionAsync.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_vision_core.html">VisionCore</a></li><li class="navelem"><a class="el" href="namespace_vision_core_1_1_async.html">Async</a></li><li class="navelem"><a class="el" href="class_vision_core_1_1_async_1_1_async_vision_execution.html">AsyncVisionExecution</a></li>
    <li class="footer">Generated on Wed Nov 18 2015 11:12:11 for CvWorks by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
