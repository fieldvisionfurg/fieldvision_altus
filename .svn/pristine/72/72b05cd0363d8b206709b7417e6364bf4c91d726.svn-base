<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>CvWorks: FrameServer&lt; TImg &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="C3.jpg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">CvWorks
   &#160;<span id="projectnumber">0.4</span>
   </div>
   <div id="projectbrief">Computer Vision Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="inherits.html"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('class_vision_core_1_1_interfaces_1_1_frame_server.html','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_vision_core_1_1_interfaces_1_1_frame_server-members.html">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">FrameServer&lt; TImg &gt; Class Template Reference<span class="mlabels"><span class="mlabel">abstract</span></span><div class="ingroups"><a class="el" href="group___core.html">Core</a> &raquo; <a class="el" href="group___interfaces.html">Interfaces</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Interface for a source of frames. The frames can come from a video file, webcam, set of images, etc.  
 <a href="class_vision_core_1_1_interfaces_1_1_frame_server.html#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_vision_interfaces_8h_source.html">VisionInterfaces.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for FrameServer&lt; TImg &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="class_vision_core_1_1_interfaces_1_1_frame_server__inherit__graph.png" border="0" usemap="#_frame_server_3_01_t_img_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="_frame_server_3_01_t_img_01_4_inherit__map" id="_frame_server_3_01_t_img_01_4_inherit__map">
<area shape="rect" id="node2" href="class_vision_core_1_1_evaluation_1_1_frame_server_det_data.html" title="FrameServer from a detection dataset. " alt="" coords="5,175,176,369"/>
</map>
</div>
<div class="dynheader">
Collaboration diagram for FrameServer&lt; TImg &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="class_vision_core_1_1_interfaces_1_1_frame_server__coll__graph.png" border="0" usemap="#_frame_server_3_01_t_img_01_4_coll__map" alt="Collaboration graph"/></div>
<map name="_frame_server_3_01_t_img_01_4_coll__map" id="_frame_server_3_01_t_img_01_4_coll__map">
</map>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aaafe8051ac78bd4d8ed3027acd24a1c0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaafe8051ac78bd4d8ed3027acd24a1c0"></a>
typedef TImg&#160;</td><td class="memItemRight" valign="bottom"><b>ImgType</b></td></tr>
<tr class="separator:aaafe8051ac78bd4d8ed3027acd24a1c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8d2ffbcea7c28182a48f32e86f830e12"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="struct_vision_core_1_1_data_structures_1_1_frame.html">Frame</a>&lt; TImg &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_vision_core_1_1_interfaces_1_1_frame_server.html#a8d2ffbcea7c28182a48f32e86f830e12">captureFrame</a> ()=0</td></tr>
<tr class="memdesc:a8d2ffbcea7c28182a48f32e86f830e12"><td class="mdescLeft">&#160;</td><td class="mdescRight">Captures and returns a frame from the source.  <a href="#a8d2ffbcea7c28182a48f32e86f830e12">More...</a><br /></td></tr>
<tr class="separator:a8d2ffbcea7c28182a48f32e86f830e12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7d6b5c759a38e9e376f500f7155a679"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac7d6b5c759a38e9e376f500f7155a679"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_vision_core_1_1_interfaces_1_1_frame_server.html#ac7d6b5c759a38e9e376f500f7155a679">hasNext</a> ()=0</td></tr>
<tr class="memdesc:ac7d6b5c759a38e9e376f500f7155a679"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if there exist at least one frame available to be captured. <br /></td></tr>
<tr class="separator:ac7d6b5c759a38e9e376f500f7155a679"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a81377750a63504ad091b831cbb7786"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6a81377750a63504ad091b831cbb7786"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_vision_core_1_1_interfaces_1_1_frame_server.html#a6a81377750a63504ad091b831cbb7786">releaseServer</a> ()=0</td></tr>
<tr class="memdesc:a6a81377750a63504ad091b831cbb7786"><td class="mdescLeft">&#160;</td><td class="mdescRight">Release the frame server resources (e.g. closes the video file, shut-down webcam). <br /></td></tr>
<tr class="separator:a6a81377750a63504ad091b831cbb7786"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae302d35f6c7ab3201fe7bfc5e07e0154"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae302d35f6c7ab3201fe7bfc5e07e0154"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_vision_core_1_1_interfaces_1_1_frame_server.html#ae302d35f6c7ab3201fe7bfc5e07e0154">~FrameServer</a> ()</td></tr>
<tr class="memdesc:ae302d35f6c7ab3201fe7bfc5e07e0154"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destrutor. <br /></td></tr>
<tr class="separator:ae302d35f6c7ab3201fe7bfc5e07e0154"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class TImg&gt;<br />
class VisionCore::Interfaces::FrameServer&lt; TImg &gt;</h3>

<p>Interface for a source of frames. The frames can come from a video file, webcam, set of images, etc. </p>
<p>The objective of this interface is to abstract a source of frames.</p>
<p>The method <a class="el" href="class_vision_core_1_1_interfaces_1_1_frame_server.html#a8d2ffbcea7c28182a48f32e86f830e12" title="Captures and returns a frame from the source. ">captureFrame()</a> should be called to get a Frame, which contains an image, a timestamp and a frame number.</p>
<p>By definition, calling this method consumes a frame from the source, so subsequent calls return the next available frame.</p>
<p>The method <a class="el" href="class_vision_core_1_1_interfaces_1_1_frame_server.html#ac7d6b5c759a38e9e376f500f7155a679" title="Returns true if there exist at least one frame available to be captured. ">hasNext()</a> should be called before capturing a frame to verify if there is an available frame.</p>
<p>A typical use of a frame server is:</p>
<p>while(frameServer.hasNext()){ VisionCore::Frame&lt;frameServer::ImgType&gt; frame = frameServer.captureFrame(); PROCESS FRAME } frameServer.releaseServer();</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">TImg</td><td>Image type. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd>Frame FrameServerCv AsyncFrameServerWrap </dd></dl>

<p>Definition at line <a class="el" href="_vision_interfaces_8h_source.html#l00084">84</a> of file <a class="el" href="_vision_interfaces_8h_source.html">VisionInterfaces.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a8d2ffbcea7c28182a48f32e86f830e12"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="struct_vision_core_1_1_data_structures_1_1_frame.html">Frame</a>&lt;TImg&gt; captureFrame </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Captures and returns a frame from the source. </p>
<p>This methods should only be called when method <a class="el" href="class_vision_core_1_1_interfaces_1_1_frame_server.html#ac7d6b5c759a38e9e376f500f7155a679" title="Returns true if there exist at least one frame available to be captured. ">hasNext()</a> returns true, otherwise the behaviour is undefined. </p>

<p>Implemented in <a class="el" href="class_vision_core_1_1_evaluation_1_1_frame_server_det_data.html#a8589f45eb1b80bfffdeaf49ed32694ce">FrameServerDetData&lt; TImg, TObj &gt;</a>, <a class="el" href="class_vision_core_1_1_evaluation_1_1_frame_server_det_data.html#a8589f45eb1b80bfffdeaf49ed32694ce">FrameServerDetData&lt; cv::Mat, TObj &gt;</a>, and <a class="el" href="class_viscv_1_1_frame_server_cv.html#a9ad5d34c4a7364130b2da00adc8f8638">FrameServerCv</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>D:/FURG/Software/CvWorksRelease1/Core/Vision/<a class="el" href="_vision_interfaces_8h_source.html">VisionInterfaces.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_vision_core.html">VisionCore</a></li><li class="navelem"><a class="el" href="namespace_vision_core_1_1_interfaces.html">Interfaces</a></li><li class="navelem"><a class="el" href="class_vision_core_1_1_interfaces_1_1_frame_server.html">FrameServer</a></li>
    <li class="footer">Generated on Wed Nov 18 2015 11:12:12 for CvWorks by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
