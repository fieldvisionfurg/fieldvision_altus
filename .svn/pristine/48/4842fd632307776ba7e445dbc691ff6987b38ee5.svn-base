<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>CvWorks: D:/FURG/Software/CvWorksRelease1/Components/VisionWidgets/ProcessControl.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="C3.jpg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">CvWorks
   &#160;<span id="projectnumber">0.4</span>
   </div>
   <div id="projectbrief">Computer Vision Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_process_control_8cpp_source.html','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ProcessControl.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">Copyright (c) 2015, FURG - Universidade Federal do Rio Grande</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">Redistribution and use in source and binary forms, with or without</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">modification, are permitted provided that the following conditions are met:</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    * Redistributions of source code must retain the above copyright</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">      notice, this list of conditions and the following disclaimer.</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    * Redistributions in binary form must reproduce the above copyright</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">      notice, this list of conditions and the following disclaimer in the</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">      documentation and/or other materials provided with the distribution.</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    * Neither the name of the Universidade Federal do Rio Grande nor the</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">      names of its contributors may be used to endorse or promote products</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">      derived from this software without specific prior written permission.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">DISCLAIMED. IN NO EVENT SHALL UNIVERSIDADE FEDERAL DO RIO GRANDE BE LIABLE FOR ANY</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;ProcessControl.h&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;QHBoxLayout&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;QLineEdit&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;QFileDialog&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;QPushButton&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;QSlider&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;QDial&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;QDoubleSpinBox&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &lt;QCheckBox&gt;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="class_process_control.html#afc7ce4c99cd1dbeea91be72fe42c7e08">   40</a></span>&#160;<a class="code" href="class_process_control.html#afc7ce4c99cd1dbeea91be72fe42c7e08">ProcessControl::ProcessControl</a>()</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="class_process_control.html#af8adcae7adceab76734731c6dbd9b8cb">   44</a></span>&#160;<a class="code" href="class_process_control.html#afc7ce4c99cd1dbeea91be72fe42c7e08">ProcessControl::ProcessControl</a>(<a class="code" href="class_frame_server_control_widget.html">FrameServerControlWidget</a>* frameServerControl_)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    :frameServerControl(frameServerControl_)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    ,widget(new <a class="code" href="class_process_widget.html">ProcessWidget</a>(this))</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="comment">// Processa botao de encerrar processo</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    QObject::connect(<a class="code" href="class_process_control.html#ae36e86e26d6a323a052c5e1b20c7deef">widget</a>,&amp;<a class="code" href="class_process_widget.html#a10e1c99ae3f62bbba072bfc96d9d857c">ProcessWidget::closeButtonClicked</a>,[&amp;](){</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        this-&gt;<a class="code" href="class_process_control.html#a4a778f9624d81dff33181cbaa7b2ff33">~ProcessControl</a>();</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    });</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="comment">// Conecta a atualizaÃ§Ã£o da imagem com o redesenhamento dos resultados</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    QMetaObject::Connection connDraw = QObject::connect(<a class="code" href="class_process_control.html#a92b9bba974596786a40980a15cbf57b0">frameServerControl</a>-&gt;getImgViewer(),   <span class="comment">// quando imageViewer emitir</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                     &amp;ImageViewerCv::imageRedraw,     <span class="comment">//sinal que imagem foi redesenhada</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                     <a class="code" href="class_process_control.html#a92b9bba974596786a40980a15cbf57b0">frameServerControl</a>-&gt;getImgViewer(),</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                     [=](QPainter *painter)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                     {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                            <span class="keywordflow">if</span>(<a class="code" href="class_process_control.html#ae36e86e26d6a323a052c5e1b20c7deef">widget</a>-&gt;drawResult())</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                this-&gt;drawResults(painter);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                     },                        <span class="comment">//desenha resultado</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                     Qt::DirectConnection          <span class="comment">//imediatamente</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                     );</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="comment">// O Qt nÃ£o desconecta funÃ§Ãµes lambda, entÃ£o cria uma lista para desconetar no destrutor.</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="class_process_control.html#a8479dec0c2314e7a56e43aa7ef3bba27">connections</a>.push_back(connDraw);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="class_process_control.html#a4a778f9624d81dff33181cbaa7b2ff33">   69</a></span>&#160;<a class="code" href="class_process_control.html#a4a778f9624d81dff33181cbaa7b2ff33">ProcessControl::~ProcessControl</a>()</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">for</span>(QMetaObject::Connection&amp; conn : <a class="code" href="class_process_control.html#a8479dec0c2314e7a56e43aa7ef3bba27">connections</a>)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        QObject::disconnect(conn);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">delete</span> <a class="code" href="class_process_control.html#ae36e86e26d6a323a052c5e1b20c7deef">widget</a>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordtype">void</span> ProcessControl::drawResults(QPainter *painter)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;{</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="class_process_control.html#a0f269bca8139be827d8f673bed676f60">   82</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_process_control.html#a0f269bca8139be827d8f673bed676f60">ProcessControl::resetLog</a>()</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;{</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="class_process_control.html#a1f47b0f6a1af3369f3feb1eabbe85543">   87</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_process_control.html#a1f47b0f6a1af3369f3feb1eabbe85543">ProcessControl::setStatus</a>(<span class="keyword">const</span> QString&amp; status)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="class_process_control.html#ae36e86e26d6a323a052c5e1b20c7deef">widget</a>-&gt;setStatus(status);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="class_process_control.html#aad8b7703b6f7c1e90253faa8a79246bc">   92</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_process_control.html#aad8b7703b6f7c1e90253faa8a79246bc">ProcessControl::exportLog</a>(std::string fileName)</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="class_process_control.html#a9616aa7c12793e2bdf0a661f187e6c6b">   97</a></span>&#160;<a class="code" href="class_process_widget.html">ProcessWidget</a>* <a class="code" href="class_process_control.html#a9616aa7c12793e2bdf0a661f187e6c6b">ProcessControl::getWidget</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_process_control.html#ae36e86e26d6a323a052c5e1b20c7deef">widget</a>;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="class_process_control.html#ad4cdd61d9764dff1012e170ddd629f8f">  102</a></span>&#160;QColor <a class="code" href="class_process_control.html#ad4cdd61d9764dff1012e170ddd629f8f">ProcessControl::getDrawColor</a>()</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_process_control.html#ae36e86e26d6a323a052c5e1b20c7deef">widget</a>-&gt;<a class="code" href="class_process_widget.html#ad4cdd61d9764dff1012e170ddd629f8f">getDrawColor</a>();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="class_process_control.html#a728585b52151f34fb52cffdef25a53ae">  107</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_process_control.html#af1df9f770b44a1ec346c791f5bb72e32">ProcessControl::addNumericParameter</a>(<span class="keyword">const</span> std::string name, <span class="keywordtype">double</span>&amp; param, <span class="keyword">const</span> <span class="keywordtype">double</span> min, <span class="keyword">const</span> <span class="keywordtype">double</span> max,<span class="keyword">const</span> <span class="keywordtype">double</span> initial, <span class="keyword">const</span> <span class="keywordtype">int</span> steps, <span class="keyword">const</span> <span class="keywordtype">int</span> style){</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    std::function&lt;void (double)&gt; setParam = [&amp;](<span class="keywordtype">double</span> param_){</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        param=param_;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    };</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <a class="code" href="class_process_control.html#af1df9f770b44a1ec346c791f5bb72e32">addNumericParameter</a>(name,setParam,min,max,initial,steps,style);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="class_process_control.html#a2eeb77e2749ce88b06708aed586c9e68">  114</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_process_control.html#af1df9f770b44a1ec346c791f5bb72e32">ProcessControl::addNumericParameter</a>(<span class="keyword">const</span> std::string name, <span class="keywordtype">int</span>&amp; param, <span class="keyword">const</span> <span class="keywordtype">int</span> min, <span class="keyword">const</span> <span class="keywordtype">int</span> max,<span class="keyword">const</span> <span class="keywordtype">int</span> initial){</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    std::function&lt;void (int)&gt; setParam = [&amp;](<span class="keywordtype">int</span> param_){</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        param=param_;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    };</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="class_process_control.html#af1df9f770b44a1ec346c791f5bb72e32">addNumericParameter</a>(name,setParam,min,max,initial);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="class_process_control.html#a05adea2771aad5d07683f1da4027391c">  121</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_process_control.html#af1df9f770b44a1ec346c791f5bb72e32">ProcessControl::addNumericParameter</a>(<span class="keyword">const</span> std::string name, <span class="keyword">const</span> std::function&lt;<span class="keywordtype">void</span> (<span class="keywordtype">int</span>)&gt; setParam, <span class="keyword">const</span> <span class="keywordtype">int</span> min, <span class="keyword">const</span> <span class="keywordtype">int</span> max, <span class="keyword">const</span> <span class="keywordtype">int</span> initial)</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;{</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    std::function&lt;void (double)&gt; setParamDouble = [&amp;](<span class="keywordtype">double</span> param_){</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        setParam((<span class="keywordtype">int</span>)param_); <span class="comment">//converte para int</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    };</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">int</span> steps=max-min+1;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <a class="code" href="class_process_control.html#af1df9f770b44a1ec346c791f5bb72e32">addNumericParameter</a>(name,setParam,(<span class="keywordtype">double</span>)min,(<span class="keywordtype">double</span>)max,(<span class="keywordtype">double</span>)initial,steps);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="class_process_control.html#af1df9f770b44a1ec346c791f5bb72e32">  130</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_process_control.html#af1df9f770b44a1ec346c791f5bb72e32">ProcessControl::addNumericParameter</a>(<span class="keyword">const</span> std::string name, <span class="keyword">const</span> std::function&lt;<span class="keywordtype">void</span> (<span class="keywordtype">double</span>)&gt; setParam, <span class="keyword">const</span> <span class="keywordtype">double</span> min, <span class="keyword">const</span> <span class="keywordtype">double</span> max, <span class="keyword">const</span> <span class="keywordtype">double</span> initial, <span class="keyword">const</span> <span class="keywordtype">int</span> steps, <span class="keyword">const</span> <span class="keywordtype">int</span> style)</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;{</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="comment">//Cria slider</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    QSlider *slider = <span class="keyword">new</span> QSlider(Qt::Horizontal);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="comment">//QDial *slider = new QDial();</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="comment">//slider-&gt;setWrapping(false);</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="comment">//slider-&gt;setNotchesVisible(true);</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    slider-&gt;setMinimum(0);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    slider-&gt;setMaximum(steps-1);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">if</span>(initial&gt;=min &amp;&amp; initial&lt;=max){</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        setParam(initial);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        slider-&gt;setValue(<span class="keywordtype">int</span>((initial-min)*(steps-1)/(max-min)));</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="comment">//Cria label com nome</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    std::string s = <a class="code" href="class_process_control.html#abc29e461e01cc0c712944f8f47f91331">name</a>;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    s += <span class="stringliteral">&quot;: &quot;</span>;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    QLabel *label = <span class="keyword">new</span> QLabel(QString::fromStdString(s));</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="comment">//Cria label com valor</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="comment">//QLabel *valueLabel = new QLabel(QString::number(initial));</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    QDoubleSpinBox* spinBox = <span class="keyword">new</span> QDoubleSpinBox();</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    spinBox-&gt;setMinimum(min);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    spinBox-&gt;setMaximum(max);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    spinBox-&gt;setSingleStep((max-min)/(steps-1));</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    spinBox-&gt;setValue(initial);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="comment">//Cria widget</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    QWidget* w = <span class="keyword">new</span> QWidget();</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    QGridLayout* gridLayout = <span class="keyword">new</span> QGridLayout(w);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    gridLayout-&gt;addWidget(label,0,0);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    gridLayout-&gt;addWidget(spinBox,0,1);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    gridLayout-&gt;addWidget(slider,1,0,1,2);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="comment">//Chama setParam quando slider mudar o valor</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    QObject::connect(slider,</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                     &amp;QSlider::valueChanged,</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                     [=](<span class="keyword">const</span> <span class="keywordtype">int</span> newValue){</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                        <span class="keywordtype">double</span> dValue= (max-min)/(steps-1)*newValue+min;  <span class="comment">//converte (line equation)</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                        spinBox-&gt;setValue(dValue);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                        setParam(dValue);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                    });</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="comment">//Chama setParam quando spinBox mudar o valor</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    QObject::connect(spinBox,</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                     <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span>(QDoubleSpinBox::*)(<span class="keywordtype">double</span>)<span class="keyword">&gt;</span>(&amp;QDoubleSpinBox::valueChanged),</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                     [=](<span class="keywordtype">double</span> newValue){</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                        slider-&gt;setValue(<span class="keywordtype">int</span>((newValue-min)*(steps-1)/(max-min)));</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                        setParam(newValue);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                    });</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="class_process_control.html#ae36e86e26d6a323a052c5e1b20c7deef">widget</a>-&gt;<a class="code" href="class_process_widget.html#a956ae288828446d19581733815bad2b9">addParameterWidget</a>(w);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;}</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="class_process_control.html#a3d13872e46159846955f51ad4b651135">  189</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_process_control.html#a3d13872e46159846955f51ad4b651135">ProcessControl::addLeftClickHandler</a>(<span class="keyword">const</span> std::string name, std::function&lt;<span class="keywordtype">void</span> (QPoint)&gt; handlerFcn,<span class="keywordtype">bool</span> enabled_)</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;{</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <a class="code" href="class_image_viewer_cv.html">ImageViewerCv</a> *imgViewer = <a class="code" href="class_process_control.html#a92b9bba974596786a40980a15cbf57b0">frameServerControl</a>-&gt;getImgViewer();</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="comment">//Cria checkbox para habilitar ou desabilitar captura.</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    QCheckBox* enabled = <span class="keyword">new</span> QCheckBox();</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    enabled-&gt;setChecked(enabled_);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="comment">//Cria labels</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    QLabel *nameLabel = <span class="keyword">new</span> QLabel(QString::fromStdString(name +<span class="stringliteral">&quot;: &quot;</span>));</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    QLabel *pointLabel = <span class="keyword">new</span> QLabel(<span class="stringliteral">&quot; &quot;</span>);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="comment">//Cria widget</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    QWidget* w = <span class="keyword">new</span> QWidget();</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    QHBoxLayout * layout = <span class="keyword">new</span> QHBoxLayout (w);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    layout-&gt;addWidget(enabled);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    layout-&gt;addWidget(nameLabel);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    layout-&gt;addWidget(pointLabel);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="comment">//FunÃ§Ã£o executada no clicke</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    std::function&lt;void (QPoint)&gt; clicked = [=](QPoint p){</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keywordflow">if</span>(enabled-&gt;isChecked()){</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            pointLabel-&gt;setText(QString::number(p.x())+QString(<span class="stringliteral">&quot;,&quot;</span>)+QString::number(p.y()));</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            handlerFcn(p);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        }</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    };</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    QMetaObject::Connection conn= QObject::connect(imgViewer,&amp;ImageViewerCv::leftClick,clicked);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <a class="code" href="class_process_control.html#a8479dec0c2314e7a56e43aa7ef3bba27">connections</a>.push_back(conn);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <a class="code" href="class_process_control.html#a9616aa7c12793e2bdf0a661f187e6c6b">getWidget</a>()-&gt;<a class="code" href="class_process_widget.html#a956ae288828446d19581733815bad2b9">addParameterWidget</a>(w);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;}</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="class_process_control.html#a7d15eb536761436d80d42b2959fb989e">  221</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_process_control.html#a7d15eb536761436d80d42b2959fb989e">ProcessControl::addMultiClickHandler</a>(<span class="keyword">const</span> std::string name, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numOfPoints, std::function&lt;<span class="keywordtype">void</span> (std::vector&lt;QPoint&gt;)&gt; handlerFcn,<span class="keywordtype">bool</span> enabled_)</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;{</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keyword">class </span>MultiClickWidget : <span class="keyword">public</span> QWidget</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        MultiClickWidget(<span class="keyword">const</span> std::string name,<a class="code" href="class_image_viewer_cv.html">ImageViewerCv</a> *imgViewer,<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numOfPoints,std::function&lt;<span class="keywordtype">void</span> (std::vector&lt;QPoint&gt;)&gt; handlerFcn,<span class="keywordtype">bool</span> enabled_)</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            :points(numOfPoints)</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            ,processPoints(handlerFcn)</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        {</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            clickCount=0;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            numPoints=numOfPoints;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            <span class="comment">//Cria labels</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            QLabel *nameLabel = <span class="keyword">new</span> QLabel(QString::fromStdString(name));</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            std::vector&lt;QLabel*&gt; pointLabels(numPoints);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;numPoints;i++)</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                pointLabels[i]=<span class="keyword">new</span> QLabel(<span class="stringliteral">&quot;0&quot;</span>);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            <span class="comment">//Cria checkbox para habilitar ou desabilitar captura.</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            QCheckBox* enabled = <span class="keyword">new</span> QCheckBox();</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            enabled-&gt;setChecked(enabled_);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            <span class="comment">//Cria widget</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            QGridLayout* gridLayout = <span class="keyword">new</span> QGridLayout();</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            gridLayout-&gt;addWidget(enabled,0,0);</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            gridLayout-&gt;addWidget(nameLabel,0,1);</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;numPoints;i++)</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                gridLayout-&gt;addWidget(pointLabels[i],i+1,1);</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            setLayout(gridLayout);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            <span class="comment">//FunÃ§Ã£o executada no clicke</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            std::function&lt;void (QPoint)&gt; clicked = [=](QPoint p){</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                <span class="keywordflow">if</span>(enabled-&gt;isChecked()){</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                    <span class="comment">// mostra ponto na tela</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                    <span class="keywordtype">int</span> pointIndex = clickCount % numPoints;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                    pointLabels[pointIndex]-&gt;setText(QString::number(p.x())+QString(<span class="stringliteral">&quot;,&quot;</span>)+QString::number(p.y()));</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                    <span class="comment">//armazena ponto</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                    points[pointIndex]=p;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                    <span class="comment">// se alcanÃ§ou numero de pontos, chama handlerFcn</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                    <span class="keywordflow">if</span>(pointIndex==(numPoints-1))</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                        processPoints(points);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                    clickCount++;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                }</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            };</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            conn=QObject::connect(imgViewer,&amp;ImageViewerCv::leftClick,clicked);</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        }</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="comment">// Destrutor</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        ~MultiClickWidget()</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        {</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            <span class="comment">// Para de capturar cliques</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            QObject::disconnect(conn);</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        }</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> clickCount;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numPoints;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        std::vector&lt;QPoint&gt; points;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        std::function&lt;void (std::vector&lt;QPoint&gt;)&gt; processPoints;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        QMetaObject::Connection conn;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    };</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <a class="code" href="class_process_control.html#ae36e86e26d6a323a052c5e1b20c7deef">widget</a>-&gt;<a class="code" href="class_process_widget.html#a956ae288828446d19581733815bad2b9">addParameterWidget</a>(<span class="keyword">new</span> MultiClickWidget(name,<a class="code" href="class_process_control.html#a92b9bba974596786a40980a15cbf57b0">frameServerControl</a>-&gt;getImgViewer(),numOfPoints,handlerFcn,enabled_));</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;}</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div>
<div class="line"><a name="l00291"></a><span class="lineno"><a class="line" href="class_process_control.html#acbe523f427680c7b63756a998822c963">  291</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_process_control.html#acbe523f427680c7b63756a998822c963">ProcessControl::addSubImageAndRectHandler</a>(<span class="keyword">const</span> std::string name, std::function&lt;<span class="keywordtype">void</span>(cv::Mat,cv::Rect)&gt; handlerFcn,<span class="keywordtype">bool</span> enabled_)</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;{</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <span class="comment">//Cria widget para mostrar sub-imagem</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;     <a class="code" href="class_image_viewer_cv.html">ImageViewerCv</a>* referenceView = <span class="keyword">new</span> <a class="code" href="class_image_viewer_cv.html">ImageViewerCv</a>();</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;     referenceView-&gt;changeTitle(<span class="stringliteral">&quot;Selection&quot;</span>);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="comment">//Quando usuÃ¡rio clica duas vezes na tela, define um retÃ¢ngulo contendo a sub-imagem</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="comment">//Define a funÃ§Ã£o que trata dos pontos clicados</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    std::function&lt;void(std::vector&lt;QPoint&gt;)&gt; fcn = [=](std::vector&lt;QPoint&gt; points){</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <span class="comment">//Obtem imagem atual, cria um retÃ¢ngulo baseado nos pontos clicados e chama handlerFcn</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        cv::Mat img = <a class="code" href="class_process_control.html#a92b9bba974596786a40980a15cbf57b0">frameServerControl</a>-&gt;getImgViewer()-&gt;getCvImg();</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        cv::Point topLeft(points[0].x(),points[0].y());</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        cv::Point bottonRight(points[1].x(),points[1].y());</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        cv::Rect objRect(topLeft,bottonRight);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        cv::Mat reference(img,objRect);</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        referenceView-&gt;setImage(reference);</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        handlerFcn(reference,objRect);</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    };</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    this-&gt;<a class="code" href="class_process_control.html#a7d15eb536761436d80d42b2959fb989e">addMultiClickHandler</a>(name,2,fcn,enabled_);</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    this-&gt;<a class="code" href="class_process_control.html#a9616aa7c12793e2bdf0a661f187e6c6b">getWidget</a>()-&gt;<a class="code" href="class_process_widget.html#a956ae288828446d19581733815bad2b9">addParameterWidget</a>(referenceView);</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;}</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div>
<div class="line"><a name="l00316"></a><span class="lineno"><a class="line" href="class_process_control.html#a4a0b533407f26dbe53130d931afb645d">  316</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_process_control.html#a4a0b533407f26dbe53130d931afb645d">ProcessControl::addSubImageHandler</a>(<span class="keyword">const</span> std::string name, std::function&lt;<span class="keywordtype">void</span>(cv::Mat)&gt; handlerFcn,<span class="keywordtype">bool</span> enabled_)</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;{</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;   <span class="comment">// ignore rect</span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;   std::function&lt;void(cv::Mat,cv::Rect)&gt; f = [handlerFcn](cv::Mat img,cv::Rect r) {</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;       handlerFcn(img);</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;   };</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;   this-&gt;<a class="code" href="class_process_control.html#acbe523f427680c7b63756a998822c963">addSubImageAndRectHandler</a>(name,f,enabled_);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;}</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div>
<div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="class_process_control.html#a45754e768e48f832b466b9e2fe664d31">  326</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_process_control.html#a45754e768e48f832b466b9e2fe664d31">ProcessControl::addFileChoice</a>(<span class="keyword">const</span> std::string name, std::function&lt;<span class="keywordtype">void</span> (<span class="keyword">const</span> std::string)&gt; handlerFcn)</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;{</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="comment">//TODO: adicionar valor inicial</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="comment">//Cria label com nome</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    QLabel *label = <span class="keyword">new</span> QLabel(QString::fromStdString(name));</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="comment">//Cria edit box que mostra o full path do arquivo</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    QLineEdit* fileEdit = <span class="keyword">new</span> QLineEdit();</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="comment">//Cria botÃ£o que abre dialogo de arquivo e chama funÃ§Ã£o handler</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    QPushButton* openBtn = <span class="keyword">new</span> QPushButton(<span class="stringliteral">&quot;Open&quot;</span>);</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    QObject::connect(openBtn,&amp;QPushButton::clicked,[=](){</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        QString detecName = QFileDialog::getOpenFileName(<a class="code" href="class_process_control.html#a9616aa7c12793e2bdf0a661f187e6c6b">getWidget</a>(), <span class="stringliteral">&quot;Change Detector&quot;</span>,</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                                                        <span class="stringliteral">&quot;..\\..\\ExternalLibraries\\OpenCV2.4.9\\data\\haarcascades&quot;</span> );</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;       fileEdit-&gt;setText(detecName);</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;       handlerFcn(detecName.toStdString());</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    });</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="comment">//Cria widget</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    QWidget* w = <span class="keyword">new</span> QWidget();</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    QGridLayout* gridLayout = <span class="keyword">new</span> QGridLayout(w);</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    gridLayout-&gt;addWidget(label,0,0,1,2);</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    gridLayout-&gt;addWidget(fileEdit,1,1,1,2);</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    gridLayout-&gt;addWidget(openBtn,2,1);</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <a class="code" href="class_process_control.html#ae36e86e26d6a323a052c5e1b20c7deef">widget</a>-&gt;<a class="code" href="class_process_widget.html#a956ae288828446d19581733815bad2b9">addParameterWidget</a>(w);</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;}</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div>
<div class="line"><a name="l00355"></a><span class="lineno"><a class="line" href="class_process_control.html#a29d5382fa365a84b2fe460e876f4e283">  355</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_process_control.html#a29d5382fa365a84b2fe460e876f4e283">ProcessControl::addBoolParameter</a>(<span class="keyword">const</span> std::string name, <span class="keywordtype">bool</span>&amp; param)</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;{</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="comment">//Cria checkbox para habilitar ou desabilitar parametro.</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    QCheckBox* enabled = <span class="keyword">new</span> QCheckBox(QString::fromStdString(name));</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    enabled-&gt;setChecked(param);</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    QObject::connect(enabled,&amp;QCheckBox::stateChanged,[&amp;](<span class="keywordtype">int</span> state){</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;       <span class="keywordflow">if</span>(state==Qt::Checked)</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;           param=<span class="keyword">true</span>;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;       <span class="keywordflow">else</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;           param=<span class="keyword">false</span>;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    });</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <a class="code" href="class_process_control.html#ae36e86e26d6a323a052c5e1b20c7deef">widget</a>-&gt;<a class="code" href="class_process_widget.html#a956ae288828446d19581733815bad2b9">addParameterWidget</a>(enabled);</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;}</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div>
<div class="line"><a name="l00369"></a><span class="lineno"><a class="line" href="class_process_control.html#af29744bba8cc61999481a5d3849004ce">  369</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_process_control.html#a29d5382fa365a84b2fe460e876f4e283">ProcessControl::addBoolParameter</a>(<span class="keyword">const</span> std::string name, std::function&lt;<span class="keywordtype">void</span>(<span class="keywordtype">bool</span>)&gt; setParam, <span class="keyword">const</span> <span class="keywordtype">bool</span> initial)</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;{</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="comment">//Cria checkbox para habilitar ou desabilitar parametro.</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    QCheckBox* enabled = <span class="keyword">new</span> QCheckBox(QString::fromStdString(name));</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    enabled-&gt;setChecked(initial);</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    QObject::connect(enabled,&amp;QCheckBox::stateChanged,[&amp;](<span class="keywordtype">int</span> state){</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;       <span class="keywordflow">if</span>(state==Qt::Checked)</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;           setParam(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;       <span class="keywordflow">else</span></div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;           setParam(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    });</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <a class="code" href="class_process_control.html#ae36e86e26d6a323a052c5e1b20c7deef">widget</a>-&gt;<a class="code" href="class_process_widget.html#a956ae288828446d19581733815bad2b9">addParameterWidget</a>(enabled);</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;}</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div>
<div class="line"><a name="l00383"></a><span class="lineno"><a class="line" href="class_process_control.html#aebd19108ae7957a2c5f4f55aa4a8737e">  383</a></span>&#160;QString <a class="code" href="class_process_control.html#aebd19108ae7957a2c5f4f55aa4a8737e">ProcessControl::getName</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_process_control.html#abc29e461e01cc0c712944f8f47f91331">name</a>;</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;}</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div>
<div class="line"><a name="l00388"></a><span class="lineno"><a class="line" href="class_process_control.html#ae9b6ae8085e66d1a0440a443699b6e9a">  388</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_process_control.html#ae9b6ae8085e66d1a0440a443699b6e9a">ProcessControl::setName</a>(<span class="keyword">const</span> QString &amp;value)</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;{</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    name = value;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <a class="code" href="class_process_control.html#ae36e86e26d6a323a052c5e1b20c7deef">widget</a>-&gt;setTitle(name);</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;}</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div>
<div class="ttc" id="class_process_control_html_a92b9bba974596786a40980a15cbf57b0"><div class="ttname"><a href="class_process_control.html#a92b9bba974596786a40980a15cbf57b0">ProcessControl::frameServerControl</a></div><div class="ttdeci">FrameServerControlWidget * frameServerControl</div><div class="ttdoc">Objeto que representa uma fonte de video. </div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8h_source.html#l00115">ProcessControl.h:115</a></div></div>
<div class="ttc" id="class_process_control_html_abc29e461e01cc0c712944f8f47f91331"><div class="ttname"><a href="class_process_control.html#abc29e461e01cc0c712944f8f47f91331">ProcessControl::name</a></div><div class="ttdeci">QString name</div><div class="ttdoc">Nome de exibição do processo em execução. </div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8h_source.html#l00124">ProcessControl.h:124</a></div></div>
<div class="ttc" id="class_process_widget_html_ad4cdd61d9764dff1012e170ddd629f8f"><div class="ttname"><a href="class_process_widget.html#ad4cdd61d9764dff1012e170ddd629f8f">ProcessWidget::getDrawColor</a></div><div class="ttdeci">QColor getDrawColor()</div><div class="ttdoc">Retorna a cor selecionada pelo usuário. </div><div class="ttdef"><b>Definition:</b> <a href="_process_widget_8cpp_source.html#l00080">ProcessWidget.cpp:80</a></div></div>
<div class="ttc" id="class_process_control_html_a8479dec0c2314e7a56e43aa7ef3bba27"><div class="ttname"><a href="class_process_control.html#a8479dec0c2314e7a56e43aa7ef3bba27">ProcessControl::connections</a></div><div class="ttdeci">std::vector&lt; QMetaObject::Connection &gt; connections</div><div class="ttdoc">Vetor com conexões do Qt que devem ser desconectadas no destrutor. </div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8h_source.html#l00121">ProcessControl.h:121</a></div></div>
<div class="ttc" id="class_process_control_html_a29d5382fa365a84b2fe460e876f4e283"><div class="ttname"><a href="class_process_control.html#a29d5382fa365a84b2fe460e876f4e283">ProcessControl::addBoolParameter</a></div><div class="ttdeci">void addBoolParameter(const std::string name, bool &amp;param)</div><div class="ttdoc">Adiciona um widget para um parâmetro do tipo bool. </div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8cpp_source.html#l00355">ProcessControl.cpp:355</a></div></div>
<div class="ttc" id="class_process_control_html_ae9b6ae8085e66d1a0440a443699b6e9a"><div class="ttname"><a href="class_process_control.html#ae9b6ae8085e66d1a0440a443699b6e9a">ProcessControl::setName</a></div><div class="ttdeci">void setName(const QString &amp;value)</div><div class="ttdoc">Altera o nome do processo. </div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8cpp_source.html#l00388">ProcessControl.cpp:388</a></div></div>
<div class="ttc" id="class_process_control_html_acbe523f427680c7b63756a998822c963"><div class="ttname"><a href="class_process_control.html#acbe523f427680c7b63756a998822c963">ProcessControl::addSubImageAndRectHandler</a></div><div class="ttdeci">void addSubImageAndRectHandler(const std::string name, std::function&lt; void(cv::Mat img, cv::Rect r)&gt; handlerFcn, bool enabled_=false)</div><div class="ttdoc">Adiciona um widget que captura uma sub-imagem baseada na seleção do usuário. </div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8cpp_source.html#l00291">ProcessControl.cpp:291</a></div></div>
<div class="ttc" id="class_process_control_html_afc7ce4c99cd1dbeea91be72fe42c7e08"><div class="ttname"><a href="class_process_control.html#afc7ce4c99cd1dbeea91be72fe42c7e08">ProcessControl::ProcessControl</a></div><div class="ttdeci">ProcessControl()</div><div class="ttdoc">Construtor padrão. </div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8cpp_source.html#l00040">ProcessControl.cpp:40</a></div></div>
<div class="ttc" id="class_process_control_html_a7d15eb536761436d80d42b2959fb989e"><div class="ttname"><a href="class_process_control.html#a7d15eb536761436d80d42b2959fb989e">ProcessControl::addMultiClickHandler</a></div><div class="ttdeci">void addMultiClickHandler(const std::string name, const unsigned int numOfPoints, std::function&lt; void(std::vector&lt; QPoint &gt;)&gt; handlerFcn, bool enabled_=false)</div><div class="ttdoc">Adiciona um widget que captura numOfPoints cliques na imagem e chama a função handlerFcn repassando o...</div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8cpp_source.html#l00221">ProcessControl.cpp:221</a></div></div>
<div class="ttc" id="class_process_control_html_aebd19108ae7957a2c5f4f55aa4a8737e"><div class="ttname"><a href="class_process_control.html#aebd19108ae7957a2c5f4f55aa4a8737e">ProcessControl::getName</a></div><div class="ttdeci">QString getName() const </div><div class="ttdoc">Retorna o nome do processo. </div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8cpp_source.html#l00383">ProcessControl.cpp:383</a></div></div>
<div class="ttc" id="class_process_control_html_ae36e86e26d6a323a052c5e1b20c7deef"><div class="ttname"><a href="class_process_control.html#ae36e86e26d6a323a052c5e1b20c7deef">ProcessControl::widget</a></div><div class="ttdeci">ProcessWidget * widget</div><div class="ttdoc">Widget com funcionalidades básicas de controle (fechar, pausar, definir cor de desenho). </div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8h_source.html#l00118">ProcessControl.h:118</a></div></div>
<div class="ttc" id="class_process_widget_html"><div class="ttname"><a href="class_process_widget.html">ProcessWidget</a></div><div class="ttdoc">Interface gráfica para um objeto ProcessControl. Mostra funcionalidades básicas de controle (fechar...</div><div class="ttdef"><b>Definition:</b> <a href="_process_widget_8h_source.html#l00048">ProcessWidget.h:48</a></div></div>
<div class="ttc" id="class_process_control_html_aad8b7703b6f7c1e90253faa8a79246bc"><div class="ttname"><a href="class_process_control.html#aad8b7703b6f7c1e90253faa8a79246bc">ProcessControl::exportLog</a></div><div class="ttdeci">virtual bool exportLog(std::string fileName)</div><div class="ttdoc">Exports the log data to file. </div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8cpp_source.html#l00092">ProcessControl.cpp:92</a></div></div>
<div class="ttc" id="class_process_control_html_a4a0b533407f26dbe53130d931afb645d"><div class="ttname"><a href="class_process_control.html#a4a0b533407f26dbe53130d931afb645d">ProcessControl::addSubImageHandler</a></div><div class="ttdeci">void addSubImageHandler(const std::string name, std::function&lt; void(cv::Mat img)&gt; handlerFcn, bool enabled_=false)</div><div class="ttdoc">Adiciona um widget que captura uma sub-imagem baseada na seleção do usuário. </div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8cpp_source.html#l00316">ProcessControl.cpp:316</a></div></div>
<div class="ttc" id="class_image_viewer_cv_html"><div class="ttname"><a href="class_image_viewer_cv.html">ImageViewerCv</a></div><div class="ttdoc">Esta classe implementa um widget capaz de mostrar uma imagem do tipo cv::Mat. </div><div class="ttdef"><b>Definition:</b> <a href="_image_viewer_cv_8h_source.html#l00046">ImageViewerCv.h:46</a></div></div>
<div class="ttc" id="class_process_control_html_a4a778f9624d81dff33181cbaa7b2ff33"><div class="ttname"><a href="class_process_control.html#a4a778f9624d81dff33181cbaa7b2ff33">ProcessControl::~ProcessControl</a></div><div class="ttdeci">virtual ~ProcessControl()</div><div class="ttdoc">Destrutor. </div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8cpp_source.html#l00069">ProcessControl.cpp:69</a></div></div>
<div class="ttc" id="class_process_control_html_a3d13872e46159846955f51ad4b651135"><div class="ttname"><a href="class_process_control.html#a3d13872e46159846955f51ad4b651135">ProcessControl::addLeftClickHandler</a></div><div class="ttdeci">void addLeftClickHandler(const std::string name, std::function&lt; void(QPoint)&gt; handlerFcn, bool enabled_=false)</div><div class="ttdoc">Adiciona um widget que executa a função handlerFcn quando um ponto da imagem é clicado. </div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8cpp_source.html#l00189">ProcessControl.cpp:189</a></div></div>
<div class="ttc" id="class_process_control_html_a45754e768e48f832b466b9e2fe664d31"><div class="ttname"><a href="class_process_control.html#a45754e768e48f832b466b9e2fe664d31">ProcessControl::addFileChoice</a></div><div class="ttdeci">void addFileChoice(const std::string name, std::function&lt; void(const std::string)&gt; handlerFcn)</div><div class="ttdoc">Adiciona um widget que possibilita a definição do path de um arquivo. Repassa o path do arquivo a fun...</div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8cpp_source.html#l00326">ProcessControl.cpp:326</a></div></div>
<div class="ttc" id="class_process_widget_html_a956ae288828446d19581733815bad2b9"><div class="ttname"><a href="class_process_widget.html#a956ae288828446d19581733815bad2b9">ProcessWidget::addParameterWidget</a></div><div class="ttdeci">void addParameterWidget(QWidget *wid)</div><div class="ttdoc">Adiciona um widget. </div><div class="ttdef"><b>Definition:</b> <a href="_process_widget_8cpp_source.html#l00061">ProcessWidget.cpp:61</a></div></div>
<div class="ttc" id="class_process_control_html_a9616aa7c12793e2bdf0a661f187e6c6b"><div class="ttname"><a href="class_process_control.html#a9616aa7c12793e2bdf0a661f187e6c6b">ProcessControl::getWidget</a></div><div class="ttdeci">ProcessWidget * getWidget() const </div><div class="ttdoc">Retorna o widget (parte gráfica) do processo. </div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8cpp_source.html#l00097">ProcessControl.cpp:97</a></div></div>
<div class="ttc" id="class_process_control_html_af1df9f770b44a1ec346c791f5bb72e32"><div class="ttname"><a href="class_process_control.html#af1df9f770b44a1ec346c791f5bb72e32">ProcessControl::addNumericParameter</a></div><div class="ttdeci">void addNumericParameter(const std::string name, const std::function&lt; void(double)&gt; setParam, const double min=0.0, const double max=1.0, const double initial=0.5, const int steps=100, const int style=0)</div><div class="ttdoc">Adiciona um widget para um parâmetro do tipo double. Quando o parâmetro é alterado a função setParam ...</div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8cpp_source.html#l00130">ProcessControl.cpp:130</a></div></div>
<div class="ttc" id="class_process_control_html_a1f47b0f6a1af3369f3feb1eabbe85543"><div class="ttname"><a href="class_process_control.html#a1f47b0f6a1af3369f3feb1eabbe85543">ProcessControl::setStatus</a></div><div class="ttdeci">void setStatus(const QString &amp;status)</div><div class="ttdoc">Define status de execução do processo. </div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8cpp_source.html#l00087">ProcessControl.cpp:87</a></div></div>
<div class="ttc" id="class_process_control_html_ad4cdd61d9764dff1012e170ddd629f8f"><div class="ttname"><a href="class_process_control.html#ad4cdd61d9764dff1012e170ddd629f8f">ProcessControl::getDrawColor</a></div><div class="ttdeci">QColor getDrawColor()</div><div class="ttdoc">Retorna a cor padrão para desenhar os resultados. </div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8cpp_source.html#l00102">ProcessControl.cpp:102</a></div></div>
<div class="ttc" id="class_process_widget_html_a10e1c99ae3f62bbba072bfc96d9d857c"><div class="ttname"><a href="class_process_widget.html#a10e1c99ae3f62bbba072bfc96d9d857c">ProcessWidget::closeButtonClicked</a></div><div class="ttdeci">void closeButtonClicked()</div><div class="ttdoc">Sinaliza que o botão para encerrar o processo foi clicado. </div><div class="ttdef"><b>Definition:</b> <a href="moc___process_widget_8cpp_source.html#l00163">moc_ProcessWidget.cpp:163</a></div></div>
<div class="ttc" id="class_frame_server_control_widget_html"><div class="ttname"><a href="class_frame_server_control_widget.html">FrameServerControlWidget</a></div><div class="ttdoc">Esta classe controla a execução e representação gráfica de um vídeo (FrameServer). </div><div class="ttdef"><b>Definition:</b> <a href="_frame_server_control_widget_8h_source.html#l00046">FrameServerControlWidget.h:46</a></div></div>
<div class="ttc" id="class_process_control_html_a0f269bca8139be827d8f673bed676f60"><div class="ttname"><a href="class_process_control.html#a0f269bca8139be827d8f673bed676f60">ProcessControl::resetLog</a></div><div class="ttdeci">virtual void resetLog()</div><div class="ttdoc">FunÃ§Ã£o que reseta o log. </div><div class="ttdef"><b>Definition:</b> <a href="_process_control_8cpp_source.html#l00082">ProcessControl.cpp:82</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_08f45fe6822aeb4ce2bc268e3b1361be.html">Components</a></li><li class="navelem"><a class="el" href="dir_ebeeff2ba7b71368d5d52caadcb27de3.html">VisionWidgets</a></li><li class="navelem"><b>ProcessControl.cpp</b></li>
    <li class="footer">Generated on Wed Nov 18 2015 11:12:06 for CvWorks by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
