<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>CvWorks: D:/FURG/Software/CvWorksRelease1/Core/Vision/VisionAbstractions.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="C3.jpg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">CvWorks
   &#160;<span id="projectnumber">0.4</span>
   </div>
   <div id="projectbrief">Computer Vision Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_vision_abstractions_8h_source.html','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">VisionAbstractions.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*******************************************************************************\</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">Copyright (c) 2015, FURG - Universidade Federal do Rio Grande</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">All rights reserved.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">Redistribution and use in source and binary forms, with or without</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">modification, are permitted provided that the following conditions are met:</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    * Redistributions of source code must retain the above copyright</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">      notice, this list of conditions and the following disclaimer.</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    * Redistributions in binary form must reproduce the above copyright</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">      notice, this list of conditions and the following disclaimer in the</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">      documentation and/or other materials provided with the distribution.</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    * Neither the name of the Universidade Federal do Rio Grande nor the</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">      names of its contributors may be used to endorse or promote products</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">      derived from this software without specific prior written permission.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">DISCLAIMED. IN NO EVENT SHALL UNIVERSIDADE FEDERAL DO RIO GRANDE BE LIABLE FOR ANY</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">/*******************************************************************************/</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#ifndef _VISIONABSTRACTIONS_H</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#define _VISIONABSTRACTIONS_H</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#include &quot;VisionCore.h&quot;</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="namespace_vision_core.html">   54</a></span>&#160;<span class="keyword">namespace </span><a class="code" href="namespace_vision_core.html">VisionCore</a> {</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="namespace_vision_core_1_1_abstractions.html">   56</a></span>&#160;<span class="keyword">namespace </span>Abstractions {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html">   76</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html">AbstractAutoTracker</a></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    : <span class="keyword">public</span> <a class="code" href="class_vision_core_1_1_interfaces_1_1_identified_multi_tracker.html">IdentifiedMultiTracker</a>&lt;TImg,TObj&gt;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;{</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> std::map&lt;long,TObj&gt;&amp; <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#afdfc24d8a5f14f873caf5e1d3ff55546">getLastTrack</a>();</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#af1a54610c9af7fb54d00e4be2e75609e">update</a>(<span class="keyword">const</span> <a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html">Frame&lt;TImg&gt;</a>&amp; frame);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a03660bad671c2ebfd95f6aa1ce28c052">AbstractAutoTracker</a>();</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a03660bad671c2ebfd95f6aa1ce28c052">AbstractAutoTracker</a>(<a class="code" href="class_vision_core_1_1_interfaces_1_1_detector.html">Detector&lt;TImg,TObj&gt;</a>* detector);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#afc00810bb20394cb52c201b9ac5215a2">   92</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#afc00810bb20394cb52c201b9ac5215a2">~AbstractAutoTracker</a>() {  }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a5e56e46f08984f7e62a33e0bf4bb057d">   97</a></span>&#160;    <a class="code" href="class_vision_core_1_1_interfaces_1_1_detector.html">Detector&lt;TImg,TObj&gt;</a>* <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a5e56e46f08984f7e62a33e0bf4bb057d">m_detector</a>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a6e6d6b320c1ead138321166ebb40faac">  100</a></span>&#160;    std::list&lt;std::pair&lt;long,Tracker&lt;TImg,TObj&gt;*&gt;&gt; <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a6e6d6b320c1ead138321166ebb40faac">m_trackers</a>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a0a11a9660666ac4410b2e9590d949222">  103</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a0a11a9660666ac4410b2e9590d949222">m_lastDetectionTime</a>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a3744969d6f149aca80a8bd6e89be02d1">  106</a></span>&#160;    <span class="keywordtype">double</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a3744969d6f149aca80a8bd6e89be02d1">m_detectPeriod</a>;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a8afc7c56f236400edc420b0f6b830ea1">  109</a></span>&#160;    std::map&lt;long,TObj&gt; <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a8afc7c56f236400edc420b0f6b830ea1">m_objects</a>;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordtype">long</span> m_trackerCount;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="class_vision_core_1_1_interfaces_1_1_tracker.html">Tracker&lt;TImg,TObj&gt;</a>* createTracker(<span class="keyword">const</span> TObj&amp; initialObj) = 0;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> updateTrackerList(<span class="keyword">const</span> std::vector&lt;TObj&gt;&amp; detObj);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;};</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#ac3066576292c60625eb465040200bb62">  123</a></span>&#160;<a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a03660bad671c2ebfd95f6aa1ce28c052">AbstractAutoTracker&lt;TImg,TObj&gt;::AbstractAutoTracker</a>(<a class="code" href="class_vision_core_1_1_interfaces_1_1_detector.html">Detector&lt;TImg,TObj&gt;</a>* detector)</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    : m_trackers()</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    , m_detector(detector)</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    , m_lastDetectionTime(-100000.0)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    , m_detectPeriod(2000.0) <span class="comment">// dois segundos</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    , m_objects()</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    , m_trackerCount(0)</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;{</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a03660bad671c2ebfd95f6aa1ce28c052">  135</a></span>&#160;<a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a03660bad671c2ebfd95f6aa1ce28c052">AbstractAutoTracker&lt;TImg,TObj&gt;::AbstractAutoTracker</a>()</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    : m_trackers()</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    , m_detector(NULL)</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    , m_lastDetectionTime(-100000.0)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    , m_detectPeriod(2000.0) <span class="comment">// dois segundos</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    , m_objects()</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    , m_trackerCount(0)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;{</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#afdfc24d8a5f14f873caf5e1d3ff55546">  147</a></span>&#160;<span class="keyword">const</span> std::map&lt;long,TObj&gt;&amp; <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#afdfc24d8a5f14f873caf5e1d3ff55546">AbstractAutoTracker&lt;TImg,TObj&gt;::getLastTrack</a>()</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;{</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    m_objects.clear();</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="comment">// Gather the results from all current trackers.</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">for</span> (std::pair&lt;<span class="keywordtype">long</span>,<a class="code" href="class_vision_core_1_1_interfaces_1_1_tracker.html">Tracker&lt;TImg,TObj&gt;</a>*&gt;&amp; t : m_trackers){</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordflow">if</span>(t.second!=NULL){</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="comment">// Creates a pair with trackerID and its result</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            TObj obj=t.second-&gt;getLastTrack();</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            std::pair&lt;long,TObj&gt; p(t.first,obj);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            m_objects.insert(p);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">return</span> m_objects;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#af1a54610c9af7fb54d00e4be2e75609e">  163</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#af1a54610c9af7fb54d00e4be2e75609e">AbstractAutoTracker&lt;TImg,TObj&gt;::update</a>(<span class="keyword">const</span> <a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html">Frame&lt;TImg&gt;</a>&amp; frame)</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;{</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="comment">// Update each tracker and check if it lost track,</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    std::list&lt;std::pair&lt;long,Tracker&lt;TImg,TObj&gt;*&gt;&gt; trackersToRemove;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordflow">for</span> (std::pair&lt;<span class="keywordtype">long</span>,<a class="code" href="class_vision_core_1_1_interfaces_1_1_tracker.html">Tracker&lt;TImg,TObj&gt;</a>*&gt; t : m_trackers){</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        t.second-&gt;update(frame);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="keywordflow">if</span>(t.second-&gt;lostTrack()){</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            trackersToRemove.push_back(t);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="comment">// delete trackers</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="comment">//TODO: delete trackers only if lost track for x consecutive frames.</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">for</span> (std::pair&lt;<span class="keywordtype">long</span>,<a class="code" href="class_vision_core_1_1_interfaces_1_1_tracker.html">Tracker&lt;TImg,TObj&gt;</a>*&gt; t : trackersToRemove){</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keyword">delete</span> t.second;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        m_trackers.remove(t);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    }</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="comment">// If it is time, detect new objects</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">if</span>(m_detector!=NULL &amp;&amp; ((frame.<a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html#ab0e6d692261de323466e6b083a173e5e">getTimestamp</a>()-m_lastDetectionTime) &gt;= m_detectPeriod )){</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;         std::vector&lt;TObj&gt; detObj;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;         m_detector-&gt;detect(frame.<a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html#a8531d354b20874961d98c796e3973b4d">getImg</a>(),detObj);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;         m_lastDetectionTime=frame.<a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html#ab0e6d692261de323466e6b083a173e5e">getTimestamp</a>();</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;         this-&gt;updateTrackerList(detObj);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    }</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;}</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html">AbstractAutoTracker&lt;TImg,TObj&gt;::updateTrackerList</a>(<span class="keyword">const</span> std::vector&lt;TObj&gt;&amp; detObj)</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;{</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keyword">const</span> std::map&lt;long,TObj&gt;&amp; curObj = this-&gt;getLastTrack();</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> sizeD = detObj.size(); <span class="comment">// detection size</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> sizeT = curObj.size(); <span class="comment">// tracking size</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keywordflow">if</span>(sizeD==0){</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="comment">//REMOVE TRACKERS????</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    }</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordflow">if</span>(sizeT==0){</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="comment">//new detected object</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0;i&lt;sizeD;i++){</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="comment">// New detected object. Create tracker.</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <a class="code" href="class_vision_core_1_1_interfaces_1_1_tracker.html">Tracker&lt;TImg,TObj&gt;</a>* t = this-&gt;createTracker(detObj[i]);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            m_trackerCount++;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="comment">// Creates a pair with trackerID and tracker pointer and adds it to the trackers list.</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            std::pair&lt;long,Tracker&lt;TImg,TObj&gt;*&gt; p(m_trackerCount,t);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            m_trackers.push_back(p);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        }</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="comment">// Computes similarity between detections and active tracked objects</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keywordtype">int</span> countD=0; <span class="comment">// detection count</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordtype">int</span> countT=0;<span class="comment">// tracking count</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordtype">double</span>* S = <span class="keyword">new</span> <span class="keywordtype">double</span>[sizeD*sizeT];  <span class="comment">// matrix with similarities between detections and trackings</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    std::vector&lt;long&gt; trackIDs(sizeT);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> TObj&amp; d : detObj){</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        countT=0;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> std::pair&lt;long,TObj&gt;&amp; p : curObj ){</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            <span class="keywordflow">if</span>(countD==0)</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                trackIDs[countT]=p.first;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                assert(p.first==trackIDs[countT]);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            <span class="keywordtype">double</span> similarity = VisionHelpper::similarity(d,p.second);</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            S[countD*sizeT+countT]=similarity;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            countT++;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        }</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        countD++;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    }</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="comment">// Solve assignment problem using Hungarian algorithm</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="comment">/* Por exemplo, A=[2 -1 0] significa que a detecção 0 foi casada ao rastreio 2, a detecção 1 não teve casamento</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">    e a detecção 3 foi casada ao rastreio 0*/</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    std::vector&lt;int&gt; A = <a class="code" href="class_vision_core_1_1_evaluation_1_1_detector_evaluator.html#a3533b3afc49439cbb196506cffe867f8">DetectorEvaluator&lt;TImg,TObj&gt;::computeAssignmentOptimal</a>(S,sizeD,sizeT);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="comment">// Remove currently tracked objects that where not detected????</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="comment">// Update tracked objects and add new detected objects</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0;i&lt;sizeD;i++){</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="keywordflow">if</span>(A[i]==-1){</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            <span class="comment">// New detected object. Create tracker.</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            Tracker&lt;TImg,TObj&gt;* t = this-&gt;createTracker(detObj[i]);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            m_trackerCount++;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            <span class="comment">// Creates a pair with trackerID and tracker pointer and adds it to the trackers list.</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            std::pair&lt;long,Tracker&lt;TImg,TObj&gt;*&gt; p(m_trackerCount,t);</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            m_trackers.push_back(p);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        }</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    }</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;}</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">/**********************************************************************************************/</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">/**********************************************************************************************/</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00264"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html">  264</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html">DetectorBasedTracker</a></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    : <span class="keyword">public</span> <a class="code" href="class_vision_core_1_1_interfaces_1_1_tracker.html">Tracker</a>&lt;TImg,std::vector&lt;TObj&gt;&gt;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;{</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00270"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#aa6d92b5626575a0b8c680cc65065d657">  270</a></span>&#160;    std::vector&lt;TObj&gt; <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#aa6d92b5626575a0b8c680cc65065d657">m_currentTrack</a>;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div>
<div class="line"><a name="l00273"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#a5e56e46f08984f7e62a33e0bf4bb057d">  273</a></span>&#160;    <a class="code" href="class_vision_core_1_1_interfaces_1_1_detector.html">Detector&lt;TImg,TObj&gt;</a>* <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#a5e56e46f08984f7e62a33e0bf4bb057d">m_detector</a>;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#ac8c932875d28df6cd06039f0df54b79e">DetectorBasedTracker</a>(<a class="code" href="class_vision_core_1_1_interfaces_1_1_detector.html">Detector&lt;TImg,TObj&gt;</a>* detector);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#af1a54610c9af7fb54d00e4be2e75609e">update</a>(<span class="keyword">const</span> <a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html">Frame&lt;TImg&gt;</a>&amp; frame);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div>
<div class="line"><a name="l00282"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#ad44c04b88eb540c185acb24172b47e29">  282</a></span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> std::vector&lt;TObj&gt;&amp; <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#ad44c04b88eb540c185acb24172b47e29">getLastTrack</a>() { <span class="keywordflow">return</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#aa6d92b5626575a0b8c680cc65065d657">m_currentTrack</a>; }</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div>
<div class="line"><a name="l00285"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#a7b9a9b9db5df041e366faef63e6594ef">  285</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#a7b9a9b9db5df041e366faef63e6594ef">~DetectorBasedTracker</a>() {  }</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;};</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00290"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#ac8c932875d28df6cd06039f0df54b79e">  290</a></span>&#160;<a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#ac8c932875d28df6cd06039f0df54b79e">DetectorBasedTracker&lt;TImg,TObj&gt;::DetectorBasedTracker</a>(<a class="code" href="class_vision_core_1_1_interfaces_1_1_detector.html">Detector&lt;TImg,TObj&gt;</a>* detector )</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    : m_detector(detector)</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    , m_currentTrack()</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;{</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;}</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00298"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#af1a54610c9af7fb54d00e4be2e75609e">  298</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#af1a54610c9af7fb54d00e4be2e75609e">DetectorBasedTracker&lt;TImg,TObj&gt;::update</a>(<span class="keyword">const</span> <a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html">Frame&lt;TImg&gt;</a>&amp; frame)</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;{</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="comment">// Detects object in the image</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    m_currentTrack = m_detector-&gt;detect(frame.<a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html#a8531d354b20874961d98c796e3973b4d">getImg</a>());</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;}</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">/**********************************************************************************************/</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">/**********************************************************************************************/</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00319"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html">  319</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html">DetectorBasedMultiTracker</a></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    : <span class="keyword">public</span> <a class="code" href="class_vision_core_1_1_interfaces_1_1_identified_multi_tracker.html">IdentifiedMultiTracker</a>&lt;TImg,TObj&gt;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;{</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00325"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#a0e0f9bebf9bf7ec1ff1bbac02ad9cca1">  325</a></span>&#160;    std::map&lt;long,TObj&gt; <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#a0e0f9bebf9bf7ec1ff1bbac02ad9cca1">m_currentTrack</a>;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div>
<div class="line"><a name="l00328"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#a5e56e46f08984f7e62a33e0bf4bb057d">  328</a></span>&#160;    <a class="code" href="class_vision_core_1_1_interfaces_1_1_detector.html">Detector&lt;TImg,TObj&gt;</a>* <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#a5e56e46f08984f7e62a33e0bf4bb057d">m_detector</a>;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div>
<div class="line"><a name="l00331"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#a1ac65c40264a42b7c9af36bb470fcc3a">  331</a></span>&#160;    <span class="keywordtype">long</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#a1ac65c40264a42b7c9af36bb470fcc3a">m_trackCount</a>;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#a1a1d90f1a87b6b645974c711686c14da">DetectorBasedMultiTracker</a>(<a class="code" href="class_vision_core_1_1_interfaces_1_1_detector.html">Detector&lt;TImg,TObj&gt;</a>* detector);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#af1a54610c9af7fb54d00e4be2e75609e">update</a>(<span class="keyword">const</span> <a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html">Frame&lt;TImg&gt;</a>&amp; frame);</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div>
<div class="line"><a name="l00340"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#a9c8e82bfdf34a35ef2eee54006181e5b">  340</a></span>&#160;    <span class="keyword">const</span> std::map&lt;long,TObj&gt;&amp; <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#a9c8e82bfdf34a35ef2eee54006181e5b">getLastTrack</a>() { <span class="keywordflow">return</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#a0e0f9bebf9bf7ec1ff1bbac02ad9cca1">m_currentTrack</a>; }</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div>
<div class="line"><a name="l00342"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#ac7e0977fa702f98038bbe303df458a6c">  342</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#ac7e0977fa702f98038bbe303df458a6c">lostTrack</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> this-&gt;m_lostTrack; }</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div>
<div class="line"><a name="l00345"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#ab6f751b645585a462d8d2faa6edfbd44">  345</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#ab6f751b645585a462d8d2faa6edfbd44">~DetectorBasedMultiTracker</a>() {  }</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;};</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00350"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#a1a1d90f1a87b6b645974c711686c14da">  350</a></span>&#160;<a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#a1a1d90f1a87b6b645974c711686c14da">DetectorBasedMultiTracker&lt;TImg,TObj&gt;::DetectorBasedMultiTracker</a>(<a class="code" href="class_vision_core_1_1_interfaces_1_1_detector.html">Detector&lt;TImg,TObj&gt;</a>* detector )</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    : m_detector(detector)</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    , m_trackCount(0)</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    , m_currentTrack()</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;{</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;}</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00359"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#af1a54610c9af7fb54d00e4be2e75609e">  359</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#af1a54610c9af7fb54d00e4be2e75609e">DetectorBasedMultiTracker&lt;TImg,TObj&gt;::update</a>(<span class="keyword">const</span> <a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html">Frame&lt;TImg&gt;</a>&amp; frame)</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;{</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="comment">// Detects object in the image</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    std::vector&lt;TObj&gt; det = m_detector-&gt;detect(frame.<a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html#a8531d354b20874961d98c796e3973b4d">getImg</a>());</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> sizeD = det.size(); <span class="comment">// detection size</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> sizeT = m_currentTrack.size(); <span class="comment">// tracking size</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keywordflow">if</span>(sizeD==0){</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        m_currentTrack.clear();</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    }</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keywordflow">if</span>(sizeT==0){</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        <span class="comment">//new detected object</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0;i&lt;sizeD;i++){</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            m_trackCount++;</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;            m_currentTrack.insert(std::make_pair(m_trackCount,det.at(i)));</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        }</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    }</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    </div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="comment">// Computes similarity with all active tracked objects</span></div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keywordtype">int</span> countD=0; <span class="comment">// detection count</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="keywordtype">int</span> countT=0;<span class="comment">// tracking count</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <span class="keywordtype">double</span>* S = <span class="keyword">new</span> <span class="keywordtype">double</span>[sizeD*sizeT];  <span class="comment">// matrix with similarities between detections and trackings</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    std::vector&lt;long&gt; trackIDs(sizeT);</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="keywordflow">for</span>(<span class="keyword">const</span> TObj&amp; d : det){</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        countT=0;</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        <span class="keywordflow">for</span>(<span class="keyword">const</span> std::pair&lt;long,TObj&gt;&amp; p : m_currentTrack ){</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <span class="keywordflow">if</span>(countD==0)</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                trackIDs[countT]=p.first;</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                assert(p.first==trackIDs[countT]);</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <span class="keywordtype">double</span> similarity = VisionHelpper::similarity(d,p.second);</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            S[countD*sizeT+countT]=similarity;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            countT++;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        }</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        countD++;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    }</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="comment">// Solve assignment problem using Hungarian algorithm</span></div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <span class="comment">/* Por exemplo, A=[2 -1 0] significa que a detecção 0 foi casada ao rastreio 2, a detecção 1 não teve casamento</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment">    e a detecção 3 foi casada ao rastreio 0*/</span></div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    std::vector&lt;int&gt; A = <a class="code" href="class_vision_core_1_1_evaluation_1_1_detector_evaluator.html#a3533b3afc49439cbb196506cffe867f8">DetectorEvaluator&lt;TImg,TObj&gt;::computeAssignmentOptimal</a>(S,sizeD,sizeT);</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <span class="comment">// Remove currently tracked objects that where not detected.</span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="comment">//TODO: delete trackers only if lost track for x consecutive frames.</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0;i&lt;sizeT;i++){</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        <span class="keywordflow">if</span>(std::find(A.begin(),A.end(),i) == A.end()){</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            <span class="comment">//tracked object i not detected.</span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            m_currentTrack.erase(trackIDs[i]);</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        }</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    }</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <span class="comment">// Update tracked objects and add new detected objects</span></div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0;i&lt;sizeD;i++){</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        <span class="keywordflow">if</span>(A[i]==-1){</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;            <span class="comment">//new detected object</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            m_trackCount++;</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;            m_currentTrack.insert(std::make_pair(m_trackCount,det.at(i)));</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        }</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        <span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            <span class="comment">//update tracked object</span></div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;            <span class="keywordtype">long</span> trackID=trackIDs[A[i]];</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;            m_currentTrack.at(trackID)=det.at(i);</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        }</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    }</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <span class="keyword">delete</span>[] S;</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;}</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="comment">/**********************************************************************************************/</span></div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="comment">/**********************************************************************************************/</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00436"></a><span class="lineno"><a class="line" href="struct_vision_core_1_1_abstractions_1_1_detection_data.html">  436</a></span>&#160;<span class="keyword">struct </span><a class="code" href="struct_vision_core_1_1_abstractions_1_1_detection_data.html">DetectionData</a>{</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div>
<div class="line"><a name="l00439"></a><span class="lineno"><a class="line" href="struct_vision_core_1_1_abstractions_1_1_detection_data.html#a73f468ab2fffab197d80d2e02abe86ac">  439</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="struct_vision_core_1_1_abstractions_1_1_detection_data.html#a73f468ab2fffab197d80d2e02abe86ac">detNumber</a>;</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div>
<div class="line"><a name="l00442"></a><span class="lineno"><a class="line" href="struct_vision_core_1_1_abstractions_1_1_detection_data.html#ab01e2839a0bcd471d80ef46063083993">  442</a></span>&#160;    std::vector&lt;TObj&gt; <a class="code" href="struct_vision_core_1_1_abstractions_1_1_detection_data.html#ab01e2839a0bcd471d80ef46063083993">result</a>;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div>
<div class="line"><a name="l00445"></a><span class="lineno"><a class="line" href="struct_vision_core_1_1_abstractions_1_1_detection_data.html#af19c07021635b43df099e62283c93341">  445</a></span>&#160;    std::chrono::high_resolution_clock::time_point <a class="code" href="struct_vision_core_1_1_abstractions_1_1_detection_data.html#af19c07021635b43df099e62283c93341">time</a>;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div>
<div class="line"><a name="l00448"></a><span class="lineno"><a class="line" href="struct_vision_core_1_1_abstractions_1_1_detection_data.html#a9c26a1638f116d3c0fba3f9342d67af1">  448</a></span>&#160;    std::chrono::milliseconds <a class="code" href="struct_vision_core_1_1_abstractions_1_1_detection_data.html#a9c26a1638f116d3c0fba3f9342d67af1">duration</a>;</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;};</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00463"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html">  463</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html">DetectorLogger</a></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    : <span class="keyword">public</span> <a class="code" href="class_vision_core_1_1_interfaces_1_1_detector.html">Detector</a>&lt;TImg,TObj&gt;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;{</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00469"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a771726ddd27137968dca04476b723beb">  469</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="class_vision_core_1_1_interfaces_1_1_detector.html">Detector&lt;TImg,TObj&gt;</a>* <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a771726ddd27137968dca04476b723beb">m_detector</a>;</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div>
<div class="line"><a name="l00472"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a42fd53b3eb82054fad2ea40334e6f4f3">  472</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a42fd53b3eb82054fad2ea40334e6f4f3">m_logImages</a>;</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div>
<div class="line"><a name="l00475"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#aa20a7a964a4c6f898882498bde5c02cf">  475</a></span>&#160;    <span class="keyword">mutable</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#aa20a7a964a4c6f898882498bde5c02cf">m_detCount</a>;</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div>
<div class="line"><a name="l00478"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a3fee8c1000dd122a52b2a95f82b0726c">  478</a></span>&#160;    <span class="keyword">mutable</span> std::vector&lt;DetectionData&lt;TObj&gt;&gt; <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a3fee8c1000dd122a52b2a95f82b0726c">m_data</a>;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div>
<div class="line"><a name="l00481"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#aebfc182cead05fb2cb6d30ffd33eabd3">  481</a></span>&#160;    <span class="keyword">mutable</span> std::map&lt;unsigned long,TImg&gt; <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#aebfc182cead05fb2cb6d30ffd33eabd3">m_imgs</a>;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;</div>
<div class="line"><a name="l00484"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a0b3be8372825e4a3e7fe9d04aafd923e">  484</a></span>&#160;    <span class="keyword">mutable</span> std::chrono::milliseconds <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a0b3be8372825e4a3e7fe9d04aafd923e">m_cumDuration</a>;</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div>
<div class="line"><a name="l00487"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a864bbc1c90b2c0599463d65224c10e01">  487</a></span>&#160;    <span class="keyword">mutable</span> std::mutex <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a864bbc1c90b2c0599463d65224c10e01">m_dataMutex</a>;</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    </div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#af5876c32c6e7321c66a0ab299d68a391">DetectorLogger</a>(<a class="code" href="class_vision_core_1_1_interfaces_1_1_detector.html">Detector&lt;TImg,TObj&gt;</a>* detector,<span class="keyword">const</span> <span class="keywordtype">bool</span> logImages = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a7a25babdd801ae1a4d4365a70af3032d">writeToFileAsCsv</a>(<span class="keyword">const</span> std::string fileName);</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;</div>
<div class="line"><a name="l00500"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a7197cfe2509322e00d3b8e1d2deda792">  500</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a7197cfe2509322e00d3b8e1d2deda792">~DetectorLogger</a>() { }</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div>
<div class="line"><a name="l00503"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a19b6ea758a0d8c45cfee3859eb483b67">  503</a></span>&#160;    std::chrono::milliseconds <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a19b6ea758a0d8c45cfee3859eb483b67">averageDuration</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> (m_detCount==0) ? std::chrono::milliseconds(0) : m_cumDuration/<a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#aa20a7a964a4c6f898882498bde5c02cf">m_detCount</a>;}</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div>
<div class="line"><a name="l00506"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#ab52843f46819e59162d432e25766d429">  506</a></span>&#160;    <span class="keyword">const</span> std::vector&lt;DetectionData&lt;TObj&gt;&gt;&amp; <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#ab52843f46819e59162d432e25766d429">getData</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a3fee8c1000dd122a52b2a95f82b0726c">m_data</a>; }</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a0f269bca8139be827d8f673bed676f60">resetLog</a>();</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div>
<div class="line"><a name="l00515"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a50968bdeed09c7b26cb46c839fe55a52">  515</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a50968bdeed09c7b26cb46c839fe55a52">lockData</a>()<span class="keyword"> const </span>{ m_dataMutex.lock();}</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div>
<div class="line"><a name="l00518"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a59ce319514ddd7916f8962e25cc85869">  518</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a59ce319514ddd7916f8962e25cc85869">unlockData</a>()<span class="keyword"> const </span>{m_dataMutex.unlock();}</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    std::vector&lt;TObj&gt; <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a1f2edd31854cbaeed7db844d4e5bcbfc">detect</a>(<span class="keyword">const</span> TImg&amp; img) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;};</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00525"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#af5876c32c6e7321c66a0ab299d68a391">  525</a></span>&#160;<a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#af5876c32c6e7321c66a0ab299d68a391">DetectorLogger&lt;TImg,TObj&gt;::DetectorLogger</a>(<a class="code" href="class_vision_core_1_1_interfaces_1_1_detector.html">Detector&lt;TImg,TObj&gt;</a>* detector,<span class="keyword">const</span> <span class="keywordtype">bool</span> logImages)</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    : m_detector(detector)</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    , m_detCount(0)</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    , m_logImages(logImages)</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    , m_data ()</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    , m_cumDuration(0)</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;{</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;}</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00537"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a1f2edd31854cbaeed7db844d4e5bcbfc">  537</a></span>&#160;std::vector&lt;TObj&gt; <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a1f2edd31854cbaeed7db844d4e5bcbfc">DetectorLogger&lt;TImg,TObj&gt;::detect</a>(<span class="keyword">const</span> TImg&amp; img)<span class="keyword"> const</span></div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    <span class="keyword">using namespace </span>std::chrono;</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    <span class="comment">//Detect objects</span></div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    high_resolution_clock::time_point tic =high_resolution_clock::now();</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    std::vector&lt;TObj&gt; result = m_detector-&gt;detect(img);</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    high_resolution_clock::time_point toc =high_resolution_clock::now();</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <a class="code" href="struct_vision_core_1_1_abstractions_1_1_detection_data.html">DetectionData&lt;TObj&gt;</a> data;</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="comment">//Compute and store times</span></div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    milliseconds waitTime = duration_cast&lt;milliseconds&gt;(toc-tic);</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    data.<a class="code" href="struct_vision_core_1_1_abstractions_1_1_detection_data.html#af19c07021635b43df099e62283c93341">time</a> = tic;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    data.<a class="code" href="struct_vision_core_1_1_abstractions_1_1_detection_data.html#a9c26a1638f116d3c0fba3f9342d67af1">duration</a> = waitTime;</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    m_cumDuration+=waitTime;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    </div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    <span class="comment">//Store results</span></div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    data.<a class="code" href="struct_vision_core_1_1_abstractions_1_1_detection_data.html#ab01e2839a0bcd471d80ef46063083993">result</a> = result;</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    lockData(); <span class="comment">// multi-thread safety</span></div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    m_detCount++;</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    data.<a class="code" href="struct_vision_core_1_1_abstractions_1_1_detection_data.html#a73f468ab2fffab197d80d2e02abe86ac">detNumber</a>=m_detCount;</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    m_data.push_back(data);</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    <span class="keywordflow">if</span>(m_logImages){</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;        std::pair&lt;unsigned long,TImg&gt; pimg(m_detCount,img);</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        m_imgs.insert(pimg);</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    }</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    </div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    unlockData();</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;}</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00570"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a7a25babdd801ae1a4d4365a70af3032d">  570</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a7a25babdd801ae1a4d4365a70af3032d">DetectorLogger&lt;TImg,TObj&gt;::writeToFileAsCsv</a>(<span class="keyword">const</span> std::string fileName)</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;{</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    <span class="comment">// Create file</span></div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    std::ofstream file;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    file.open (fileName);</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    <span class="keywordflow">if</span>(!file.is_open())</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    <span class="comment">// Write header</span></div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    file &lt;&lt; <span class="stringliteral">&quot;Number,Duration(ms),Size,Result&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    <span class="comment">// Write all log data</span></div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    this-&gt;lockData();</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    std::string comma = <span class="stringliteral">&quot;,&quot;</span>;</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    <span class="keywordflow">for</span>(<a class="code" href="struct_vision_core_1_1_abstractions_1_1_detection_data.html">DetectionData&lt;TObj&gt;</a>&amp; det : m_data){</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        file &lt;&lt; det.detNumber &lt;&lt; comma;</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        file &lt;&lt; det.duration.count() &lt;&lt; comma;</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        file &lt;&lt; det.result.size() &lt;&lt; comma;</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        <span class="keywordflow">for</span>(TObj obj : det.result){</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;            file &lt;&lt; VisionHelpper::getAsCsvString(obj) &lt;&lt; comma;</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        }</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;        file &lt;&lt; std::endl;</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    }</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    this-&gt;unlockData();</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    file.close();</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;}</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00600"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a0f269bca8139be827d8f673bed676f60">  600</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a0f269bca8139be827d8f673bed676f60">DetectorLogger&lt;TImg,TObj&gt;::resetLog</a>()</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;{</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    this-&gt;lockData();</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    m_data.clear();</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    this-&gt;unlockData();</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;}</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="comment">/**********************************************************************************************/</span></div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="comment">/**********************************************************************************************/</span></div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00614"></a><span class="lineno"><a class="line" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html">  614</a></span>&#160;<span class="keyword">struct </span><a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html">TrackingData</a>{</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;</div>
<div class="line"><a name="l00617"></a><span class="lineno"><a class="line" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#a3e29783a97919194b94c3f141ea12515">  617</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#a3e29783a97919194b94c3f141ea12515">trackNumber</a>;</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;</div>
<div class="line"><a name="l00620"></a><span class="lineno"><a class="line" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#a9bdd7269d8470d6cfd2ca094cf86e9ee">  620</a></span>&#160;    TObj <a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#a9bdd7269d8470d6cfd2ca094cf86e9ee">result</a>;</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div>
<div class="line"><a name="l00623"></a><span class="lineno"><a class="line" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#ae48c78f8d08da8f1f99ba3367b241e28">  623</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#ae48c78f8d08da8f1f99ba3367b241e28">lostTrack</a>;</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;</div>
<div class="line"><a name="l00626"></a><span class="lineno"><a class="line" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#af19c07021635b43df099e62283c93341">  626</a></span>&#160;    std::chrono::high_resolution_clock::time_point <a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#af19c07021635b43df099e62283c93341">time</a>;</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;</div>
<div class="line"><a name="l00629"></a><span class="lineno"><a class="line" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#ac112fbe77985f84f5c2079cb836225be">  629</a></span>&#160;    std::chrono::milliseconds <a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#ac112fbe77985f84f5c2079cb836225be">updateDuration</a>;</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;</div>
<div class="line"><a name="l00632"></a><span class="lineno"><a class="line" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#ae22cad4c6d0a00d3e063b94222214f03">  632</a></span>&#160;    std::chrono::milliseconds <a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#ae22cad4c6d0a00d3e063b94222214f03">gltDuration</a>;</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;</div>
<div class="line"><a name="l00635"></a><span class="lineno"><a class="line" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#a9c26a1638f116d3c0fba3f9342d67af1">  635</a></span>&#160;    std::chrono::milliseconds <a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#a9c26a1638f116d3c0fba3f9342d67af1">duration</a>;</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;};</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00651"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html">  651</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html">TrackerLogger</a></div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    : <span class="keyword">public</span> <a class="code" href="class_vision_core_1_1_interfaces_1_1_tracker.html">Tracker</a>&lt;TImg,TObj&gt;</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;{</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;    <a class="code" href="class_vision_core_1_1_interfaces_1_1_tracker.html">Tracker&lt;TImg,TObj&gt;</a>* m_tracker;</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;    <span class="keywordtype">bool</span> m_logFrames;</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> m_trackCount;</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    std::vector&lt;TrackingData&lt;TObj&gt;&gt; m_data;</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;    std::map&lt;unsigned long,Frame&lt;TImg&gt;&gt; m_frames;</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    std::chrono::milliseconds m_cumDuration;</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    <span class="keyword">mutable</span> std::mutex m_dataMutex;</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    </div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a00d98127ef543d4faa377076168e9575">TrackerLogger</a>(<a class="code" href="class_vision_core_1_1_interfaces_1_1_tracker.html">Tracker&lt;TImg,TObj&gt;</a>* tracker,<span class="keyword">const</span> <span class="keywordtype">bool</span> logImages = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div>
<div class="line"><a name="l00682"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a515e5ab772202771a2f0d3854dd0669a">  682</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a515e5ab772202771a2f0d3854dd0669a">~TrackerLogger</a>() { }</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    std::chrono::milliseconds <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a19b6ea758a0d8c45cfee3859eb483b67">averageDuration</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    <span class="keyword">const</span> std::vector&lt;TrackingData&lt;TObj&gt;&gt;&amp; <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#aa7880b2f2cfb2d3bdd15566a428becff">getData</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div>
<div class="line"><a name="l00694"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a50968bdeed09c7b26cb46c839fe55a52">  694</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a50968bdeed09c7b26cb46c839fe55a52">lockData</a>()<span class="keyword"> const </span>{ m_dataMutex.lock();}</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;</div>
<div class="line"><a name="l00697"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a59ce319514ddd7916f8962e25cc85869">  697</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a59ce319514ddd7916f8962e25cc85869">unlockData</a>()<span class="keyword"> const </span>{m_dataMutex.unlock();}</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a7a25babdd801ae1a4d4365a70af3032d">writeToFileAsCsv</a>(<span class="keyword">const</span> std::string fileName);</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a0f269bca8139be827d8f673bed676f60">resetLog</a>();</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#af1a54610c9af7fb54d00e4be2e75609e">update</a>(<span class="keyword">const</span> <a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html">Frame&lt;TImg&gt;</a>&amp; frame);</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;    <span class="keyword">const</span> TObj&amp; <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a60f002795ee2555f25dc4f7a9a0845ce">getLastTrack</a>();</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#ac7e0977fa702f98038bbe303df458a6c">lostTrack</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;};</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00713"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a00d98127ef543d4faa377076168e9575">  713</a></span>&#160;<a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a00d98127ef543d4faa377076168e9575">TrackerLogger&lt;TImg,TObj&gt;::TrackerLogger</a>(<a class="code" href="class_vision_core_1_1_interfaces_1_1_tracker.html">Tracker&lt;TImg,TObj&gt;</a>* tracker,<span class="keyword">const</span> <span class="keywordtype">bool</span> logFrames)</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    : m_tracker(tracker)</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;    , m_trackCount(0)</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;    , m_logFrames(logFrames)</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;    , m_data()</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    , m_cumDuration(0)</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;{</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;}</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00724"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a7a25babdd801ae1a4d4365a70af3032d">  724</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a7a25babdd801ae1a4d4365a70af3032d">TrackerLogger&lt;TImg,TObj&gt;::writeToFileAsCsv</a>(<span class="keyword">const</span> std::string fileName)</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;{</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    <span class="comment">// Create file</span></div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    std::ofstream file;</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    file.open (fileName);</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;    <span class="keywordflow">if</span>(!file.is_open())</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;    <span class="comment">// Write header</span></div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;    file &lt;&lt; <span class="stringliteral">&quot;Number,Duration(ms),Update_duration(ms),LostTrack,Result&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;    <span class="comment">// Write all log data</span></div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;    this-&gt;lockData();</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;    std::string comma = <span class="stringliteral">&quot;,&quot;</span>;</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;    <span class="keywordflow">for</span>(<a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html">TrackingData&lt;TObj&gt;</a>&amp; track : m_data){</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;        file &lt;&lt; track.trackNumber &lt;&lt; comma;</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;        file &lt;&lt; track.duration.count() &lt;&lt; comma;</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;        file &lt;&lt; track.updateDuration.count() &lt;&lt; comma;</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;        <span class="keywordflow">if</span>(track.lostTrack)</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;            file &lt;&lt; <span class="stringliteral">&quot;1&quot;</span> &lt;&lt; comma;</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;            file &lt;&lt; <span class="stringliteral">&quot;0&quot;</span> &lt;&lt; comma;</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;        file &lt;&lt; VisionHelpper::getAsCsvString(track.result) ;</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;        file &lt;&lt; std::endl;</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;    }</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;    this-&gt;unlockData();</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;    file.close();</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;}</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;</div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00755"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#af1a54610c9af7fb54d00e4be2e75609e">  755</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#af1a54610c9af7fb54d00e4be2e75609e">TrackerLogger&lt;TImg,TObj&gt;::update</a>(<span class="keyword">const</span> <a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html">Frame&lt;TImg&gt;</a>&amp; frame)</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;{</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;    <span class="keyword">using namespace </span>std::chrono;</div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    <span class="comment">//Update tracker</span></div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;    high_resolution_clock::time_point tic =high_resolution_clock::now();</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    m_tracker-&gt;update(frame);</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    high_resolution_clock::time_point toc =high_resolution_clock::now();</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;    <a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html">TrackingData&lt;TObj&gt;</a> data;</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;    <span class="comment">//Compute and store times</span></div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    milliseconds waitTime = duration_cast&lt;milliseconds&gt;(toc-tic);</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;    data.<a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#af19c07021635b43df099e62283c93341">time</a> = tic;</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;    data.<a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#ac112fbe77985f84f5c2079cb836225be">updateDuration</a> = waitTime;</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    <span class="comment">//Get result</span></div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;    tic = high_resolution_clock::now();</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    TObj result = m_tracker-&gt;getLastTrack();</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;    toc = high_resolution_clock::now();</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;    waitTime = duration_cast&lt;milliseconds&gt;(toc-tic);</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;    data.<a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#ae22cad4c6d0a00d3e063b94222214f03">gltDuration</a> = waitTime;</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;    data.<a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#a9c26a1638f116d3c0fba3f9342d67af1">duration</a> = data.<a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#ac112fbe77985f84f5c2079cb836225be">updateDuration</a>+data.<a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#ae22cad4c6d0a00d3e063b94222214f03">gltDuration</a>;</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;    m_cumDuration+=data.<a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#a9c26a1638f116d3c0fba3f9342d67af1">duration</a>;</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;    </div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    <span class="comment">//Store results</span></div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;    data.<a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#a9bdd7269d8470d6cfd2ca094cf86e9ee">result</a> = result;</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;    data.<a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#ae48c78f8d08da8f1f99ba3367b241e28">lostTrack</a> = m_tracker-&gt;lostTrack();</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;    lockData();</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    m_trackCount++;</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;    data.<a class="code" href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#a3e29783a97919194b94c3f141ea12515">trackNumber</a>=m_trackCount;</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;    m_data.push_back(data);</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;    <span class="keywordflow">if</span>(m_logFrames){</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;        std::pair&lt;unsigned long,Frame&lt;TImg&gt;&gt; pframe(m_trackCount,frame);</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;        m_frames.insert(pframe);</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;    }</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;    unlockData();</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;}</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00795"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a19b6ea758a0d8c45cfee3859eb483b67">  795</a></span>&#160;std::chrono::milliseconds <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a19b6ea758a0d8c45cfee3859eb483b67">TrackerLogger&lt;TImg,TObj&gt;::averageDuration</a>()<span class="keyword"> const</span>{</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;    <span class="keywordflow">return</span> (m_trackCount==0) ? std::chrono::milliseconds(0) : m_cumDuration/m_trackCount;</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;}</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;</div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00800"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#aa7880b2f2cfb2d3bdd15566a428becff">  800</a></span>&#160;<span class="keyword">const</span> std::vector&lt;TrackingData&lt;TObj&gt;&gt;&amp; <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#aa7880b2f2cfb2d3bdd15566a428becff">TrackerLogger&lt;TImg,TObj&gt;::getData</a>()<span class="keyword"> const</span>{</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    <span class="keywordflow">return</span> m_data;</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;}</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00805"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a0f269bca8139be827d8f673bed676f60">  805</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a0f269bca8139be827d8f673bed676f60">TrackerLogger&lt;TImg,TObj&gt;::resetLog</a>()</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;{</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;    this-&gt;lockData();</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    m_data.clear();</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;    m_cumDuration=std::chrono::milliseconds(0);</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;    m_trackCount=0;</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;    this-&gt;unlockData();</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;}</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00815"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a60f002795ee2555f25dc4f7a9a0845ce">  815</a></span>&#160;<span class="keyword">const</span> TObj&amp; <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a60f002795ee2555f25dc4f7a9a0845ce">TrackerLogger&lt;TImg,TObj&gt;::getLastTrack</a>(){</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;    <span class="keywordflow">return</span> m_data.back().result;</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;}</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00820"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#ac7e0977fa702f98038bbe303df458a6c">  820</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#ac7e0977fa702f98038bbe303df458a6c">TrackerLogger&lt;TImg,TObj&gt;::lostTrack</a>()<span class="keyword"> const</span>{</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;    <span class="keywordflow">return</span> m_tracker-&gt;lostTrack();</div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;}</div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;<span class="comment">/**********************************************************************************************/</span></div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;<span class="comment">/**********************************************************************************************/</span></div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;</div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;</div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00847"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html">  847</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html">AbstractParticleFilteringTracker</a></div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;    : <span class="keyword">public</span> <a class="code" href="class_vision_core_1_1_interfaces_1_1_tracker.html">Tracker</a>&lt;TImg,TObj&gt;</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;{</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;    std::vector&lt;TObj&gt; m_particleSet1;</div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;    std::vector&lt;double&gt; m_weights;</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;    std::vector&lt;TObj&gt; m_particleSet2;</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;    std::vector&lt;TObj&gt;* m_oldParticleSetPtr;</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;    std::vector&lt;TObj&gt;* m_newParticleSetPtr;</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;    TObj m_currentTrack;</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;</div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;    std::mt19937 m_randEngine;</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;    <span class="keyword">virtual</span> TObj averageObj(<span class="keyword">const</span> std::vector&lt;TObj&gt;&amp; objects,</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;                            <span class="keyword">const</span> std::vector&lt;double&gt;&amp; weights) = 0;</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">double</span> evalObj(<span class="keyword">const</span> TImg&amp; img, <span class="keyword">const</span> TObj&amp; obj) = 0;</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> sampleMultinomial(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>* <span class="keyword">const</span> sample,</div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;                                   <span class="keyword">const</span> <span class="keywordtype">double</span>* <span class="keyword">const</span> prob,</div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;                                   <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> sampDim,</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;                                   <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numOfTrials);</div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> sampleTransition(<span class="keyword">const</span> TObj&amp; oldObj, TObj&amp; newObj) = 0;</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;</div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;    <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#a9ef9b851a62552f9937d57068bb8da8f">AbstractParticleFilteringTracker</a>(<span class="keyword">const</span> TObj&amp; initialObj = TObj(),</div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;                                     <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numParticles = 100);</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;</div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#ac11a1371779c4e4b8b08c7044a92a3d4">~AbstractParticleFilteringTracker</a>();</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> TObj&amp; <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#a60f002795ee2555f25dc4f7a9a0845ce">getLastTrack</a>();</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#af1a54610c9af7fb54d00e4be2e75609e">update</a>(<span class="keyword">const</span> <a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html">Frame&lt;TImg&gt;</a>&amp; frame);</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;</div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#a24876b4e0404782477453810f53fde0b">reset</a>(<span class="keyword">const</span> TObj&amp; initialObj);</div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;};</div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;</div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;<span class="comment">Constructor method.</span></div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00892"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#a9ef9b851a62552f9937d57068bb8da8f">  892</a></span>&#160;<a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#a9ef9b851a62552f9937d57068bb8da8f">AbstractParticleFilteringTracker&lt;TImg,TObj&gt;::AbstractParticleFilteringTracker</a>(<span class="keyword">const</span> TObj&amp; initialObj,</div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;                                                                              <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numParticles) </div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;    : m_particleSet1(<a class="code" href="namespacestd.html">std</a>::vector&lt;TObj&gt;(numParticles,initialObj))</div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;    , m_weights(<a class="code" href="namespacestd.html">std</a>::vector&lt;double&gt;(numParticles,1.0/numParticles))</div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;    , m_particleSet2(<a class="code" href="namespacestd.html">std</a>::vector&lt;TObj&gt;(numParticles,initialObj))</div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;    , m_oldParticleSetPtr()</div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;    , m_newParticleSetPtr()</div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;    , m_currentTrack()</div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;    , m_randEngine((unsigned int)time(NULL))</div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;{</div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;    m_oldParticleSetPtr=&amp;m_particleSet1;</div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;    m_newParticleSetPtr=&amp;m_particleSet2;</div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;}</div>
<div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;</div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;</div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;</div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;<span class="comment">Destructor method.</span></div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00912"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#ac11a1371779c4e4b8b08c7044a92a3d4">  912</a></span>&#160;<a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#ac11a1371779c4e4b8b08c7044a92a3d4">AbstractParticleFilteringTracker&lt;TImg,TObj&gt;::~AbstractParticleFilteringTracker</a>()</div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;{</div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;}</div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;</div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;</div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00918"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#a60f002795ee2555f25dc4f7a9a0845ce">  918</a></span>&#160;<span class="keyword">const</span> TObj&amp; <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#a60f002795ee2555f25dc4f7a9a0845ce">AbstractParticleFilteringTracker&lt;TImg,TObj&gt;::getLastTrack</a>()</div>
<div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;{</div>
<div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;    m_currentTrack=averageObj(*(this-&gt;m_newParticleSetPtr),m_weights);</div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;    <span class="keywordflow">return</span> m_currentTrack;</div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;}</div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;</div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;</div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html">AbstractParticleFilteringTracker&lt;TImg,TObj&gt;::sampleMultinomial</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>* <span class="keyword">const</span> sample,</div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;                                                                    <span class="keyword">const</span> <span class="keywordtype">double</span>* <span class="keyword">const</span> prob,</div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;                                                                    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> sampDim,</div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;                                                                    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numOfTrials)</div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;{</div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;    <span class="comment">//for(unsigned int i=0;i&lt;sampDim;i++)</span></div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;    <span class="comment">//  sample[i]=1;</span></div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacestd.html">std</a>;</div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;</div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> nb = sampDim;</div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">double</span>* <span class="keyword">const</span> p = prob;</div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> t = numOfTrials; </div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>* <span class="keyword">const</span> s = sample;</div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;    </div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> remainingTrials=t;</div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;    </div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;    <span class="comment">//mt19937 eng = mt19937(time(NULL)); //random number generator</span></div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;    <span class="comment">//std::tr1::binomial_distribution&lt;unsigned int, double&gt; binomial();//binomial distribution</span></div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;    </div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;    <span class="comment">//sample each bin from binomial</span></div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;(nb-1);++i){</div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;        <span class="keywordflow">if</span>(remainingTrials&gt;0){</div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;            binomial_distribution&lt;unsigned int&gt; binomial(remainingTrials,p[i]);</div>
<div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> ts=binomial(this-&gt;m_randEngine);</div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;            s[i]=ts;</div>
<div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;            remainingTrials-=ts;</div>
<div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;        }</div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;        <span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;            s[i]=0;</div>
<div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;        }</div>
<div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;    }</div>
<div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;    s[nb-1]=remainingTrials;  <span class="comment">//set the last bin</span></div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;    assert(remainingTrials&gt;=0);</div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;</div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;}</div>
<div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;</div>
<div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;<span class="comment">Given an image (i.e. video frame), update the tracked objects.</span></div>
<div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l00966"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#af1a54610c9af7fb54d00e4be2e75609e">  966</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#af1a54610c9af7fb54d00e4be2e75609e">AbstractParticleFilteringTracker&lt;TImg,TObj&gt;::update</a>(<span class="keyword">const</span> <a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html">Frame&lt;TImg&gt;</a>&amp; frame)</div>
<div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;{</div>
<div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;</div>
<div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;    <span class="keyword">const</span> TImg&amp; img = frame.<a class="code" href="struct_vision_core_1_1_data_structures_1_1_frame.html#a8531d354b20874961d98c796e3973b4d">getImg</a>();</div>
<div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numOfParticles = m_newParticleSetPtr-&gt;size();</div>
<div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;</div>
<div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;    <span class="comment">// particulas atuais se tornam antigas</span></div>
<div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;    std::swap(m_oldParticleSetPtr,m_newParticleSetPtr);</div>
<div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;    </div>
<div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;    <span class="comment">//SELECT PARTICLES RAMDOMLY ACCORDING TO WEIGHTS</span></div>
<div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> *sel = <span class="keyword">new</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>[numOfParticles];  <span class="comment">//conterá a quantidade de vezes que uma particula foi selecionada</span></div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;    <span class="comment">//this-&gt;sampleMultinomial(sel,&amp;m_weights[0],numOfParticles,numOfParticles);</span></div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;</div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;    <span class="comment">//SELECT PARTICLES PROPORTIONAL TO WEIGHTS</span></div>
<div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;    <span class="keywordtype">double</span> cumSteps=0.0;</div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">double</span> step=1.0/numOfParticles;</div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> currentPart=0;</div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;    sel[currentPart]=0;</div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;    <span class="keywordtype">double</span> cumWeights=m_weights[currentPart];</div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;numOfParticles;i++){ <span class="comment">//for each new particle</span></div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;        cumSteps+=step;</div>
<div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;        <span class="keywordflow">while</span>(cumWeights&lt;cumSteps &amp;&amp; currentPart&lt;(numOfParticles-1)){</div>
<div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;            currentPart+=1;</div>
<div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;            sel[currentPart]=0;</div>
<div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;            cumWeights+=m_weights[currentPart];</div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;        }</div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;        sel[currentPart]+=1;</div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;    }</div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;</div>
<div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;    <span class="comment">//UPDATE PARTICLES BY SAMPLING TRANSITION</span></div>
<div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;    <span class="keywordtype">double</span> weightSum=0.0;</div>
<div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;    <span class="keywordtype">double</span> maxWeight = std::numeric_limits&lt;double&gt;::min();</div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;    <span class="keywordtype">double</span> minWeight = std::numeric_limits&lt;double&gt;::max();</div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> partCount=0;</div>
<div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;    <span class="comment">//#pragma omp parallel for </span></div>
<div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;    <span class="comment">//shared(m_oldParticleSetPtr,m_newParticleSetPtr,m_weights,weightSum,partCount)</span></div>
<div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;numOfParticles;i++){</div>
<div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;        <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> j=0;j&lt;sel[i];j++){</div>
<div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;            <span class="comment">//sample particle i a total of sel[i] times</span></div>
<div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;            this-&gt;sampleTransition(m_oldParticleSetPtr-&gt;at(i),m_newParticleSetPtr-&gt;at(partCount));</div>
<div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;            <span class="comment">//update weiths for new sample</span></div>
<div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;            m_weights[partCount]=this-&gt;evalObj(img,m_newParticleSetPtr-&gt;at(partCount));</div>
<div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;</div>
<div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;            <span class="comment">//find sum, min and max</span></div>
<div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;            weightSum+=m_weights[partCount];</div>
<div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;            <span class="keywordflow">if</span>(m_weights[partCount]&gt;maxWeight)</div>
<div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;                maxWeight=m_weights[partCount];</div>
<div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;            <span class="keywordflow">if</span>(m_weights[partCount]&lt;minWeight)</div>
<div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;                minWeight=m_weights[partCount];</div>
<div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;            partCount++;</div>
<div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;        }</div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;        <span class="keywordflow">if</span>(partCount==numOfParticles)</div>
<div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;    }</div>
<div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;</div>
<div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;    <span class="comment">//normalize weights</span></div>
<div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i=0;i&lt;m_newParticleSetPtr-&gt;size();i++){</div>
<div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;</div>
<div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;        m_weights[i]/=weightSum; <span class="comment">// make sum of weights = 1</span></div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;        <span class="comment">//m_weights[i]=(m_weights[i]-minWeight)/(maxWeight-minWeight); //min-max normalization</span></div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;        <span class="comment">//m_weights[i]=((m_weights[i]-minWeight)/(maxWeight-minWeight))/(weightSum-numOfParticles*minWeight);//min-max normalization and make sum of weights = 1</span></div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;</div>
<div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;    }</div>
<div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;}</div>
<div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;</div>
<div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> TImg,<span class="keyword">class</span> TObj&gt;</div>
<div class="line"><a name="l01033"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#a24876b4e0404782477453810f53fde0b"> 1033</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#a24876b4e0404782477453810f53fde0b">AbstractParticleFilteringTracker&lt;TImg,TObj&gt;::reset</a>(<span class="keyword">const</span> TObj&amp; initialObj){</div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> numParticles = m_particleSet2.size();</div>
<div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;</div>
<div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;    <span class="comment">//Reset particles</span></div>
<div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;    m_particleSet1 = std::vector&lt;TObj&gt;(m_particleSet2.size(),initialObj);</div>
<div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;    m_newParticleSetPtr=&amp;m_particleSet1;</div>
<div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;    m_oldParticleSetPtr=&amp;m_particleSet2;</div>
<div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;</div>
<div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;    <span class="comment">//Reset weights</span></div>
<div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;    m_weights = std::vector&lt;double&gt;(numParticles,1.0/numParticles);</div>
<div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;</div>
<div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;    <span class="comment">//Reset current track</span></div>
<div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;    m_currentTrack=initialObj;</div>
<div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;    this-&gt;m_lostTrack=<span class="keyword">false</span>;</div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;}</div>
<div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;</div>
<div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;</div>
<div class="line"><a name="l01058"></a><span class="lineno"><a class="line" href="class_vision_core_1_1_abstractions_1_1_vision_helpper.html"> 1058</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_vision_core_1_1_abstractions_1_1_vision_helpper.html">VisionHelpper</a></div>
<div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;{</div>
<div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;    <span class="keyword">static</span> std::string getAsCsvString(<span class="keyword">const</span> T&amp; obj){</div>
<div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;        <span class="comment">//the default implementation do nothing.</span></div>
<div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;    }</div>
<div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;</div>
<div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> T1, <span class="keyword">class</span> T2&gt;</div>
<div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">double</span> similarity(<span class="keyword">const</span> T1&amp; obj1,<span class="keyword">const</span> T2&amp; obj2){</div>
<div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;        <span class="comment">//the default implementation do nothing.</span></div>
<div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;        <span class="keywordflow">return</span> 0.0;</div>
<div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;    }</div>
<div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;};</div>
<div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;</div>
<div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;} <span class="comment">//namespace Abstractions</span></div>
<div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespace_vision_core_1_1_abstractions.html">VisionCore::Abstractions</a>;</div>
<div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;} <span class="comment">//namespace VisionCore</span></div>
<div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;</div>
<div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;<span class="preprocessor">#endif // ndef _VISIONABSTRACTIONS_H</span></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_tracker_logger_html_a0f269bca8139be827d8f673bed676f60"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a0f269bca8139be827d8f673bed676f60">VisionCore::Abstractions::TrackerLogger::resetLog</a></div><div class="ttdeci">void resetLog()</div><div class="ttdoc">Clears all log data. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00805">VisionAbstractions.h:805</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_logger_html_a771726ddd27137968dca04476b723beb"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a771726ddd27137968dca04476b723beb">VisionCore::Abstractions::DetectorLogger::m_detector</a></div><div class="ttdeci">const Detector&lt; TImg, TObj &gt; * m_detector</div><div class="ttdoc">Detector used to detect objects. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00469">VisionAbstractions.h:469</a></div></div>
<div class="ttc" id="struct_vision_core_1_1_abstractions_1_1_tracking_data_html_ae22cad4c6d0a00d3e063b94222214f03"><div class="ttname"><a href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#ae22cad4c6d0a00d3e063b94222214f03">VisionCore::Abstractions::TrackingData::gltDuration</a></div><div class="ttdeci">std::chrono::milliseconds gltDuration</div><div class="ttdoc">Get last track processing time, in milliseconds. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00632">VisionAbstractions.h:632</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker_html_a9ef9b851a62552f9937d57068bb8da8f"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#a9ef9b851a62552f9937d57068bb8da8f">VisionCore::Abstractions::AbstractParticleFilteringTracker::AbstractParticleFilteringTracker</a></div><div class="ttdeci">AbstractParticleFilteringTracker(const TObj &amp;initialObj=TObj(), const unsigned int numParticles=100)</div><div class="ttdoc">Constructor method. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00892">VisionAbstractions.h:892</a></div></div>
<div class="ttc" id="struct_vision_core_1_1_abstractions_1_1_tracking_data_html_ac112fbe77985f84f5c2079cb836225be"><div class="ttname"><a href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#ac112fbe77985f84f5c2079cb836225be">VisionCore::Abstractions::TrackingData::updateDuration</a></div><div class="ttdeci">std::chrono::milliseconds updateDuration</div><div class="ttdoc">Tracker update processing time, in milliseconds. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00629">VisionAbstractions.h:629</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker_html_afc00810bb20394cb52c201b9ac5215a2"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#afc00810bb20394cb52c201b9ac5215a2">VisionCore::Abstractions::AbstractAutoTracker::~AbstractAutoTracker</a></div><div class="ttdeci">virtual ~AbstractAutoTracker()</div><div class="ttdoc">Destructor method. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00092">VisionAbstractions.h:92</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_vision_helpper_html"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_vision_helpper.html">VisionCore::Abstractions::VisionHelpper</a></div><div class="ttdoc">This class defines some generic helper functions that can be overrided to provide key functionalities...</div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l01058">VisionAbstractions.h:1058</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker_html_af1a54610c9af7fb54d00e4be2e75609e"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#af1a54610c9af7fb54d00e4be2e75609e">VisionCore::Abstractions::AbstractParticleFilteringTracker::update</a></div><div class="ttdeci">virtual void update(const Frame&lt; TImg &gt; &amp;frame)</div><div class="ttdoc">Given an image (i.e. video frame), update the tracked objects. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00966">VisionAbstractions.h:966</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_tracker_logger_html_a59ce319514ddd7916f8962e25cc85869"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a59ce319514ddd7916f8962e25cc85869">VisionCore::Abstractions::TrackerLogger::unlockData</a></div><div class="ttdeci">void unlockData() const </div><div class="ttdoc">Unlocks the log data. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00697">VisionAbstractions.h:697</a></div></div>
<div class="ttc" id="struct_vision_core_1_1_data_structures_1_1_frame_html_a8531d354b20874961d98c796e3973b4d"><div class="ttname"><a href="struct_vision_core_1_1_data_structures_1_1_frame.html#a8531d354b20874961d98c796e3973b4d">VisionCore::DataStructures::Frame::getImg</a></div><div class="ttdeci">const TImg &amp; getImg() const </div><div class="ttdoc">Returns a reference to the frame image. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_data_structures_8h_source.html#l00084">VisionDataStructures.h:84</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_logger_html"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_logger.html">VisionCore::Abstractions::DetectorLogger</a></div><div class="ttdoc">Provides log functionalities for a detector. Stores results, processing times and statistics...</div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00463">VisionAbstractions.h:463</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker_html_a3744969d6f149aca80a8bd6e89be02d1"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a3744969d6f149aca80a8bd6e89be02d1">VisionCore::Abstractions::AbstractAutoTracker::m_detectPeriod</a></div><div class="ttdeci">double m_detectPeriod</div><div class="ttdoc">Time interval (in miliseconds) for running new detection. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00106">VisionAbstractions.h:106</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_tracker_logger_html"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html">VisionCore::Abstractions::TrackerLogger</a></div><div class="ttdoc">Provides log functionalities for a Tracker. Stores results, processing times and statistics. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00651">VisionAbstractions.h:651</a></div></div>
<div class="ttc" id="class_vision_core_1_1_interfaces_1_1_detector_html"><div class="ttname"><a href="class_vision_core_1_1_interfaces_1_1_detector.html">VisionCore::Interfaces::Detector</a></div><div class="ttdoc">Interface defining a generic object detector (e.g. faces, car, people). </div><div class="ttdef"><b>Definition:</b> <a href="_vision_interfaces_8h_source.html#l00125">VisionInterfaces.h:125</a></div></div>
<div class="ttc" id="class_vision_core_1_1_interfaces_1_1_identified_multi_tracker_html"><div class="ttname"><a href="class_vision_core_1_1_interfaces_1_1_identified_multi_tracker.html">VisionCore::Interfaces::IdentifiedMultiTracker</a></div><div class="ttdoc">A IdentifiedMultiTracker is a tracker for multiple objects, each having its own ID. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_interfaces_8h_source.html#l00226">VisionInterfaces.h:226</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_based_tracker_html_ad44c04b88eb540c185acb24172b47e29"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#ad44c04b88eb540c185acb24172b47e29">VisionCore::Abstractions::DetectorBasedTracker::getLastTrack</a></div><div class="ttdeci">virtual const std::vector&lt; TObj &gt; &amp; getLastTrack()</div><div class="ttdoc">Returns a reference to the current estimated object state. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00282">VisionAbstractions.h:282</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_logger_html_ab52843f46819e59162d432e25766d429"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#ab52843f46819e59162d432e25766d429">VisionCore::Abstractions::DetectorLogger::getData</a></div><div class="ttdeci">const std::vector&lt; DetectionData&lt; TObj &gt; &gt; &amp; getData() const </div><div class="ttdoc">Returns a vector with all detections data. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00506">VisionAbstractions.h:506</a></div></div>
<div class="ttc" id="namespacestd_html"><div class="ttname"><a href="namespacestd.html">std</a></div><div class="ttdoc">STL namespace. </div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_based_tracker_html_a5e56e46f08984f7e62a33e0bf4bb057d"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#a5e56e46f08984f7e62a33e0bf4bb057d">VisionCore::Abstractions::DetectorBasedTracker::m_detector</a></div><div class="ttdeci">Detector&lt; TImg, TObj &gt; * m_detector</div><div class="ttdoc">Detector used on every frame. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00273">VisionAbstractions.h:273</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker_html_a0a11a9660666ac4410b2e9590d949222"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a0a11a9660666ac4410b2e9590d949222">VisionCore::Abstractions::AbstractAutoTracker::m_lastDetectionTime</a></div><div class="ttdeci">double m_lastDetectionTime</div><div class="ttdoc">Time reference (in miliseconds) of last detection. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00103">VisionAbstractions.h:103</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_logger_html_a0f269bca8139be827d8f673bed676f60"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a0f269bca8139be827d8f673bed676f60">VisionCore::Abstractions::DetectorLogger::resetLog</a></div><div class="ttdeci">void resetLog()</div><div class="ttdoc">Clears all log data. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00600">VisionAbstractions.h:600</a></div></div>
<div class="ttc" id="struct_vision_core_1_1_abstractions_1_1_detection_data_html_ab01e2839a0bcd471d80ef46063083993"><div class="ttname"><a href="struct_vision_core_1_1_abstractions_1_1_detection_data.html#ab01e2839a0bcd471d80ef46063083993">VisionCore::Abstractions::DetectionData::result</a></div><div class="ttdeci">std::vector&lt; TObj &gt; result</div><div class="ttdoc">Detection output. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00442">VisionAbstractions.h:442</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_based_tracker_html_a7b9a9b9db5df041e366faef63e6594ef"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#a7b9a9b9db5df041e366faef63e6594ef">VisionCore::Abstractions::DetectorBasedTracker::~DetectorBasedTracker</a></div><div class="ttdeci">virtual ~DetectorBasedTracker()</div><div class="ttdoc">Destructor method. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00285">VisionAbstractions.h:285</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker_html_a5e56e46f08984f7e62a33e0bf4bb057d"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#a5e56e46f08984f7e62a33e0bf4bb057d">VisionCore::Abstractions::DetectorBasedMultiTracker::m_detector</a></div><div class="ttdeci">Detector&lt; TImg, TObj &gt; * m_detector</div><div class="ttdoc">Detector used on every frame. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00328">VisionAbstractions.h:328</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker_html_a0e0f9bebf9bf7ec1ff1bbac02ad9cca1"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#a0e0f9bebf9bf7ec1ff1bbac02ad9cca1">VisionCore::Abstractions::DetectorBasedMultiTracker::m_currentTrack</a></div><div class="ttdeci">std::map&lt; long, TObj &gt; m_currentTrack</div><div class="ttdoc">Stores the current tracked objects. Returned by method getLastTrack(). </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00325">VisionAbstractions.h:325</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker_html_a8afc7c56f236400edc420b0f6b830ea1"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a8afc7c56f236400edc420b0f6b830ea1">VisionCore::Abstractions::AbstractAutoTracker::m_objects</a></div><div class="ttdeci">std::map&lt; long, TObj &gt; m_objects</div><div class="ttdoc">Current tracked objects. This is the tracker output. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00109">VisionAbstractions.h:109</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker_html_ac7e0977fa702f98038bbe303df458a6c"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#ac7e0977fa702f98038bbe303df458a6c">VisionCore::Abstractions::DetectorBasedMultiTracker::lostTrack</a></div><div class="ttdeci">bool lostTrack() const </div><div class="ttdoc">Returns true if the tracker lost the object track. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00342">VisionAbstractions.h:342</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_tracker_logger_html_ac7e0977fa702f98038bbe303df458a6c"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#ac7e0977fa702f98038bbe303df458a6c">VisionCore::Abstractions::TrackerLogger::lostTrack</a></div><div class="ttdeci">bool lostTrack() const </div><div class="ttdoc">Returns true if the tracker lost the object track. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00820">VisionAbstractions.h:820</a></div></div>
<div class="ttc" id="struct_vision_core_1_1_abstractions_1_1_detection_data_html_a9c26a1638f116d3c0fba3f9342d67af1"><div class="ttname"><a href="struct_vision_core_1_1_abstractions_1_1_detection_data.html#a9c26a1638f116d3c0fba3f9342d67af1">VisionCore::Abstractions::DetectionData::duration</a></div><div class="ttdeci">std::chrono::milliseconds duration</div><div class="ttdoc">Processing time, in milliseconds. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00448">VisionAbstractions.h:448</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_logger_html_a19b6ea758a0d8c45cfee3859eb483b67"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a19b6ea758a0d8c45cfee3859eb483b67">VisionCore::Abstractions::DetectorLogger::averageDuration</a></div><div class="ttdeci">std::chrono::milliseconds averageDuration() const </div><div class="ttdoc">Returns the average processing duration. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00503">VisionAbstractions.h:503</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_tracker_logger_html_aa7880b2f2cfb2d3bdd15566a428becff"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#aa7880b2f2cfb2d3bdd15566a428becff">VisionCore::Abstractions::TrackerLogger::getData</a></div><div class="ttdeci">const std::vector&lt; TrackingData&lt; TObj &gt; &gt; &amp; getData() const </div><div class="ttdoc">Returns a vector with all tracking data. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00800">VisionAbstractions.h:800</a></div></div>
<div class="ttc" id="struct_vision_core_1_1_abstractions_1_1_tracking_data_html_af19c07021635b43df099e62283c93341"><div class="ttname"><a href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#af19c07021635b43df099e62283c93341">VisionCore::Abstractions::TrackingData::time</a></div><div class="ttdeci">std::chrono::high_resolution_clock::time_point time</div><div class="ttdoc">Timestamp when tracking was performed. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00626">VisionAbstractions.h:626</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker_html_a9c8e82bfdf34a35ef2eee54006181e5b"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#a9c8e82bfdf34a35ef2eee54006181e5b">VisionCore::Abstractions::DetectorBasedMultiTracker::getLastTrack</a></div><div class="ttdeci">const std::map&lt; long, TObj &gt; &amp; getLastTrack()</div><div class="ttdoc">Returns a reference to the current estimated object state. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00340">VisionAbstractions.h:340</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker_html_ac11a1371779c4e4b8b08c7044a92a3d4"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#ac11a1371779c4e4b8b08c7044a92a3d4">VisionCore::Abstractions::AbstractParticleFilteringTracker::~AbstractParticleFilteringTracker</a></div><div class="ttdeci">virtual ~AbstractParticleFilteringTracker()</div><div class="ttdoc">Destructor method. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00912">VisionAbstractions.h:912</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_logger_html_a864bbc1c90b2c0599463d65224c10e01"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a864bbc1c90b2c0599463d65224c10e01">VisionCore::Abstractions::DetectorLogger::m_dataMutex</a></div><div class="ttdeci">std::mutex m_dataMutex</div><div class="ttdoc">Mutex for the log data. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00487">VisionAbstractions.h:487</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker_html"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html">VisionCore::Abstractions::AbstractAutoTracker</a></div><div class="ttdoc">Implements a tracker that can automatically detect and track multiple objects by creating a individua...</div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00076">VisionAbstractions.h:76</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker_html_af1a54610c9af7fb54d00e4be2e75609e"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#af1a54610c9af7fb54d00e4be2e75609e">VisionCore::Abstractions::AbstractAutoTracker::update</a></div><div class="ttdeci">virtual void update(const Frame&lt; TImg &gt; &amp;frame)</div><div class="ttdoc">Updates the object position (state) given a new frame. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00163">VisionAbstractions.h:163</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_logger_html_a3fee8c1000dd122a52b2a95f82b0726c"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a3fee8c1000dd122a52b2a95f82b0726c">VisionCore::Abstractions::DetectorLogger::m_data</a></div><div class="ttdeci">std::vector&lt; DetectionData&lt; TObj &gt; &gt; m_data</div><div class="ttdoc">Internal storage for detection results. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00478">VisionAbstractions.h:478</a></div></div>
<div class="ttc" id="class_vision_core_1_1_evaluation_1_1_detector_evaluator_html_a3533b3afc49439cbb196506cffe867f8"><div class="ttname"><a href="class_vision_core_1_1_evaluation_1_1_detector_evaluator.html#a3533b3afc49439cbb196506cffe867f8">VisionCore::Evaluation::DetectorEvaluator::computeAssignmentOptimal</a></div><div class="ttdeci">static std::vector&lt; int &gt; computeAssignmentOptimal(double *W, int sizeD, int sizeGT)</div><div class="ttdoc">Runs the Hungarian algorithm to solve the optimal assignment problem. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_evaluation_8h_source.html#l00689">VisionEvaluation.h:689</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker_html"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html">VisionCore::Abstractions::AbstractParticleFilteringTracker</a></div><div class="ttdoc">Implements a particle filtering algorithm for generic tracking models. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00847">VisionAbstractions.h:847</a></div></div>
<div class="ttc" id="struct_vision_core_1_1_data_structures_1_1_frame_html_ab0e6d692261de323466e6b083a173e5e"><div class="ttname"><a href="struct_vision_core_1_1_data_structures_1_1_frame.html#ab0e6d692261de323466e6b083a173e5e">VisionCore::DataStructures::Frame::getTimestamp</a></div><div class="ttdeci">const double getTimestamp() const </div><div class="ttdoc">Returns the frame timestamp. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_data_structures_8h_source.html#l00101">VisionDataStructures.h:101</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker_html_afdfc24d8a5f14f873caf5e1d3ff55546"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#afdfc24d8a5f14f873caf5e1d3ff55546">VisionCore::Abstractions::AbstractAutoTracker::getLastTrack</a></div><div class="ttdeci">virtual const std::map&lt; long, TObj &gt; &amp; getLastTrack()</div><div class="ttdoc">Returns a reference to the current estimated object state. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00147">VisionAbstractions.h:147</a></div></div>
<div class="ttc" id="class_vision_core_1_1_interfaces_1_1_tracker_html"><div class="ttname"><a href="class_vision_core_1_1_interfaces_1_1_tracker.html">VisionCore::Interfaces::Tracker</a></div><div class="ttdoc">Interface defining a generic object tracker. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_interfaces_8h_source.html#l00165">VisionInterfaces.h:165</a></div></div>
<div class="ttc" id="struct_vision_core_1_1_abstractions_1_1_tracking_data_html_ae48c78f8d08da8f1f99ba3367b241e28"><div class="ttname"><a href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#ae48c78f8d08da8f1f99ba3367b241e28">VisionCore::Abstractions::TrackingData::lostTrack</a></div><div class="ttdeci">bool lostTrack</div><div class="ttdoc">Lost track. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00623">VisionAbstractions.h:623</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker_html_a60f002795ee2555f25dc4f7a9a0845ce"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#a60f002795ee2555f25dc4f7a9a0845ce">VisionCore::Abstractions::AbstractParticleFilteringTracker::getLastTrack</a></div><div class="ttdeci">virtual const TObj &amp; getLastTrack()</div><div class="ttdoc">Returns a reference to the current estimated object state. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00918">VisionAbstractions.h:918</a></div></div>
<div class="ttc" id="namespace_vision_core_1_1_abstractions_html"><div class="ttname"><a href="namespace_vision_core_1_1_abstractions.html">VisionCore::Abstractions</a></div><div class="ttdoc">Generic computer vision methods and functionalities. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00056">VisionAbstractions.h:56</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker_html_a03660bad671c2ebfd95f6aa1ce28c052"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a03660bad671c2ebfd95f6aa1ce28c052">VisionCore::Abstractions::AbstractAutoTracker::AbstractAutoTracker</a></div><div class="ttdeci">AbstractAutoTracker()</div><div class="ttdoc">Default constructor method. No new detections will be made as the detector pointer will be NULL...</div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00135">VisionAbstractions.h:135</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker_html"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html">VisionCore::Abstractions::DetectorBasedMultiTracker</a></div><div class="ttdoc">A tracker that applies a detector on every frame. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00319">VisionAbstractions.h:319</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_based_tracker_html_af1a54610c9af7fb54d00e4be2e75609e"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#af1a54610c9af7fb54d00e4be2e75609e">VisionCore::Abstractions::DetectorBasedTracker::update</a></div><div class="ttdeci">virtual void update(const Frame&lt; TImg &gt; &amp;frame)</div><div class="ttdoc">Given an image (i.e. video frame), update the tracked object. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00298">VisionAbstractions.h:298</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_tracker_logger_html_a515e5ab772202771a2f0d3854dd0669a"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a515e5ab772202771a2f0d3854dd0669a">VisionCore::Abstractions::TrackerLogger::~TrackerLogger</a></div><div class="ttdeci">virtual ~TrackerLogger()</div><div class="ttdoc">Destructor method. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00682">VisionAbstractions.h:682</a></div></div>
<div class="ttc" id="struct_vision_core_1_1_abstractions_1_1_tracking_data_html_a3e29783a97919194b94c3f141ea12515"><div class="ttname"><a href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#a3e29783a97919194b94c3f141ea12515">VisionCore::Abstractions::TrackingData::trackNumber</a></div><div class="ttdeci">unsigned long trackNumber</div><div class="ttdoc">Tracking number (or ID) </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00617">VisionAbstractions.h:617</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker_html_ab6f751b645585a462d8d2faa6edfbd44"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#ab6f751b645585a462d8d2faa6edfbd44">VisionCore::Abstractions::DetectorBasedMultiTracker::~DetectorBasedMultiTracker</a></div><div class="ttdeci">virtual ~DetectorBasedMultiTracker()</div><div class="ttdoc">Destructor method. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00345">VisionAbstractions.h:345</a></div></div>
<div class="ttc" id="struct_vision_core_1_1_abstractions_1_1_tracking_data_html_a9bdd7269d8470d6cfd2ca094cf86e9ee"><div class="ttname"><a href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#a9bdd7269d8470d6cfd2ca094cf86e9ee">VisionCore::Abstractions::TrackingData::result</a></div><div class="ttdeci">TObj result</div><div class="ttdoc">Tracking output. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00620">VisionAbstractions.h:620</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_logger_html_a50968bdeed09c7b26cb46c839fe55a52"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a50968bdeed09c7b26cb46c839fe55a52">VisionCore::Abstractions::DetectorLogger::lockData</a></div><div class="ttdeci">void lockData() const </div><div class="ttdoc">Locks the log data. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00515">VisionAbstractions.h:515</a></div></div>
<div class="ttc" id="struct_vision_core_1_1_abstractions_1_1_detection_data_html"><div class="ttname"><a href="struct_vision_core_1_1_abstractions_1_1_detection_data.html">VisionCore::Abstractions::DetectionData</a></div><div class="ttdoc">Simple structure that stores data related to a detection (used in DetectionLogger). </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00436">VisionAbstractions.h:436</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_tracker_logger_html_a50968bdeed09c7b26cb46c839fe55a52"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a50968bdeed09c7b26cb46c839fe55a52">VisionCore::Abstractions::TrackerLogger::lockData</a></div><div class="ttdeci">void lockData() const </div><div class="ttdoc">Locks the log data. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00694">VisionAbstractions.h:694</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_logger_html_af5876c32c6e7321c66a0ab299d68a391"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#af5876c32c6e7321c66a0ab299d68a391">VisionCore::Abstractions::DetectorLogger::DetectorLogger</a></div><div class="ttdeci">DetectorLogger(Detector&lt; TImg, TObj &gt; *detector, const bool logImages=false)</div><div class="ttdoc">Constructor method. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00525">VisionAbstractions.h:525</a></div></div>
<div class="ttc" id="struct_vision_core_1_1_abstractions_1_1_tracking_data_html_a9c26a1638f116d3c0fba3f9342d67af1"><div class="ttname"><a href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html#a9c26a1638f116d3c0fba3f9342d67af1">VisionCore::Abstractions::TrackingData::duration</a></div><div class="ttdeci">std::chrono::milliseconds duration</div><div class="ttdoc">Total processing time, in milliseconds. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00635">VisionAbstractions.h:635</a></div></div>
<div class="ttc" id="struct_vision_core_1_1_abstractions_1_1_detection_data_html_a73f468ab2fffab197d80d2e02abe86ac"><div class="ttname"><a href="struct_vision_core_1_1_abstractions_1_1_detection_data.html#a73f468ab2fffab197d80d2e02abe86ac">VisionCore::Abstractions::DetectionData::detNumber</a></div><div class="ttdeci">unsigned long detNumber</div><div class="ttdoc">Detection number (or ID) </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00439">VisionAbstractions.h:439</a></div></div>
<div class="ttc" id="namespace_vision_core_html"><div class="ttname"><a href="namespace_vision_core.html">VisionCore</a></div><div class="ttdoc">Contains the core functionalities of CvWorks. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00054">VisionAbstractions.h:54</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker_html_af1a54610c9af7fb54d00e4be2e75609e"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#af1a54610c9af7fb54d00e4be2e75609e">VisionCore::Abstractions::DetectorBasedMultiTracker::update</a></div><div class="ttdeci">void update(const Frame&lt; TImg &gt; &amp;frame)</div><div class="ttdoc">Given an image (i.e. video frame), update the tracked object. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00359">VisionAbstractions.h:359</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_logger_html_a42fd53b3eb82054fad2ea40334e6f4f3"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a42fd53b3eb82054fad2ea40334e6f4f3">VisionCore::Abstractions::DetectorLogger::m_logImages</a></div><div class="ttdeci">bool m_logImages</div><div class="ttdoc">Flag indicating if the logger should store the images. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00472">VisionAbstractions.h:472</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_logger_html_aa20a7a964a4c6f898882498bde5c02cf"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#aa20a7a964a4c6f898882498bde5c02cf">VisionCore::Abstractions::DetectorLogger::m_detCount</a></div><div class="ttdeci">unsigned long m_detCount</div><div class="ttdoc">Internal count for detections. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00475">VisionAbstractions.h:475</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_tracker_logger_html_a00d98127ef543d4faa377076168e9575"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a00d98127ef543d4faa377076168e9575">VisionCore::Abstractions::TrackerLogger::TrackerLogger</a></div><div class="ttdeci">TrackerLogger(Tracker&lt; TImg, TObj &gt; *tracker, const bool logImages=false)</div><div class="ttdoc">Constructor method. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00713">VisionAbstractions.h:713</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_logger_html_a7a25babdd801ae1a4d4365a70af3032d"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a7a25babdd801ae1a4d4365a70af3032d">VisionCore::Abstractions::DetectorLogger::writeToFileAsCsv</a></div><div class="ttdeci">bool writeToFileAsCsv(const std::string fileName)</div><div class="ttdoc">Write the data to file as CSV. Uses method VisionHelpper::getAsCsvString(TObj x). ...</div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00570">VisionAbstractions.h:570</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_tracker_logger_html_a60f002795ee2555f25dc4f7a9a0845ce"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a60f002795ee2555f25dc4f7a9a0845ce">VisionCore::Abstractions::TrackerLogger::getLastTrack</a></div><div class="ttdeci">const TObj &amp; getLastTrack()</div><div class="ttdoc">Returns a reference to the current estimated object state. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00815">VisionAbstractions.h:815</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_based_tracker_html"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html">VisionCore::Abstractions::DetectorBasedTracker</a></div><div class="ttdoc">A simple tracker that applies a detector on every frame. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00264">VisionAbstractions.h:264</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_logger_html_a1f2edd31854cbaeed7db844d4e5bcbfc"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a1f2edd31854cbaeed7db844d4e5bcbfc">VisionCore::Abstractions::DetectorLogger::detect</a></div><div class="ttdeci">std::vector&lt; TObj &gt; detect(const TImg &amp;img) const </div><div class="ttdoc">Detects objects in the image and returns a vector with the detected objects. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00537">VisionAbstractions.h:537</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_based_tracker_html_aa6d92b5626575a0b8c680cc65065d657"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#aa6d92b5626575a0b8c680cc65065d657">VisionCore::Abstractions::DetectorBasedTracker::m_currentTrack</a></div><div class="ttdeci">std::vector&lt; TObj &gt; m_currentTrack</div><div class="ttdoc">Stores the current tracked objects. Returned by method getLastTrack(). </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00270">VisionAbstractions.h:270</a></div></div>
<div class="ttc" id="struct_vision_core_1_1_abstractions_1_1_tracking_data_html"><div class="ttname"><a href="struct_vision_core_1_1_abstractions_1_1_tracking_data.html">VisionCore::Abstractions::TrackingData</a></div><div class="ttdoc">Simple structure that stores data related to tracking. Used in TrackerLogger. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00614">VisionAbstractions.h:614</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker_html_a1a1d90f1a87b6b645974c711686c14da"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#a1a1d90f1a87b6b645974c711686c14da">VisionCore::Abstractions::DetectorBasedMultiTracker::DetectorBasedMultiTracker</a></div><div class="ttdeci">DetectorBasedMultiTracker(Detector&lt; TImg, TObj &gt; *detector)</div><div class="ttdoc">Constructor method. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00350">VisionAbstractions.h:350</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker_html_a5e56e46f08984f7e62a33e0bf4bb057d"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a5e56e46f08984f7e62a33e0bf4bb057d">VisionCore::Abstractions::AbstractAutoTracker::m_detector</a></div><div class="ttdeci">Detector&lt; TImg, TObj &gt; * m_detector</div><div class="ttdoc">Object detector used to periodically find new objects. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00097">VisionAbstractions.h:97</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker_html_a24876b4e0404782477453810f53fde0b"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_abstract_particle_filtering_tracker.html#a24876b4e0404782477453810f53fde0b">VisionCore::Abstractions::AbstractParticleFilteringTracker::reset</a></div><div class="ttdeci">virtual void reset(const TObj &amp;initialObj)</div><div class="ttdoc">Reset the tracked object to a known state. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l01033">VisionAbstractions.h:1033</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_logger_html_a59ce319514ddd7916f8962e25cc85869"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a59ce319514ddd7916f8962e25cc85869">VisionCore::Abstractions::DetectorLogger::unlockData</a></div><div class="ttdeci">void unlockData() const </div><div class="ttdoc">Unlocks the log data. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00518">VisionAbstractions.h:518</a></div></div>
<div class="ttc" id="struct_vision_core_1_1_abstractions_1_1_detection_data_html_af19c07021635b43df099e62283c93341"><div class="ttname"><a href="struct_vision_core_1_1_abstractions_1_1_detection_data.html#af19c07021635b43df099e62283c93341">VisionCore::Abstractions::DetectionData::time</a></div><div class="ttdeci">std::chrono::high_resolution_clock::time_point time</div><div class="ttdoc">Timestamp when detection was performed. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00445">VisionAbstractions.h:445</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_based_tracker_html_ac8c932875d28df6cd06039f0df54b79e"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_based_tracker.html#ac8c932875d28df6cd06039f0df54b79e">VisionCore::Abstractions::DetectorBasedTracker::DetectorBasedTracker</a></div><div class="ttdeci">DetectorBasedTracker(Detector&lt; TImg, TObj &gt; *detector)</div><div class="ttdoc">Constructor method. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00290">VisionAbstractions.h:290</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_tracker_logger_html_af1a54610c9af7fb54d00e4be2e75609e"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#af1a54610c9af7fb54d00e4be2e75609e">VisionCore::Abstractions::TrackerLogger::update</a></div><div class="ttdeci">void update(const Frame&lt; TImg &gt; &amp;frame)</div><div class="ttdoc">Updates the object position (state) given a new frame. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00755">VisionAbstractions.h:755</a></div></div>
<div class="ttc" id="struct_vision_core_1_1_data_structures_1_1_frame_html"><div class="ttname"><a href="struct_vision_core_1_1_data_structures_1_1_frame.html">VisionCore::DataStructures::Frame</a></div><div class="ttdoc">A Frame contains an image, number and timestamp from a video sequence. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_data_structures_8h_source.html#l00057">VisionDataStructures.h:57</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_tracker_logger_html_a7a25babdd801ae1a4d4365a70af3032d"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a7a25babdd801ae1a4d4365a70af3032d">VisionCore::Abstractions::TrackerLogger::writeToFileAsCsv</a></div><div class="ttdeci">bool writeToFileAsCsv(const std::string fileName)</div><div class="ttdoc">Write the data to file as CSV. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00724">VisionAbstractions.h:724</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_logger_html_a0b3be8372825e4a3e7fe9d04aafd923e"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a0b3be8372825e4a3e7fe9d04aafd923e">VisionCore::Abstractions::DetectorLogger::m_cumDuration</a></div><div class="ttdeci">std::chrono::milliseconds m_cumDuration</div><div class="ttdoc">Cummulative processing time of all detections. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00484">VisionAbstractions.h:484</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_tracker_logger_html_a19b6ea758a0d8c45cfee3859eb483b67"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_tracker_logger.html#a19b6ea758a0d8c45cfee3859eb483b67">VisionCore::Abstractions::TrackerLogger::averageDuration</a></div><div class="ttdeci">std::chrono::milliseconds averageDuration() const </div><div class="ttdoc">Returns the average processing duration. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00795">VisionAbstractions.h:795</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_logger_html_a7197cfe2509322e00d3b8e1d2deda792"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#a7197cfe2509322e00d3b8e1d2deda792">VisionCore::Abstractions::DetectorLogger::~DetectorLogger</a></div><div class="ttdeci">virtual ~DetectorLogger()</div><div class="ttdoc">Destructor method. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00500">VisionAbstractions.h:500</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker_html_a1ac65c40264a42b7c9af36bb470fcc3a"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_based_multi_tracker.html#a1ac65c40264a42b7c9af36bb470fcc3a">VisionCore::Abstractions::DetectorBasedMultiTracker::m_trackCount</a></div><div class="ttdeci">long m_trackCount</div><div class="ttdoc">Internal counter for identifying new tracked objects. </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00331">VisionAbstractions.h:331</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_detector_logger_html_aebfc182cead05fb2cb6d30ffd33eabd3"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_detector_logger.html#aebfc182cead05fb2cb6d30ffd33eabd3">VisionCore::Abstractions::DetectorLogger::m_imgs</a></div><div class="ttdeci">std::map&lt; unsigned long, TImg &gt; m_imgs</div><div class="ttdoc">Internal storage for images (used only im m_logImages is enabled) </div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00481">VisionAbstractions.h:481</a></div></div>
<div class="ttc" id="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker_html_a6e6d6b320c1ead138321166ebb40faac"><div class="ttname"><a href="class_vision_core_1_1_abstractions_1_1_abstract_auto_tracker.html#a6e6d6b320c1ead138321166ebb40faac">VisionCore::Abstractions::AbstractAutoTracker::m_trackers</a></div><div class="ttdeci">std::list&lt; std::pair&lt; long, Tracker&lt; TImg, TObj &gt; * &gt; &gt; m_trackers</div><div class="ttdoc">List with trackers and their respective IDs (each tracker is assumed to track a unique object)...</div><div class="ttdef"><b>Definition:</b> <a href="_vision_abstractions_8h_source.html#l00100">VisionAbstractions.h:100</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_c6310732a22f63c0c2fc5595561e68f1.html">Core</a></li><li class="navelem"><a class="el" href="dir_7411681241ba4f62f2be9ca0b1fd3322.html">Vision</a></li><li class="navelem"><b>VisionAbstractions.h</b></li>
    <li class="footer">Generated on Wed Nov 18 2015 11:12:07 for CvWorks by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
