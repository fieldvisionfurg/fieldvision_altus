<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>CvWorks: BinaryClassifierEvalResult Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="C3.jpg"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">CvWorks
   &#160;<span id="projectnumber">0.4</span>
   </div>
   <div id="projectbrief">Computer Vision Framework</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="inherits.html"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result-members.html">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">BinaryClassifierEvalResult Struct Reference<div class="ingroups"><a class="el" href="group___core.html">Core</a> &raquo; <a class="el" href="group___evaluation.html">Evaluation</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Data structure that stores the statistics and evaluation data for a binary classifier.  
 <a href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_vision_evaluation_8h_source.html">VisionEvaluation.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for BinaryClassifierEvalResult:</div>
<div class="dyncontent">
<div class="center"><img src="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result__coll__graph.png" border="0" usemap="#_binary_classifier_eval_result_coll__map" alt="Collaboration graph"/></div>
<map name="_binary_classifier_eval_result_coll__map" id="_binary_classifier_eval_result_coll__map">
</map>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a56ffb62efd16fc45f18938e1fcdb2375"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a56ffb62efd16fc45f18938e1fcdb2375"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#a56ffb62efd16fc45f18938e1fcdb2375">BinaryClassifierEvalResult</a> ()</td></tr>
<tr class="memdesc:a56ffb62efd16fc45f18938e1fcdb2375"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default contructor. <br /></td></tr>
<tr class="separator:a56ffb62efd16fc45f18938e1fcdb2375"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a3106f64e0c19391502195e9d87ef882d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3106f64e0c19391502195e9d87ef882d"></a>
unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#a3106f64e0c19391502195e9d87ef882d">detectionCount</a></td></tr>
<tr class="memdesc:a3106f64e0c19391502195e9d87ef882d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Total number of tested instances. <br /></td></tr>
<tr class="separator:a3106f64e0c19391502195e9d87ef882d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2376a6d0e1290c06595de6d5de9cd7d2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2376a6d0e1290c06595de6d5de9cd7d2"></a>
unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#a2376a6d0e1290c06595de6d5de9cd7d2">negCount</a></td></tr>
<tr class="memdesc:a2376a6d0e1290c06595de6d5de9cd7d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of negative instances. <br /></td></tr>
<tr class="separator:a2376a6d0e1290c06595de6d5de9cd7d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c917d6fa9d6dcd308a3b44f376a580e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4c917d6fa9d6dcd308a3b44f376a580e"></a>
unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#a4c917d6fa9d6dcd308a3b44f376a580e">posCount</a></td></tr>
<tr class="memdesc:a4c917d6fa9d6dcd308a3b44f376a580e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of positive instances. <br /></td></tr>
<tr class="separator:a4c917d6fa9d6dcd308a3b44f376a580e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37d9752b7bc1fe547579c3d34350d789"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a37d9752b7bc1fe547579c3d34350d789"></a>
unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#a37d9752b7bc1fe547579c3d34350d789">falsePosCount</a></td></tr>
<tr class="memdesc:a37d9752b7bc1fe547579c3d34350d789"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of false positives. <br /></td></tr>
<tr class="separator:a37d9752b7bc1fe547579c3d34350d789"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a724b2694d3cdc8174e9bf3980f6b6e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3a724b2694d3cdc8174e9bf3980f6b6e"></a>
unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#a3a724b2694d3cdc8174e9bf3980f6b6e">falseNegCount</a></td></tr>
<tr class="memdesc:a3a724b2694d3cdc8174e9bf3980f6b6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of false negatives. <br /></td></tr>
<tr class="separator:a3a724b2694d3cdc8174e9bf3980f6b6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab14e03e0a494c8495d3cff1629fed7ca"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab14e03e0a494c8495d3cff1629fed7ca"></a>
unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#ab14e03e0a494c8495d3cff1629fed7ca">truePosCount</a></td></tr>
<tr class="memdesc:ab14e03e0a494c8495d3cff1629fed7ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of true positives. <br /></td></tr>
<tr class="separator:ab14e03e0a494c8495d3cff1629fed7ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b82bda4b18441fe2758efc93fb66cc3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7b82bda4b18441fe2758efc93fb66cc3"></a>
unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#a7b82bda4b18441fe2758efc93fb66cc3">trueNegCount</a></td></tr>
<tr class="memdesc:a7b82bda4b18441fe2758efc93fb66cc3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of true negatives. <br /></td></tr>
<tr class="separator:a7b82bda4b18441fe2758efc93fb66cc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e55b938786bd86846860397d25c10bd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6e55b938786bd86846860397d25c10bd"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#a6e55b938786bd86846860397d25c10bd">accuracy</a></td></tr>
<tr class="memdesc:a6e55b938786bd86846860397d25c10bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Accuracy <br />
 \( ACC = \frac{TP+TN}{P+N} \). <br /></td></tr>
<tr class="separator:a6e55b938786bd86846860397d25c10bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fb25e19c2b2cfc018d2ef6cdf7947e3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0fb25e19c2b2cfc018d2ef6cdf7947e3"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#a0fb25e19c2b2cfc018d2ef6cdf7947e3">recall</a></td></tr>
<tr class="memdesc:a0fb25e19c2b2cfc018d2ef6cdf7947e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recall (Sensitivity/ Hit Rate) <br />
 \( TPR = \frac{TP}{P} \). <br /></td></tr>
<tr class="separator:a0fb25e19c2b2cfc018d2ef6cdf7947e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad6585357e6c67247c6fefc19d496272"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aad6585357e6c67247c6fefc19d496272"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#aad6585357e6c67247c6fefc19d496272">specificity</a></td></tr>
<tr class="memdesc:aad6585357e6c67247c6fefc19d496272"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specificity <br />
 \( SPC = \frac{TN}{N} \). <br /></td></tr>
<tr class="separator:aad6585357e6c67247c6fefc19d496272"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98ce42142601aa81694132ce8af84e8b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a98ce42142601aa81694132ce8af84e8b"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#a98ce42142601aa81694132ce8af84e8b">precision</a></td></tr>
<tr class="memdesc:a98ce42142601aa81694132ce8af84e8b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Precision or positive predictive value (correct detections) <br />
 \( PPV = \frac{TP}{TP+FP} \). <br /></td></tr>
<tr class="separator:a98ce42142601aa81694132ce8af84e8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f35bc80bfff53daa8746f9b7cbcb3a2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2f35bc80bfff53daa8746f9b7cbcb3a2"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#a2f35bc80bfff53daa8746f9b7cbcb3a2">npv</a></td></tr>
<tr class="memdesc:a2f35bc80bfff53daa8746f9b7cbcb3a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Negative predictive value (the percent of negatives that are correctly classified) <br />
 \( NPV = \frac{TN}{TN+FN} \). <br /></td></tr>
<tr class="separator:a2f35bc80bfff53daa8746f9b7cbcb3a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc38975fd884497b24f52b828cec9f1b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abc38975fd884497b24f52b828cec9f1b"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#abc38975fd884497b24f52b828cec9f1b">fallout</a></td></tr>
<tr class="memdesc:abc38975fd884497b24f52b828cec9f1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fall-out or false positive rate <br />
 \( FPR = \frac{FP}{N} \). <br /></td></tr>
<tr class="separator:abc38975fd884497b24f52b828cec9f1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b55320813a56a9e113b23525e17f574"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4b55320813a56a9e113b23525e17f574"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#a4b55320813a56a9e113b23525e17f574">fdr</a></td></tr>
<tr class="memdesc:a4b55320813a56a9e113b23525e17f574"><td class="mdescLeft">&#160;</td><td class="mdescRight">False discovery rate <br />
 \( FDR = \frac{FP}{FP+TP} \). <br /></td></tr>
<tr class="separator:a4b55320813a56a9e113b23525e17f574"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f9dbff026930716e4e219ce2d94b6f1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2f9dbff026930716e4e219ce2d94b6f1"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#a2f9dbff026930716e4e219ce2d94b6f1">fnr</a></td></tr>
<tr class="memdesc:a2f9dbff026930716e4e219ce2d94b6f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">False negative rate <br />
 \( FNR = \frac{FN}{FN + TP} \). <br /></td></tr>
<tr class="separator:a2f9dbff026930716e4e219ce2d94b6f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71afe1789388eaf7cf65d0de39800e5d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a71afe1789388eaf7cf65d0de39800e5d"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#a71afe1789388eaf7cf65d0de39800e5d">mcc</a></td></tr>
<tr class="memdesc:a71afe1789388eaf7cf65d0de39800e5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Matthews correlation coefficient is used in machine learning as a measure of the quality of binary (two-class) classifications. <br />
 \( MCC = \frac{TP \times TN - FP \times FN}{\sqrt{(TP+FP)(TP+FN)(TN+FP)(TN+FN)}} \). <br /></td></tr>
<tr class="separator:a71afe1789388eaf7cf65d0de39800e5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8bfb2aa00ec18131ea1b1f9383a8c8f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac8bfb2aa00ec18131ea1b1f9383a8c8f"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html#ac8bfb2aa00ec18131ea1b1f9383a8c8f">f1score</a></td></tr>
<tr class="memdesc:ac8bfb2aa00ec18131ea1b1f9383a8c8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">F1 score (is the harmonic mean of precision and recall) <br />
 \( F_{1} = \frac{2 \times PPV \times TPR}{PPV + TPR} \). <br /></td></tr>
<tr class="separator:ac8bfb2aa00ec18131ea1b1f9383a8c8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Data structure that stores the statistics and evaluation data for a binary classifier. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_vision_core_1_1_evaluation_1_1_binary_classifier_evaluator.html">BinaryClassifierEvaluator</a> </dd></dl>

<p>Definition at line <a class="el" href="_vision_evaluation_8h_source.html#l00779">779</a> of file <a class="el" href="_vision_evaluation_8h_source.html">VisionEvaluation.h</a>.</p>
</div><hr/>The documentation for this struct was generated from the following file:<ul>
<li>D:/FURG/Software/CvWorksRelease1/Core/Vision/<a class="el" href="_vision_evaluation_8h_source.html">VisionEvaluation.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespace_vision_core.html">VisionCore</a></li><li class="navelem"><a class="el" href="namespace_vision_core_1_1_evaluation.html">Evaluation</a></li><li class="navelem"><a class="el" href="struct_vision_core_1_1_evaluation_1_1_binary_classifier_eval_result.html">BinaryClassifierEvalResult</a></li>
    <li class="footer">Generated on Wed Nov 18 2015 11:12:11 for CvWorks by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
